{
  "version": 3,
  "sources": [
    "C:/Users/ludko/source/repos/scholtz/AVMSatoshiDice/projects/AVMSatoshiDice/smart_contracts/avm_satoshi_dice/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA8mBG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAllBH;;;AAAA;;;AAklBG;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AApEA;;AAAA;AAAA;AAAA;;AAAA;AA9gBH;;;AAAA;;;AAAA;;;AAAA;;;AA8gBG;;;AAAA;;AA5DA;;AAAA;AAAA;AAAA;;AAAA;AAldH;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAkdG;;;AAAA;;AA5DA;;AAAA;AAAA;AAAA;;AAAA;AAtZH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAsZG;;;AAAA;;AAxEA;;AAAA;AAAA;AAAA;;AAAA;AA9UH;;;AAAA;;;AAAA;;;AA8UG;;;AAAA;;AA5DA;;AAAA;AAAA;AAAA;;AAAA;AAlRH;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAkRG;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAxPH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAwPG;;;AAAA;;AA1DA;;AAAA;AAAA;AAAA;;AAAA;AA9LH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AA8LG;;;AAAA;;AAxIA;;AAAA;AAAA;AAAA;;AAAA;AAtDH;;;AAAA;;;AAAA;;;AAAA;;;AAsDG;;;AAAA;;AAjCA;;AAAA;AAAA;AAAA;;AAAA;AArBH;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAqBG;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AATA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAZH;;;AAAA;;;AAYG;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAZH;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAYE;;;AAEgB;;AAAuB;;AAA9B;AAAP;AANmC;;;;;;;AAOnC;;AAAA;AACO;AAAP;AAKF;;;AAUgB;;AAAuB;;AAA9B;AAAP;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAAA;;;AAWnB;AAWF;;;;;;;;;;AAEc;;AAEa;;AAFb;AAvDqD;AAAA;AAAA;AAAA;AA4D7C;AAAA;;AAApB;;;AAC+B;;AAAA;AAAA;AAAA;;AAAA;AAGzB;;AAAmC;;AAAnC;;;;;AAAJ;;;AACgC;;AAAA;;;AAAA;;AAE1B;;AAAA;AAAgD;;;AAAjC;AACf;;AAAA;AAAyB;AAAzB;AAAA;;AAAA;;AAGC;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAAA;AADF;AAK6C;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAzEwD;;AAAA;;AAAA;AA0EiB;AAAA;AAAA;AAA1B;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;AAES;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AACE;AAEY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AAE7B;;;;;;;;;;AAJV;;;AAKS;;;AALT;AASO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAW;AAApB;;;AACE;AAE4B;;AAAR;AAAQ;AACX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AAElC;;;;;;;;;;;;AALV;;;;AAMS;;;AANT;AAUO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AAEE;AAEwB;;AAAR;AAAQ;AACwD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEtE;;;;AAFI;;;;;;;;;;;;AAHd;;;;AAIS;;;AAJT;;AAWS;;AAAuB;;AAA9B;AAAJ;AAGc;;AAAA;AAAA;AAAA;;AAAZ;;;AAEW;;AAA0B;;AAAA;AAC1B;;AAA0B;;AAAA;AADjC;AAnHkD;;AAAA;;AAAA;AAqHZ;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAoD;AAHhD;;AAAA;AACJ;AADI;AAAA;;AAIkB;AAAjB;;AAAA;AAAP;AACuB;;AAAA;AAA2B;;;;AAClD;;;;;;;;;AAIA;AAEY;AAAsB;AAExB;;;;;;;;;;AAJV;;;AAKS;;;AALT;;AAQuB;;;AAAA;AAAlB;;;AAeL;AAKU;;;;AAFI;;;;;;;;;;;;;;;;AAHd;;;;AAIS;;;AAJT;;AAUqD;;AAArC;;AAAA;;AAAA;AA7JoC;;AAAA;;AAAA;AA8JmC;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAoD;AAA/F;;AAAA;AAAiC;AAAjC;AAAA;;AACkB;AAAjB;;AAAA;AAAP;AACuB;;AAAA;AAA2B;;;;AAClD;;;;;;;;;AAIA;AAGiB;AAAsB;AAE7B;;;;;;;;;;;;;;AALV;;;;AAMS;;;AANT;;AAsBR;;;;;AAEQ;;AAAqC;;AAE3B;;AAAA;AAAU;;AAAnB;AAAP;AAE+B;;AAAA;;AAAzB;AAAkC;;AAApB;AACI;AACI;AAnM8B;;AAoM5B;AAAA;;AAA9B;;;AApM0D;;AAqMhB;AAAA;AAAA;;AAAA;AAG0B;;AAAA;AAAA;AAAA;;AAArB;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAxMwB;;AAwM1D;AAAA;AAEkB;;AAAA;;AAAoB;;AAA/B;AAAP;AAZgB;AAcJ;;AAAA;AA9MqD;AAAA;AAAA;AAAA;AAkN7C;AAAA;;AAApB;;;AACyB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAe;AAArC;AAAP;AACuB;AAAA;AAAA;AAAM;;;AArBf;AAqBP;AAAP;AAGmC;AAAA;AAAA;AAAM;;;AACI;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;;AAAA;AAAA;AACgB;AAAA;AAAA;AAAhB;;AAAA;;AAAA;;AAIW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMyB;;AAAnB;AAPA;AA7BH;AA6BG;AAIA;;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQC;AARD;AASF;AATE;AAUA;AAVA;AAYC;AAZD;AAWG;AAXH;AAAA;;AAAA;AAAA;;AAAA;AAiBjB;;AASJ;;;AAGe;;AAAA;;AAAoB;;AAA/B;AADF;AAIkB;;AAAA;;AAAW;;;;;AAAtB;AAAP;AAEY;;AAAkD;;AAAA;AAAA;AAAA;;AAAzD;;AAAA;;AAAD;;;AACF;AAI0B;;;;AADT;;;;;;;AAHjB;;;;AAKS;;;AALT;;AAiBJ;;;;;AAEQ;;AAAqC;;AAC3B;;AAAA;AAAU;;AAAnB;AAAP;AACuC;;AAAA;;AAAvB;AAAA;AAEe;;AAAA;;AAAzB;AAAuC;;AAAzB;AACI;AAAlB;AACsB;AAAxB;AAvRsD;;AAAA;AAAA;AAAA;AAwR5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAG0B;;AAAA;AAAA;AAAA;;AAArB;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAEkB;;AAAA;;AAAyB;;AAApC;AAAP;AAEY;;AAAA;;AAAA;AAlSqD;AAAA;AAAA;AAAA;AAsS7C;AAAA;;AAApB;;;AACyB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAe;;AAArC;AAAP;AACuB;AAAA;AAAA;AAAM;;;AAAtB;;AAAA;AAAP;AAGmC;AAAA;AAAA;AAAM;;;AACI;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;;AAAA;AAAA;AACgB;AAAA;AAAA;AAAhB;;AAAA;;AAAA;;AAIW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMyB;;AAAnB;AAPA;AAAA;;AAAA;AAIA;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQC;AARD;AASF;AATE;AAUA;AAVA;AAYC;AAZD;AAWG;AAXH;AAAA;;AAAA;AAAA;;AAAA;AAiBjB;;AAUJ;;;;AAEsC;;AACpB;;AAAA;AAAU;;AAAnB;AAAP;AAEM;;AAAuC;;;AAAxB;AACf;;AAAA;AAAmB;AACG;AAlV8B;;AAAA;;AAAA;AAAA;AAmV5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAGK;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAGA;AAEmB;;AAAA;AAGG;;AACG;;AAFnB;;;;;;;;;;;;;;;AAJN;;;;AAAA;;;AAAA;AAYY;;AAAA;;AAAA;AAxWqD;AAAA;AAAA;AAAA;AA4W7C;AAAA;;AAApB;;;AACyB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAe;AAArC;AAAP;AACuB;AAAA;AAAA;AAAM;;;AAAtB;;AAAA;AAAP;AAGmC;AAAA;AAAA;AAAM;;;AACI;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;;AAAA;AAAA;AACgB;AAAA;AAAA;AAAhB;;AAAA;;AAAA;;AAIW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMyB;;AAAnB;AAPA;AAAA;;AAAA;AAIA;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQC;AARD;AASF;AATE;AAUA;AAVA;AAYC;AAZD;AAWG;AAXH;AAAA;;AAAA;AAAA;;AAAA;AAiBjB;;AAYJ;;;;;;;AAMQ;;AAAqC;;AAArC;AAEK;;AAAJ;;AAAA;AAAP;AACY;;AAAA;;;AAAA;AAAA;;AAFI;AAET;AAAP;AA9ZiE;AAAA;;AAAA;AAAA;AAAA;;AA+ZzC;AAAA;AAAA;;AAAxB;AACwB;AAAA;AAAM;;;AAJd;AAIT;AAAP;AACsB;;AAAA;AAAA;AAAA;;AAAU;;AAAzB;AAAP;AAhasD;;AAAA;AAAA;AAAA;AAka/B;AAAA;;AAAvB;;;AAE4B;;AAAA;AAAA;AAAM;AAAM;AAAS;AAAxC;AAAP;AAKyD;;AAAnB;AAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAjB;AAAA;;AAAA;;AAAA;AAAA;AAKmD;;AAAA;;AAAA;AAAA;;AAAS;;AAApB;AAAD;;AAAA;AAAR;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEC;AAAA;AAAA;AAAM;;;AAAvB;AADF;AAK4B;AAAxB;;AAnbsD;;AAob5B;AAAA;;AAA9B;;;AApb0D;;AAqbhB;AAAA;AAAA;;AAAA;AAE0B;;AAAA;AAArB;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAvbwB;;AAub1D;AAAA;AAG4B;;AAAnB;AAGE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAES;;AAAA;;;AAJX;;AAFQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAUjB;;AAAA;AAAA;;AAYF;;;;;;;;AAMQ;;AAAqC;;AAArC;AACiC;;AAAA;;AAAvB;AAAA;AAAA;;AACL;;AAAJ;;AAAA;AAAP;AACY;;AAAA;;;AAAA;;AAAQ;;AAAR;AAAQ;AAAmB;;AAAA;AAAhC;AAAP;AA1diE;AAAA;;AAAA;AAAA;AAAA;;AA2dzC;AAAA;AAAA;;AAAxB;AACwB;AAAA;AAAM;;;AAAvB;;AAAA;AAAP;AACsB;;AAAA;AAAA;AAAA;;AAAU;;AAAzB;AAAP;AA5dsD;;AAAA;AAAA;AAAA;AA8d/B;AAAA;;AAAvB;;;AAE4B;;AAAA;AAAA;AAAM;AAAM;AAAS;AAAxC;AAAP;AAKyD;;AAAnB;AAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAjB;AAAA;;AAAA;;AAAA;AAAA;AAKmD;;AAAA;;AAAA;AAAA;;AAAc;;AAAzB;AAAD;;AAAA;AAAR;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEC;AAAA;AAAA;AAAM;;;AAAvB;AADF;AAK4B;AAAxB;;AA/esD;;AAAA;;AAAA;AAAA;AAAA;;AAgf5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAE0B;;AAAA;AAArB;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAG4B;;AAAnB;AAGE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAES;;AAAA;;;AAJX;;AAFQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAUjB;;AAAA;AAAA;;AAYF;;;;;;AAOsC;;AAA9B;AACM;;AAAA;;;AAAA;AAAA;;AAAL;;AAAA;AAAP;AArhBiE;AAAA;;AAAA;AAAA;AAAA;;AAshBzC;AAAA;AAAA;;AAAxB;AACwB;AAAA;AAAM;;;AAAvB;;AAAA;AAAP;AACsB;;AAAA;AAAA;AAAA;;AAAU;;AAAzB;AAAP;AAvhBsD;;AAAA;AAAA;AAAA;AAyhB/B;AAAA;;AAAvB;;;AAE4B;;AAAA;AAAA;AAAM;AAAM;AAAS;AAAxC;AAAP;AAMyD;;AAAnB;AAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAjB;AAAA;;AAAA;;AAAA;AAAA;AAKA;AAEwB;;AAAR;AAAQ;AAGF;;AACG;;AAFnB;;;;;;;;;;;;;;;AAJN;;;;AAAA;;;AAAA;AAYgC;;AAAwB;;AAAxB;AAAsC;;AAAA;AAAvC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEC;AAAA;AAAA;AAAM;;;AAAvB;AADF;AAK4B;AAAxB;;AAvjBsD;;AAAA;;AAAA;AAAA;AAAA;;AAwjB5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAEK;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAG4B;;AAAnB;AAGE;;AAAA;;AAAA;AAES;;AAAA;;;AAJX;;AAFQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAUjB;;AAAA;AAAA;;AAQF;;;AAEc;;AAAA;;AAAA;AAnlBqD;AAAA;AAAA;AAulB1C;AAAA;AAAA;;AAAvB;AACuB;AAAA;AAAvB;AAvlBsD;;AAgmBlB;;AAhmBkB;AAimB5B;AAAA;AAAA;;AAA1B;AAC0B;AAAA;AAA1B;AAUF;;;;;;;;;AAEsC;;AA9mBkB;;AA8mBhD;;AA9mBgD;AAAA;;AA+mB5B;AAAA;;AAA1B;AACgC;AAAA;AAAA;AAAA;;AAAA;AAGhB;AAAA;;;AACF;;AAAA;;;AAFF;AAAA;AAAA;;AAnnBqD;AAAA;AAAA;AAAA;AAAA;;AAunB1C;AAAA;AAAA;;AAAvB;AAC6B;AAAA;AAAA;;AAAA;AAIpB;;AAAM;AAAA;AAAgB;;AAAQ;;AAAf;AAApB;AAAJ;;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AACA;AAMoC;;AAAoB;AAApB;AAAjB;;AAEmB;;AAAf;AAGyB;;AAAf;AAAe;AAAA;AAAA;;AAAuB;;AAAT;;;AAAS;AAA3C;AAAqD;;AAAtD;AACf;AAAV;AAAJ;;;AAIU;;AAAA;;;AAAyB;;AAA9B;AAA4C;;AAAA;AAA7C;AADI;AAAA;;AAIe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAArB;;AAAA;AAAA;;AACsC;;AAAnB;AAAnB;;AAAA;AAAA;;AACqB;AAAA;;;AAAjB;;AAAA;;;;AAAJ;;;AACE;;AAAA;;AAAA;;AACyC;;AAAnB;AAAtB;;;;;;;;;AAGO;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AAG8B;AAAxB;;AACqB;;AAAA;;;AA1pB6B;;AAAA;AAAA;AAAA;AAAA;;AA0pBpB;AAAA;;AAAlC;;;AAC8C;;AAAA;AAAA;AAAA;;AAAA;AAEvC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AACmD;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAtC;;AAAA;AAAA;AAEY;;AAAA;;;AAAL;AAAA;;AAAA;AAAP;AAC6C;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAEmB;;AAAA;AAAA;AAAA;AAAc;;AAAjC;;AAAA;AAEA;AAEmB;;AACA;;AAAA;;;AACP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAuB;;;;;;;AAJnC;;;AAKS;;;AALT;AAUO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAW;AAApB;;;AAG8B;AAAxB;;AACqB;;AAAA;;;AAnrB6B;;AAAA;AAAA;AAAA;AAAA;;AAmrBpB;AAAA;;AAAlC;;;AAC8C;;AAAA;AAAA;AAAA;;AAAA;AAEvC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AACmD;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAtC;;AAAA;AAAA;AAEY;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAAA;AAAP;AAC6C;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAEmB;;AAAA;AAAA;AAAA;AAAc;;AAAjC;;AAAA;AAEA;AAEmB;;AACK;;AAAA;;;AACP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAuB;AACZ;;AAAR;AAAQ;;;;;;;;;AAL5B;;;;AAMS;;;AANT;AAUO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AAC8B;AAAxB;;AACqB;;AAAA;;;AA1sB6B;;AAAA;AAAA;AAAA;AAAA;;AA0sBpB;AAAA;;AAAlC;;;AAC8C;;AAAA;AAAA;AAAA;;AAAA;AAEvC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AACmD;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAtC;;AAAA;AAAA;AAEY;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAAA;AAAP;AAC6C;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAEmB;;AAAA;AAAA;AAAA;AAAc;;AAAjC;;AAAA;AAGA;AAEgB;AAAQ;AACmD;;AAAA;;;AAA7D;;;;;;;;;;;;AAHd;;;;AAIS;;;AAJT;;AAUF;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;AAIJ;;;AACoD;;AAAA;;;AAAsB;;AAAA;;;AAA3B;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvuBiC;AAAA;;AAAA;AAuuBjD;AAAA;AAAA;AAAhB;;AAAA;;AAAA;AAtuBsD;;AAAA;;AAAA;AAuuBnC;AAAA;AAAA;AAAc;;;;;;;;;;AAAjC;;AAAA;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 32 1 8 1000000 321 322 320"
    },
    "16": {
      "op": "bytecblock 0x00 0x0000000000000000000000000000000000000000000000000000000000000000 0x0000000000000000 \"g\" \"d\" 0x640000000000000000 \"p\" 0x151f7c75 0x80 \"user withdrawal\" 0xda7025b9 \"admin withdrawal\" 0x0000000000000001 0x0f4240 0x0000000000000002 0x4a968f8f"
    },
    "150": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "152": {
      "op": "bz main_bare_routing@18",
      "stack_out": []
    },
    "155": {
      "op": "pushbytess 0x70a65e89 0xc61d56f5 0x54cc696f 0x6b090bbe 0xe36e57bf 0x178c1f33 0xa2649a00 0xc4b5cfb1 0x6646eb4a 0x2553863f 0x53fe54e6 0x2a236e18 0x76e03d94 // method \"updateApplication(string)bool\", method \"sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[]\", method \"withdraw(address,uint256,uint64,bool)void\", method \"CreateGameWithNativeToken(pay,uint64)void\", method \"OptInToASA(pay,uint64)void\", method \"CreateGameWithASAToken(axfer,uint64)void\", method \"CreateGameWithArc200Token(uint64,uint256,uint64)void\", method \"StartGameWithNativeToken(pay,(uint64,address),uint64)void\", method \"StartGameWithASAToken(axfer,(uint64,address),uint64)void\", method \"StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)void\", method \"Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address)\", method \"MyGame()(uint64,uint64,uint64,uint256,uint64,address,address)\", method \"ClaimGame()void\"",
      "defined_out": [
        "Method(ClaimGame()void)",
        "Method(CreateGameWithASAToken(axfer,uint64)void)",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)void)",
        "Method(CreateGameWithNativeToken(pay,uint64)void)",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)void)",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)void)",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)void)",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(updateApplication(string)bool)",
        "Method(withdraw(address,uint256,uint64,bool)void)"
      ],
      "stack_out": [
        "Method(updateApplication(string)bool)",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(withdraw(address,uint256,uint64,bool)void)",
        "Method(CreateGameWithNativeToken(pay,uint64)void)",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(CreateGameWithASAToken(axfer,uint64)void)",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)void)",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)void)",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)void)",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)void)",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(ClaimGame()void)"
      ]
    },
    "222": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(ClaimGame()void)",
        "Method(CreateGameWithASAToken(axfer,uint64)void)",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)void)",
        "Method(CreateGameWithNativeToken(pay,uint64)void)",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)void)",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)void)",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)void)",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(updateApplication(string)bool)",
        "Method(withdraw(address,uint256,uint64,bool)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(updateApplication(string)bool)",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(withdraw(address,uint256,uint64,bool)void)",
        "Method(CreateGameWithNativeToken(pay,uint64)void)",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(CreateGameWithASAToken(axfer,uint64)void)",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)void)",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)void)",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)void)",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)void)",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(ClaimGame()void)",
        "tmp%2#0"
      ]
    },
    "225": {
      "op": "match main_updateApplication_route@3 main_sendOnlineKeyRegistration_route@4 main_withdraw_route@5 main_CreateGameWithNativeToken_route@6 main_OptInToASA_route@7 main_CreateGameWithASAToken_route@8 main_CreateGameWithArc200Token_route@9 main_StartGameWithNativeToken_route@10 main_StartGameWithASAToken_route@11 main_StartGameWithArc200Token_route@12 main_Game_route@13 main_MyGame_route@14 main_ClaimGame_route@15",
      "stack_out": []
    },
    "253": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "254": {
      "op": "return",
      "stack_out": []
    },
    "255": {
      "block": "main_ClaimGame_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "257": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "258": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "259": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "261": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "262": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.ClaimGame",
      "op": "callsub ClaimGame"
    },
    "265": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "266": {
      "op": "return",
      "stack_out": []
    },
    "267": {
      "block": "main_MyGame_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "269": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "270": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "271": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "273": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "274": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.MyGame",
      "op": "callsub MyGame",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "277": {
      "op": "bytec 7 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0",
        "0x151f7c75"
      ]
    },
    "279": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%72#0"
      ]
    },
    "280": {
      "op": "concat",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "281": {
      "op": "log",
      "stack_out": []
    },
    "282": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "283": {
      "op": "return",
      "stack_out": []
    },
    "284": {
      "block": "main_Game_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "286": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "287": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "288": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "290": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "291": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "294": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "297": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.Game",
      "op": "callsub Game",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "300": {
      "op": "bytec 7 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "0x151f7c75"
      ]
    },
    "302": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%66#0"
      ]
    },
    "303": {
      "op": "concat",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "304": {
      "op": "log",
      "stack_out": []
    },
    "305": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "306": {
      "op": "return",
      "stack_out": []
    },
    "307": {
      "block": "main_StartGameWithArc200Token_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "309": {
      "op": "!",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "310": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "311": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "313": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "314": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "317": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "320": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[40]%2#0",
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[40]%2#0"
      ]
    },
    "323": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[40]%2#0",
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[40]%2#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "326": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithArc200Token",
      "op": "callsub StartGameWithArc200Token",
      "stack_out": []
    },
    "329": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "330": {
      "op": "return",
      "stack_out": []
    },
    "331": {
      "block": "main_StartGameWithASAToken_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "333": {
      "op": "!",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "334": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "335": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "337": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "338": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "340": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0",
        "1"
      ]
    },
    "341": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "342": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "343": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "345": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "axfer"
      ]
    },
    "347": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "348": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "349": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0"
      ]
    },
    "352": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0",
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "355": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithASAToken",
      "op": "callsub StartGameWithASAToken",
      "stack_out": []
    },
    "358": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "359": {
      "op": "return",
      "stack_out": []
    },
    "360": {
      "block": "main_StartGameWithNativeToken_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "362": {
      "op": "!",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "363": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "364": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "366": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "367": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "369": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "1"
      ]
    },
    "370": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "371": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "372": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "374": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "375": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "376": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "377": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0"
      ]
    },
    "380": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0",
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "383": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithNativeToken",
      "op": "callsub StartGameWithNativeToken",
      "stack_out": []
    },
    "386": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "387": {
      "op": "return",
      "stack_out": []
    },
    "388": {
      "block": "main_CreateGameWithArc200Token_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "390": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "391": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "392": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "394": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "395": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "398": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "401": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "404": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithArc200Token",
      "op": "callsub CreateGameWithArc200Token",
      "stack_out": []
    },
    "407": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "408": {
      "op": "return",
      "stack_out": []
    },
    "409": {
      "block": "main_CreateGameWithASAToken_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "411": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "412": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "413": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "415": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "416": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "418": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0",
        "1"
      ]
    },
    "419": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "420": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "421": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "423": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "425": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "426": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "427": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "430": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithASAToken",
      "op": "callsub CreateGameWithASAToken",
      "stack_out": []
    },
    "433": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "434": {
      "op": "return",
      "stack_out": []
    },
    "435": {
      "block": "main_OptInToASA_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "437": {
      "op": "!",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "438": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "439": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "441": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "442": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "444": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "1"
      ]
    },
    "445": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "446": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "447": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "449": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "450": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "451": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "452": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "455": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.OptInToASA",
      "op": "callsub OptInToASA",
      "stack_out": []
    },
    "458": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "459": {
      "op": "return",
      "stack_out": []
    },
    "460": {
      "block": "main_CreateGameWithNativeToken_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "462": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "463": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "464": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "466": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "467": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "469": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "1"
      ]
    },
    "470": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "471": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "472": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "474": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "475": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "476": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "477": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "480": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithNativeToken",
      "op": "callsub CreateGameWithNativeToken",
      "stack_out": []
    },
    "483": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "484": {
      "op": "return",
      "stack_out": []
    },
    "485": {
      "block": "main_withdraw_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "487": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "488": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "489": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "491": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "492": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "495": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "498": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "501": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "504": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.withdraw",
      "op": "callsub withdraw",
      "stack_out": []
    },
    "507": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "508": {
      "op": "return",
      "stack_out": []
    },
    "509": {
      "block": "main_sendOnlineKeyRegistration_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "511": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "512": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "513": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "515": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "516": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "519": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "522": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "525": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "528": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "531": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "534": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "537": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "538": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "541": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "542": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "545": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "546": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[8]%3#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "549": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "550": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.sendOnlineKeyRegistration",
      "op": "callsub sendOnlineKeyRegistration",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "553": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "554": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%0#0"
      ]
    },
    "555": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%0#0"
      ]
    },
    "556": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%0#0"
      ]
    },
    "559": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%1#0"
      ]
    },
    "560": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "561": {
      "op": "bytec 7 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "563": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "564": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "565": {
      "op": "log",
      "stack_out": []
    },
    "566": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "567": {
      "op": "return",
      "stack_out": []
    },
    "568": {
      "block": "main_updateApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "570": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "UpdateApplication"
      ]
    },
    "572": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "573": {
      "error": "OnCompletion is not UpdateApplication",
      "op": "assert // OnCompletion is not UpdateApplication",
      "stack_out": []
    },
    "574": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "576": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "577": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "580": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "583": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.updateApplication",
      "op": "callsub updateApplication",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "586": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "587": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "588": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "590": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "591": {
      "op": "bytec 7 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "593": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "594": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "595": {
      "op": "log",
      "stack_out": []
    },
    "596": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "597": {
      "op": "return",
      "stack_out": []
    },
    "598": {
      "block": "main_bare_routing@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "600": {
      "op": "bnz main_after_if_else@22",
      "stack_out": []
    },
    "603": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "605": {
      "op": "!",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "606": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "607": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "608": {
      "op": "return",
      "stack_out": []
    },
    "609": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.updateApplication",
      "params": {
        "newVersion#0": "bytes"
      },
      "block": "updateApplication",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "612": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "614": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "616": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "617": {
      "error": "Only creator can update application",
      "op": "assert // Only creator can update application",
      "stack_out": []
    },
    "618": {
      "op": "pushbytes \"scver\"",
      "defined_out": [
        "\"scver\""
      ],
      "stack_out": [
        "\"scver\""
      ]
    },
    "625": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"scver\"",
        "newVersion#0 (copy)"
      ],
      "stack_out": [
        "\"scver\"",
        "newVersion#0 (copy)"
      ]
    },
    "627": {
      "op": "app_global_put",
      "stack_out": []
    },
    "628": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "629": {
      "retsub": true,
      "op": "retsub"
    },
    "630": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.sendOnlineKeyRegistration",
      "params": {
        "voteKey#0": "bytes",
        "selectionKey#0": "bytes",
        "stateProofKey#0": "bytes",
        "voteFirst#0": "uint64",
        "voteLast#0": "uint64",
        "voteKeyDilution#0": "uint64",
        "fee#0": "uint64"
      },
      "block": "sendOnlineKeyRegistration",
      "stack_in": [],
      "op": "proto 7 1"
    },
    "633": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "635": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "637": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "638": {
      "error": "Only creator can use this method",
      "op": "assert // Only creator can use this method",
      "stack_out": []
    },
    "639": {
      "op": "itxn_begin"
    },
    "640": {
      "op": "frame_dig -7",
      "defined_out": [
        "voteKey#0 (copy)"
      ],
      "stack_out": [
        "voteKey#0 (copy)"
      ]
    },
    "642": {
      "op": "itxn_field VotePK",
      "stack_out": []
    },
    "644": {
      "op": "frame_dig -3",
      "defined_out": [
        "voteLast#0 (copy)"
      ],
      "stack_out": [
        "voteLast#0 (copy)"
      ]
    },
    "646": {
      "op": "itxn_field VoteLast",
      "stack_out": []
    },
    "648": {
      "op": "frame_dig -2",
      "defined_out": [
        "voteKeyDilution#0 (copy)"
      ],
      "stack_out": [
        "voteKeyDilution#0 (copy)"
      ]
    },
    "650": {
      "op": "itxn_field VoteKeyDilution",
      "stack_out": []
    },
    "652": {
      "op": "frame_dig -4",
      "defined_out": [
        "voteFirst#0 (copy)"
      ],
      "stack_out": [
        "voteFirst#0 (copy)"
      ]
    },
    "654": {
      "op": "itxn_field VoteFirst",
      "stack_out": []
    },
    "656": {
      "op": "frame_dig -5",
      "defined_out": [
        "stateProofKey#0 (copy)"
      ],
      "stack_out": [
        "stateProofKey#0 (copy)"
      ]
    },
    "658": {
      "op": "itxn_field StateProofPK",
      "stack_out": []
    },
    "660": {
      "op": "frame_dig -6",
      "defined_out": [
        "selectionKey#0 (copy)"
      ],
      "stack_out": [
        "selectionKey#0 (copy)"
      ]
    },
    "662": {
      "op": "itxn_field SelectionPK",
      "stack_out": []
    },
    "664": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "666": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "668": {
      "op": "frame_dig -1",
      "defined_out": [
        "fee#0 (copy)"
      ],
      "stack_out": [
        "fee#0 (copy)"
      ]
    },
    "670": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "672": {
      "op": "itxn_submit"
    },
    "673": {
      "op": "itxn TxID",
      "defined_out": [
        "itxnResult.TxID#0"
      ],
      "stack_out": [
        "itxnResult.TxID#0"
      ]
    },
    "675": {
      "retsub": true,
      "op": "retsub"
    },
    "676": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.withdraw",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "bytes",
        "assetId#0": "bytes",
        "isArc200Token#0": "bytes"
      },
      "block": "withdraw",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "679": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "680": {
      "op": "dupn 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ]
    },
    "682": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "684": {
      "op": "dupn 4",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4"
      ]
    },
    "686": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "assetId#0 (copy)"
      ]
    },
    "688": {
      "op": "txn Sender",
      "defined_out": [
        "assetId#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "assetId#0 (copy)",
        "tmp%0#0"
      ]
    },
    "690": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "key#0"
      ]
    },
    "691": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "key#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "key#0",
        "\"g\""
      ]
    },
    "692": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "\"g\"",
        "key#0"
      ]
    },
    "693": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "695": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "696": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_exists%0#0"
      ]
    },
    "698": {
      "op": "bz withdraw_else_body@13",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "701": {
      "op": "frame_dig 9",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "703": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "maybe_exists%1#0"
      ]
    },
    "704": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_exists%1#0",
        "game#0"
      ]
    },
    "705": {
      "op": "frame_bury 1",
      "defined_out": [
        "game#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_exists%1#0"
      ]
    },
    "707": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "708": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "game#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "amount#0 (copy)"
      ]
    },
    "710": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "amount#0 (copy)",
        "game#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "amount#0 (copy)",
        "0x"
      ]
    },
    "712": {
      "op": "b==",
      "defined_out": [
        "game#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "713": {
      "op": "frame_dig -3",
      "defined_out": [
        "game#0",
        "tmp%1#0",
        "tmp%3#0",
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%3#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "715": {
      "op": "frame_bury 2",
      "defined_out": [
        "game#0",
        "tmp%1#0",
        "tmp%3#0",
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "717": {
      "op": "bz withdraw_after_if_else@3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "720": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "722": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "725": {
      "op": "frame_bury 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "727": {
      "block": "withdraw_after_if_else@3",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "729": {
      "op": "dup",
      "defined_out": [
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)"
      ]
    },
    "730": {
      "op": "pushbytes 0x28",
      "defined_out": [
        "0x28",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)",
        "0x28"
      ]
    },
    "733": {
      "op": "b/",
      "defined_out": [
        "fee#0",
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "fee#0"
      ]
    },
    "734": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "fee#0",
        "toWithdrawIncludingFee#1 (copy)"
      ]
    },
    "736": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)",
        "fee#0"
      ]
    },
    "737": {
      "op": "b-",
      "defined_out": [
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ]
    },
    "738": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "739": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ]
    },
    "741": {
      "op": "frame_bury 3",
      "defined_out": [
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "743": {
      "op": "frame_dig 1",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "game#0"
      ]
    },
    "745": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "game#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "game#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "746": {
      "op": "cover 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "game#0 (copy)"
      ]
    },
    "748": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "tmp%5#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0"
      ]
    },
    "751": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "752": {
      "op": "dig 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "toWithdrawIncludingFee#1 (copy)"
      ]
    },
    "754": {
      "op": "b>=",
      "defined_out": [
        "game#0",
        "tmp%5#0",
        "tmp%6#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "755": {
      "error": "Game creator can withdraw from the game only the game deposit",
      "op": "assert // Game creator can withdraw from the game only the game deposit",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0"
      ]
    },
    "756": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "tmp%5#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "757": {
      "op": "b-",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ]
    },
    "758": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "759": {
      "op": "len",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "760": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "761": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "len_ok%0#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "762": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ]
    },
    "763": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "32"
      ]
    },
    "764": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "765": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "766": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "768": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "to_encode%0#0"
      ]
    },
    "769": {
      "op": "dig 1",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "to_encode%0#0",
        "bzero%0#0 (copy)"
      ]
    },
    "771": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "772": {
      "op": "frame_dig 9",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "tmp%1#0"
      ]
    },
    "774": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "tmp%1#0 (copy)",
        "tmp%1#0 (copy)"
      ]
    },
    "775": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "arc4_encoded%0#0",
        "tmp%1#0 (copy)"
      ]
    },
    "777": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "arc4_encoded%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "778": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "arc4_encoded%0#0",
        "maybe_value%2#0"
      ]
    },
    "779": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "maybe_value%2#0",
        "arc4_encoded%0#0"
      ]
    },
    "780": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "updated_data%0#0"
      ]
    },
    "782": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0"
      ]
    },
    "783": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "\"d\""
      ]
    },
    "785": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "787": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0"
      ]
    },
    "788": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "tmp%9#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "789": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "790": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0",
        "maybe_value%3#0"
      ]
    },
    "791": {
      "op": "uncover 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "maybe_value%3#0",
        "toWithdrawNet#0"
      ]
    },
    "793": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0"
      ]
    },
    "794": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "795": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "796": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "797": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%1#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "798": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0"
      ]
    },
    "799": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "tmp%9#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "801": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "tmp%9#0",
        "arc4_encoded%1#0"
      ]
    },
    "802": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "803": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "320"
      ]
    },
    "805": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "is_true%0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%0#0"
      ]
    },
    "806": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "game#0",
        "is_true%0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "807": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "808": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "810": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "encoded_bool%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%0#0"
      ]
    },
    "811": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "812": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%11#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%11#0"
      ]
    },
    "813": {
      "op": "bz withdraw_after_if_else@6",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "816": {
      "op": "itxn_begin"
    },
    "817": {
      "op": "frame_dig 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0"
      ]
    },
    "819": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "820": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "value_len%2#0"
      ]
    },
    "821": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "value_len%2#0",
        "8"
      ]
    },
    "822": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%2#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "len_ok%2#0"
      ]
    },
    "823": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0"
      ]
    },
    "824": {
      "op": "intc_3 // 8",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "8"
      ]
    },
    "825": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "bzero%2#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "bzero%2#0"
      ]
    },
    "826": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "arc4_encoded%2#0"
      ]
    },
    "827": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "828": {
      "op": "bytec 9 // \"user withdrawal\"",
      "defined_out": [
        "\"user withdrawal\"",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "\"user withdrawal\""
      ]
    },
    "830": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "832": {
      "op": "frame_dig -4",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "receiver#0 (copy)",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "834": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "836": {
      "op": "itxn_field Amount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "838": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "1"
      ]
    },
    "839": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "841": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "842": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "844": {
      "op": "itxn_submit"
    },
    "845": {
      "block": "withdraw_after_if_else@6",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "847": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "321"
      ]
    },
    "849": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%1#0"
      ]
    },
    "850": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "851": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "852": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "854": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%1#0"
      ]
    },
    "855": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "856": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%12#0"
      ]
    },
    "857": {
      "op": "bz withdraw_after_if_else@9",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "860": {
      "op": "itxn_begin"
    },
    "861": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "863": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "32"
      ]
    },
    "864": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "865": {
      "op": "frame_dig 3",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "867": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "868": {
      "op": "len",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0"
      ]
    },
    "869": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0",
        "8"
      ]
    },
    "870": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "len_ok%3#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "len_ok%3#0"
      ]
    },
    "871": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "872": {
      "op": "intc_3 // 8",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "8"
      ]
    },
    "873": {
      "op": "bzero",
      "defined_out": [
        "bzero%3#0",
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "bzero%3#0"
      ]
    },
    "874": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%3#0",
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "arc4_encoded%3#0"
      ]
    },
    "875": {
      "op": "btoi",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "876": {
      "op": "bytec 9 // \"user withdrawal\"",
      "defined_out": [
        "\"user withdrawal\"",
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "\"user withdrawal\""
      ]
    },
    "878": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "880": {
      "op": "frame_dig -4",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "receiver#0 (copy)",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "882": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "884": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "886": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "888": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "game#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "4"
      ]
    },
    "890": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "892": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "893": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "895": {
      "op": "itxn_submit"
    },
    "896": {
      "block": "withdraw_after_if_else@9",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "898": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "322"
      ]
    },
    "900": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%2#0"
      ]
    },
    "901": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "902": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "903": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "905": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%2#0"
      ]
    },
    "906": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "907": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%14#0"
      ]
    },
    "908": {
      "op": "bz withdraw_after_if_else@30",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "911": {
      "op": "itxn_begin"
    },
    "912": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "914": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "32"
      ]
    },
    "915": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "916": {
      "op": "frame_dig 3",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "918": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "919": {
      "op": "len",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "value_len%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "value_len%4#0"
      ]
    },
    "920": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "value_len%4#0",
        "32"
      ]
    },
    "921": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "len_ok%4#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "len_ok%4#0"
      ]
    },
    "922": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "923": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "bzero%0#0"
      ]
    },
    "925": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "926": {
      "op": "bytec 9 // \"user withdrawal\"",
      "defined_out": [
        "\"user withdrawal\"",
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0",
        "\"user withdrawal\""
      ]
    },
    "928": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "930": {
      "op": "bytec 10 // method \"arc200_transfer(address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transfer(address,uint256)bool)",
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0",
        "Method(arc200_transfer(address,uint256)bool)"
      ]
    },
    "932": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "934": {
      "op": "frame_dig -4",
      "defined_out": [
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "receiver#0 (copy)",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0",
        "receiver#0 (copy)"
      ]
    },
    "936": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "938": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "940": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "942": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "bzero%0#0",
        "game#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "6"
      ]
    },
    "944": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "946": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "947": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "949": {
      "op": "itxn_submit"
    },
    "950": {
      "block": "withdraw_after_if_else@30",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "951": {
      "block": "withdraw_else_body@13",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%16#0"
      ]
    },
    "953": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "955": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%18#0"
      ]
    },
    "956": {
      "error": "The game for this asset does not exists",
      "op": "assert // The game for this asset does not exists",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "957": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "assetId#0 (copy)"
      ]
    },
    "959": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "960": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0",
        "tmp%19#0"
      ]
    },
    "961": {
      "op": "frame_bury 6",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "963": {
      "op": "bnz withdraw_else_body@19",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "966": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%21#0"
      ]
    },
    "968": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "tmp%19#0",
        "value%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "970": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0"
      ]
    },
    "971": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%19#0",
        "tmp%22#0",
        "value%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "tmp%22#0"
      ]
    },
    "973": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "tmp%19#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "975": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "976": {
      "op": "-",
      "defined_out": [
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0"
      ]
    },
    "977": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "\"d\""
      ]
    },
    "979": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "981": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "982": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "983": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0"
      ]
    },
    "984": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "985": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0"
      ]
    },
    "986": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "8"
      ]
    },
    "987": {
      "op": "bzero",
      "defined_out": [
        "bzero%5#0",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "bzero%5#0"
      ]
    },
    "988": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "maybe_value%4#0"
      ]
    },
    "989": {
      "op": "dig 1",
      "defined_out": [
        "bzero%5#0",
        "bzero%5#0 (copy)",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "maybe_value%4#0",
        "bzero%5#0 (copy)"
      ]
    },
    "991": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%5#0",
        "bzero%5#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "arc4_encoded%5#0"
      ]
    },
    "992": {
      "op": "btoi",
      "defined_out": [
        "bzero%5#0",
        "tmp%19#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "tmp%25#0"
      ]
    },
    "993": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "tmp%25#0",
        "tmp%23#0"
      ]
    },
    "995": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "996": {
      "op": "-",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "997": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "998": {
      "op": "frame_bury 4",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "1000": {
      "op": "itob",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "reinterpret_biguint%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1001": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "reinterpret_biguint%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "reinterpret_biguint%0#0",
        "amount#0 (copy)"
      ]
    },
    "1003": {
      "op": "b>=",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "tmp%26#0"
      ]
    },
    "1004": {
      "error": "maxWithdrawableBalance is less then requested",
      "op": "assert // maxWithdrawableBalance is less then requested",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0"
      ]
    },
    "1005": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "amount#0 (copy)"
      ]
    },
    "1007": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%6#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "arc4_encoded%6#0"
      ]
    },
    "1008": {
      "op": "btoi",
      "defined_out": [
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "toWidraw#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0"
      ]
    },
    "1009": {
      "op": "dup",
      "defined_out": [
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "toWidraw#0",
        "toWidraw#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0",
        "toWidraw#4"
      ]
    },
    "1010": {
      "op": "frame_bury 7",
      "defined_out": [
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "toWidraw#0",
        "toWidraw#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0"
      ]
    },
    "1012": {
      "op": "bnz withdraw_after_if_else@17",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1015": {
      "op": "frame_dig 4",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#4"
      ]
    },
    "1017": {
      "op": "frame_bury 7",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1019": {
      "block": "withdraw_after_if_else@17",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "toWidraw#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0"
      ]
    },
    "1021": {
      "op": "itxn_begin"
    },
    "1022": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "1023": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ]
    },
    "1024": {
      "op": "bytec 11 // \"admin withdrawal\"",
      "defined_out": [
        "\"admin withdrawal\"",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0",
        "\"admin withdrawal\""
      ]
    },
    "1026": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ]
    },
    "1028": {
      "op": "frame_dig -4",
      "defined_out": [
        "inner_txn_params%3%%param_Amount_idx_0#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "1030": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ]
    },
    "1032": {
      "op": "itxn_field Amount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1034": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "1"
      ]
    },
    "1035": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1037": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "1038": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1040": {
      "op": "itxn_submit"
    },
    "1041": {
      "retsub": true,
      "op": "retsub"
    },
    "1042": {
      "block": "withdraw_else_body@19",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "isArc200Token#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "isArc200Token#0 (copy)"
      ]
    },
    "1044": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "isArc200Token#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "isArc200Token#0 (copy)",
        "0"
      ]
    },
    "1045": {
      "op": "getbit",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%28#0"
      ]
    },
    "1046": {
      "op": "bz withdraw_else_body@22",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1049": {
      "op": "itxn_begin"
    },
    "1050": {
      "op": "bytec 11 // \"admin withdrawal\"",
      "defined_out": [
        "\"admin withdrawal\""
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "\"admin withdrawal\""
      ]
    },
    "1052": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1054": {
      "op": "bytec 10 // method \"arc200_transfer(address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transfer(address,uint256)bool)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "Method(arc200_transfer(address,uint256)bool)"
      ]
    },
    "1056": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1058": {
      "op": "frame_dig -4",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "receiver#0 (copy)"
      ]
    },
    "1060": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1062": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "amount#0 (copy)"
      ]
    },
    "1064": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1066": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "1068": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1070": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "6"
      ]
    },
    "1072": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1074": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "1075": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1077": {
      "op": "itxn_submit"
    },
    "1078": {
      "retsub": true,
      "op": "retsub"
    },
    "1079": {
      "block": "withdraw_else_body@22",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%29#0"
      ]
    },
    "1081": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%19#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%29#0",
        "tmp%19#0"
      ]
    },
    "1083": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "balance#0",
        "check%2#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "check%2#0"
      ]
    },
    "1085": {
      "error": "account opted into asset",
      "op": "assert // account opted into asset",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0"
      ]
    },
    "1086": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "balance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "\"d\""
      ]
    },
    "1088": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "balance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "1090": {
      "op": "concat",
      "defined_out": [
        "balance#0",
        "tmp%19#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "tmp%31#0"
      ]
    },
    "1091": {
      "op": "box_get",
      "defined_out": [
        "balance#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1092": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0"
      ]
    },
    "1093": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "balance#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "1094": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0"
      ]
    },
    "1095": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "balance#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "8"
      ]
    },
    "1096": {
      "op": "bzero",
      "defined_out": [
        "balance#0",
        "bzero%7#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "bzero%7#0"
      ]
    },
    "1097": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "maybe_value%5#0"
      ]
    },
    "1098": {
      "op": "dig 1",
      "defined_out": [
        "balance#0",
        "bzero%7#0",
        "bzero%7#0 (copy)",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "maybe_value%5#0",
        "bzero%7#0 (copy)"
      ]
    },
    "1100": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%7#0",
        "balance#0",
        "bzero%7#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "arc4_encoded%7#0"
      ]
    },
    "1101": {
      "op": "btoi",
      "defined_out": [
        "balance#0",
        "bzero%7#0",
        "tmp%19#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "tmp%32#0"
      ]
    },
    "1102": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "tmp%32#0",
        "balance#0"
      ]
    },
    "1104": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "balance#0",
        "tmp%32#0"
      ]
    },
    "1105": {
      "op": "-",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0"
      ]
    },
    "1106": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "maxWithdrawableBalance\u2081#0"
      ]
    },
    "1107": {
      "op": "frame_bury 5",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0"
      ]
    },
    "1109": {
      "op": "itob",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "1110": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "reinterpret_biguint%1#0",
        "amount#0 (copy)"
      ]
    },
    "1112": {
      "op": "b>=",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "tmp%33#0"
      ]
    },
    "1113": {
      "error": "maxWithdrawableBalance is less then requested",
      "op": "assert // maxWithdrawableBalance is less then requested",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0"
      ]
    },
    "1114": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "amount#0 (copy)"
      ]
    },
    "1116": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%8#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "arc4_encoded%8#0"
      ]
    },
    "1117": {
      "op": "btoi",
      "defined_out": [
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw\u2081#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0"
      ]
    },
    "1118": {
      "op": "dup",
      "defined_out": [
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw\u2081#0",
        "toWidraw\u2081#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0",
        "toWidraw\u2081#4"
      ]
    },
    "1119": {
      "op": "frame_bury 8",
      "defined_out": [
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw\u2081#0",
        "toWidraw\u2081#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0"
      ]
    },
    "1121": {
      "op": "bnz withdraw_after_if_else@24",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1124": {
      "op": "frame_dig 5",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#4"
      ]
    },
    "1126": {
      "op": "frame_bury 8",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1128": {
      "block": "withdraw_after_if_else@24",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "toWidraw\u2081#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0"
      ]
    },
    "1130": {
      "op": "itxn_begin"
    },
    "1131": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "1132": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ]
    },
    "1133": {
      "op": "bytec 11 // \"admin withdrawal\"",
      "defined_out": [
        "\"admin withdrawal\"",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0",
        "\"admin withdrawal\""
      ]
    },
    "1135": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ]
    },
    "1137": {
      "op": "frame_dig -4",
      "defined_out": [
        "inner_txn_params%5%%param_AssetAmount_idx_0#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "1139": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ]
    },
    "1141": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1143": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "1145": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1147": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "4"
      ]
    },
    "1149": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1151": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "1152": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1154": {
      "op": "itxn_submit"
    },
    "1155": {
      "retsub": true,
      "op": "retsub"
    },
    "1156": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithNativeToken",
      "params": {
        "txnDeposit#0": "uint64",
        "winRatio#0": "bytes"
      },
      "block": "CreateGameWithNativeToken",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1159": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "1160": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1161": {
      "op": "frame_dig -2",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1163": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ]
    },
    "1165": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "winRatio#0 (copy)"
      ]
    },
    "1167": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "1168": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%0#0",
        "1000000"
      ]
    },
    "1170": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "1171": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ]
    },
    "1172": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1174": {
      "op": "gtxns Amount",
      "defined_out": [
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "1176": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1177": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "40"
      ]
    },
    "1179": {
      "op": "/",
      "defined_out": [
        "fee#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%2#0",
        "fee#0"
      ]
    },
    "1180": {
      "op": "-",
      "defined_out": [
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0"
      ]
    },
    "1181": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    "1182": {
      "op": "bytec 5 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x640000000000000000"
      ]
    },
    "1184": {
      "op": "box_len",
      "defined_out": [
        "deposit#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1185": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_exists%0#0"
      ]
    },
    "1187": {
      "op": "bz CreateGameWithNativeToken_after_if_else@2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1190": {
      "op": "bytec 5 // 0x640000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x640000000000000000"
      ]
    },
    "1192": {
      "op": "box_get",
      "defined_out": [
        "deposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1193": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0"
      ]
    },
    "1194": {
      "op": "frame_bury 4",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1196": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1197": {
      "block": "CreateGameWithNativeToken_after_if_else@2",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "deposit#0"
      ]
    },
    "1199": {
      "op": "itob",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1200": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1201": {
      "op": "frame_bury 1",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1203": {
      "op": "frame_dig 4",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "prevDeposit#0"
      ]
    },
    "1205": {
      "op": "b+",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ]
    },
    "1206": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1207": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "1208": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "1209": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "1210": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ]
    },
    "1211": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "32"
      ]
    },
    "1212": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1213": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "1214": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1216": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%0#0"
      ]
    },
    "1217": {
      "op": "bytec 5 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%0#0",
        "0x640000000000000000"
      ]
    },
    "1219": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x640000000000000000",
        "arc4_encoded%0#0"
      ]
    },
    "1220": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1221": {
      "op": "frame_dig -2",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1223": {
      "op": "gtxns Receiver",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%7#0"
      ]
    },
    "1225": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1227": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%9#0"
      ]
    },
    "1228": {
      "error": "Receiver must be the gas station app",
      "op": "assert // Receiver must be the gas station app",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1229": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x0000000000000000"
      ]
    },
    "1230": {
      "op": "frame_dig 2",
      "defined_out": [
        "0x0000000000000000",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x0000000000000000",
        "sender#0"
      ]
    },
    "1232": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "key#0"
      ]
    },
    "1233": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "key#0",
        "\"g\""
      ]
    },
    "1234": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "\"g\"",
        "key#0"
      ]
    },
    "1235": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1236": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "1237": {
      "op": "box_len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1238": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_exists%2#0"
      ]
    },
    "1240": {
      "op": "bz CreateGameWithNativeToken_else_body@4",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1243": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1244": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1245": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "1246": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "320"
      ]
    },
    "1248": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%0#0"
      ]
    },
    "1249": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1250": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1251": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1253": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%0#0"
      ]
    },
    "1254": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%0#0",
        "0x80"
      ]
    },
    "1256": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1257": {
      "error": "The previous game was not for the native token",
      "op": "assert // The previous game was not for the native token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1258": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1259": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1260": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%4#0"
      ]
    },
    "1261": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "321"
      ]
    },
    "1263": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%1#0"
      ]
    },
    "1264": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1265": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1266": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1268": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%1#0"
      ]
    },
    "1269": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%1#0",
        "0x00"
      ]
    },
    "1270": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%14#0"
      ]
    },
    "1271": {
      "error": "The previous game was ASA token",
      "op": "assert // The previous game was ASA token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1272": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1273": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1274": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%5#0"
      ]
    },
    "1275": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%16#0"
      ]
    },
    "1278": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%16#0",
        "0x0000000000000000"
      ]
    },
    "1279": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%17#0"
      ]
    },
    "1280": {
      "error": "The previous game was not for the native token",
      "op": "assert // The previous game was not for the native token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1281": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1282": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1283": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%6#0"
      ]
    },
    "1284": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "oldBalance#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "oldBalance#0"
      ]
    },
    "1287": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "oldBalance#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1289": {
      "op": "b+",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0"
      ]
    },
    "1290": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "1291": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "1292": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "1293": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "1294": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0"
      ]
    },
    "1295": {
      "op": "frame_dig 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1297": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0"
      ]
    },
    "1298": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1300": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1301": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%7#0"
      ]
    },
    "1302": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%7#0",
        "arc4_encoded%1#0"
      ]
    },
    "1303": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "updated_data%0#0"
      ]
    },
    "1305": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "updated_data%0#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1307": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "1308": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1309": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1310": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1311": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%8#0"
      ]
    },
    "1312": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "winRatio#0 (copy)"
      ]
    },
    "1314": {
      "op": "replace2 137",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "updated_data%1#0"
      ]
    },
    "1316": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1317": {
      "retsub": true,
      "op": "retsub"
    },
    "1318": {
      "block": "CreateGameWithNativeToken_else_body@4",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1320": {
      "op": "dup",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ]
    },
    "1321": {
      "op": "len",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ]
    },
    "1322": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0",
        "32"
      ]
    },
    "1323": {
      "op": "<=",
      "defined_out": [
        "len_ok%2#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "len_ok%2#0"
      ]
    },
    "1324": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1325": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "1327": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%2#0"
      ]
    },
    "1328": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%2#0",
        "to_encode%2#0"
      ]
    },
    "1330": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "1331": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "arc4_encoded%2#0"
      ]
    },
    "1332": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "arc4_encoded%2#0",
        "0x0000000000000000"
      ]
    },
    "1333": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1334": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0",
        "0x80"
      ]
    },
    "1336": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1337": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0",
        "321"
      ]
    },
    "1339": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "321",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0",
        "321",
        "0"
      ]
    },
    "1340": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1341": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0",
        "322"
      ]
    },
    "1343": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0",
        "322",
        "0"
      ]
    },
    "1344": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%8#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1345": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "1346": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%9#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1347": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%9#0",
        "0x0000000000000000"
      ]
    },
    "1348": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%10#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1349": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%10#0",
        "0x0000000000000000"
      ]
    },
    "1350": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%11#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1351": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "bzero%0#0",
        "encoded_tuple_buffer%11#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%11#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1352": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%12#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1353": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%12#0",
        "0x0000000000000000"
      ]
    },
    "1354": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%13#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1355": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%13#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1356": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%14#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1357": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%14#0",
        "reinterpret_biguint%0#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%14#0",
        "winRatio#0 (copy)"
      ]
    },
    "1359": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "1360": {
      "op": "frame_dig 2",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_tuple_buffer%15#0",
        "sender#0"
      ]
    },
    "1362": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "newValue#0"
      ]
    },
    "1363": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1364": {
      "retsub": true,
      "op": "retsub"
    },
    "1365": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.OptInToASA",
      "params": {
        "txnDeposit#0": "uint64",
        "assetId#0": "bytes"
      },
      "block": "OptInToASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1368": {
      "op": "frame_dig -2",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "txnDeposit#0 (copy)"
      ]
    },
    "1370": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1372": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1374": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1375": {
      "error": "Receiver of the optin fee must be the current smart contract",
      "op": "assert // Receiver of the optin fee must be the current smart contract",
      "stack_out": []
    },
    "1376": {
      "op": "frame_dig -2",
      "stack_out": [
        "txnDeposit#0 (copy)"
      ]
    },
    "1378": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1380": {
      "op": "pushint 10000000 // 10000000",
      "defined_out": [
        "10000000",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "10000000"
      ]
    },
    "1385": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1386": {
      "error": "Opt in fee for new asset is 10 native tokens",
      "op": "assert // Opt in fee for new asset is 10 native tokens",
      "stack_out": []
    },
    "1387": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1389": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "assetId#0 (copy)"
      ]
    },
    "1391": {
      "op": "btoi",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1392": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1393": {
      "op": "cover 2",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1395": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1397": {
      "op": "bury 1",
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1399": {
      "op": "bnz OptInToASA_after_if_else@3",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1402": {
      "op": "itxn_begin"
    },
    "1403": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1405": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1407": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "1408": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1410": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1412": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1414": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "4"
      ]
    },
    "1416": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1418": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "1419": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1421": {
      "op": "itxn_submit"
    },
    "1422": {
      "block": "OptInToASA_after_if_else@3",
      "stack_in": [
        "tmp%6#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1423": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithASAToken",
      "params": {
        "txnDeposit#0": "uint64",
        "winRatio#0": "bytes"
      },
      "block": "CreateGameWithASAToken",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "1427": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1428": {
      "op": "frame_dig -2",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1430": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ]
    },
    "1432": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "winRatio#0 (copy)"
      ]
    },
    "1434": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "1435": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%0#0",
        "1000000"
      ]
    },
    "1437": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "1438": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ]
    },
    "1439": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1441": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "sender#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "to_encode%0#0"
      ]
    },
    "1443": {
      "op": "itob",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0"
      ]
    },
    "1444": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "assetId#0"
      ]
    },
    "1445": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1447": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0"
      ]
    },
    "1449": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1450": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "assetId#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "40"
      ]
    },
    "1452": {
      "op": "/",
      "defined_out": [
        "assetId#0",
        "fee#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0",
        "fee#0"
      ]
    },
    "1453": {
      "op": "-",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "deposit#0"
      ]
    },
    "1454": {
      "op": "swap",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "assetId#0"
      ]
    },
    "1455": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "assetId#0",
        "prevDeposit#0"
      ]
    },
    "1456": {
      "op": "swap",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "assetId#0"
      ]
    },
    "1457": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "assetId#0",
        "\"d\""
      ]
    },
    "1459": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "\"d\"",
        "assetId#0"
      ]
    },
    "1460": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1461": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "1462": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1463": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_exists%0#0"
      ]
    },
    "1465": {
      "op": "bz CreateGameWithASAToken_after_if_else@2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1468": {
      "op": "frame_dig 6",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "1470": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1471": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_exists%1#0",
        "prevDeposit#0"
      ]
    },
    "1472": {
      "op": "frame_bury 5",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_exists%1#0"
      ]
    },
    "1474": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1475": {
      "block": "CreateGameWithASAToken_after_if_else@2",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "deposit#0"
      ]
    },
    "1477": {
      "op": "itob",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1478": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1479": {
      "op": "frame_bury 1",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1481": {
      "op": "frame_dig 5",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "prevDeposit#0"
      ]
    },
    "1483": {
      "op": "b+",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0"
      ]
    },
    "1484": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "1485": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "value_len%0#0"
      ]
    },
    "1486": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "value_len%0#0",
        "32"
      ]
    },
    "1487": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "len_ok%0#0"
      ]
    },
    "1488": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0"
      ]
    },
    "1489": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "32"
      ]
    },
    "1490": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1491": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "1492": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1494": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%0#0"
      ]
    },
    "1495": {
      "op": "frame_dig 6",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%0#0",
        "tmp%4#0"
      ]
    },
    "1497": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%4#0",
        "arc4_encoded%0#0"
      ]
    },
    "1498": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1499": {
      "op": "frame_dig -2",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1501": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%7#0"
      ]
    },
    "1503": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1505": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%9#0"
      ]
    },
    "1506": {
      "error": "Receiver must be the gas station app",
      "op": "assert // Receiver must be the gas station app",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1507": {
      "op": "frame_dig 3",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "assetId#0"
      ]
    },
    "1509": {
      "op": "frame_dig 2",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "1511": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "key#0"
      ]
    },
    "1512": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "key#0",
        "\"g\""
      ]
    },
    "1513": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "\"g\"",
        "key#0"
      ]
    },
    "1514": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1515": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "1516": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1517": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_exists%2#0"
      ]
    },
    "1519": {
      "op": "bz CreateGameWithASAToken_else_body@4",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1522": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1523": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1524": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "1525": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "320"
      ]
    },
    "1527": {
      "op": "getbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%0#0"
      ]
    },
    "1528": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1529": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1530": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1532": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%0#0"
      ]
    },
    "1533": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "1534": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1535": {
      "error": "The previous game was for the native token",
      "op": "assert // The previous game was for the native token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1536": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1537": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1538": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%4#0"
      ]
    },
    "1539": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "322"
      ]
    },
    "1541": {
      "op": "getbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%1#0"
      ]
    },
    "1542": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1544": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1546": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%1#0"
      ]
    },
    "1547": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%1#0",
        "0x00"
      ]
    },
    "1548": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%14#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%14#0"
      ]
    },
    "1549": {
      "error": "The previous game was for the arc200 token",
      "op": "assert // The previous game was for the arc200 token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1550": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1551": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1552": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%5#0"
      ]
    },
    "1553": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%5#0",
        "321"
      ]
    },
    "1555": {
      "op": "getbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%2#0"
      ]
    },
    "1556": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "1557": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "1558": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "1560": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%2#0"
      ]
    },
    "1561": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%2#0",
        "0x80"
      ]
    },
    "1563": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%16#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%16#0"
      ]
    },
    "1564": {
      "error": "The previous game was not for the ASA token",
      "op": "assert // The previous game was not for the ASA token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1565": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1566": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1567": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%6#0"
      ]
    },
    "1568": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%18#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%18#0"
      ]
    },
    "1571": {
      "op": "frame_dig 3",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%18#0",
        "assetId#0"
      ]
    },
    "1573": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%19#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%19#0"
      ]
    },
    "1574": {
      "error": "The previous game was not for the same token",
      "op": "assert // The previous game was not for the same token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1575": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1576": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1577": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%7#0"
      ]
    },
    "1578": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "oldBalance#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "oldBalance#0"
      ]
    },
    "1581": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "oldBalance#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1583": {
      "op": "b+",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0"
      ]
    },
    "1584": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "1585": {
      "op": "len",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "value_len%1#0"
      ]
    },
    "1586": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "value_len%1#0",
        "32"
      ]
    },
    "1587": {
      "op": "<=",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "len_ok%1#0"
      ]
    },
    "1588": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0"
      ]
    },
    "1589": {
      "op": "frame_dig 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "bzero%0#0"
      ]
    },
    "1591": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0"
      ]
    },
    "1592": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1594": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%1#0",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1595": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0"
      ]
    },
    "1596": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "arc4_encoded%1#0"
      ]
    },
    "1597": {
      "op": "replace2 0",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "updated_data%0#0"
      ]
    },
    "1599": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "updated_data%0#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1601": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "1602": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1603": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1604": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1605": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%9#0"
      ]
    },
    "1606": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%9#0",
        "winRatio#0 (copy)"
      ]
    },
    "1608": {
      "op": "replace2 137",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "updated_data%1#0"
      ]
    },
    "1610": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1611": {
      "retsub": true,
      "op": "retsub"
    },
    "1612": {
      "block": "CreateGameWithASAToken_else_body@4",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1614": {
      "op": "dup",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ]
    },
    "1615": {
      "op": "len",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ]
    },
    "1616": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0",
        "32"
      ]
    },
    "1617": {
      "op": "<=",
      "defined_out": [
        "len_ok%2#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "len_ok%2#0"
      ]
    },
    "1618": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1619": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "1621": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%2#0"
      ]
    },
    "1622": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%2#0",
        "to_encode%3#0"
      ]
    },
    "1624": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "1625": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0"
      ]
    },
    "1626": {
      "op": "frame_dig 3",
      "defined_out": [
        "arc4_encoded%2#0",
        "assetId#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "assetId#0"
      ]
    },
    "1628": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1629": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "1630": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1631": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "321"
      ]
    },
    "1633": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "321",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "321",
        "1"
      ]
    },
    "1634": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1635": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "322"
      ]
    },
    "1637": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "322",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "322",
        "0"
      ]
    },
    "1638": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%8#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1639": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "1640": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%9#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1641": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%9#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%9#0",
        "0x0000000000000000"
      ]
    },
    "1642": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%10#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1643": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%10#0",
        "0x0000000000000000"
      ]
    },
    "1644": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%11#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1645": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%11#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%11#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1646": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%12#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1647": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%12#0",
        "0x0000000000000000"
      ]
    },
    "1648": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%13#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1649": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%13#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1650": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%14#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1651": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%14#0",
        "reinterpret_biguint%0#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%14#0",
        "winRatio#0 (copy)"
      ]
    },
    "1653": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "1654": {
      "op": "frame_dig 2",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_tuple_buffer%15#0",
        "sender#0"
      ]
    },
    "1656": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "newValue#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "newValue#0"
      ]
    },
    "1657": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1658": {
      "retsub": true,
      "op": "retsub"
    },
    "1659": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithArc200Token",
      "params": {
        "assetId#0": "bytes",
        "amount#0": "bytes",
        "winRatio#0": "bytes"
      },
      "block": "CreateGameWithArc200Token",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1662": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "1663": {
      "op": "txn Sender"
    },
    "1665": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "winRatio#0 (copy)"
      ]
    },
    "1667": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "1668": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "tmp%0#0",
        "1000000"
      ]
    },
    "1670": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "1671": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "sender#0"
      ]
    },
    "1672": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "amount#0 (copy)"
      ]
    },
    "1674": {
      "op": "pushbytes 0x28",
      "defined_out": [
        "0x28",
        "amount#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "amount#0 (copy)",
        "0x28"
      ]
    },
    "1677": {
      "op": "b/",
      "defined_out": [
        "fee#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "fee#0"
      ]
    },
    "1678": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "fee#0",
        "amount#0 (copy)"
      ]
    },
    "1680": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "amount#0 (copy)",
        "fee#0"
      ]
    },
    "1681": {
      "op": "b-",
      "defined_out": [
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0"
      ]
    },
    "1682": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    "1683": {
      "op": "bytec 4 // \"d\""
    },
    "1685": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "1687": {
      "op": "concat",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1688": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "1689": {
      "op": "box_len",
      "defined_out": [
        "deposit#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1690": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "1692": {
      "op": "bz CreateGameWithArc200Token_after_if_else@2",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1695": {
      "op": "frame_dig 4",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "1697": {
      "op": "box_get",
      "defined_out": [
        "deposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1698": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_exists%1#0",
        "prevDeposit#0"
      ]
    },
    "1699": {
      "op": "frame_bury 3",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "1701": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1702": {
      "block": "CreateGameWithArc200Token_after_if_else@2",
      "stack_in": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "prevDeposit#0"
      ]
    },
    "1704": {
      "op": "frame_dig 2",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "prevDeposit#0",
        "deposit#0"
      ]
    },
    "1706": {
      "op": "b+",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0"
      ]
    },
    "1707": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1708": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "1709": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "1710": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%0#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "1711": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0"
      ]
    },
    "1712": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "32"
      ]
    },
    "1713": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1714": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "1715": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1717": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%0#0"
      ]
    },
    "1718": {
      "op": "frame_dig 4",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%0#0",
        "tmp%2#0"
      ]
    },
    "1720": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%2#0",
        "arc4_encoded%0#0"
      ]
    },
    "1721": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1722": {
      "op": "itxn_begin"
    },
    "1723": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetId#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "assetId#0 (copy)"
      ]
    },
    "1725": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1726": {
      "op": "txn Sender",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0"
      ]
    },
    "1728": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1730": {
      "op": "bytec 15 // method \"arc200_transferFrom(address,address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transferFrom(address,address,uint256)bool)",
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0",
        "tmp%6#0",
        "Method(arc200_transferFrom(address,address,uint256)bool)"
      ]
    },
    "1732": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1734": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "1735": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%6#0"
      ]
    },
    "1737": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1739": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "amount#0 (copy)"
      ]
    },
    "1741": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1743": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1745": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "6"
      ]
    },
    "1747": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1749": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1750": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1752": {
      "op": "itxn_submit"
    },
    "1753": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "assetId#0 (copy)"
      ]
    },
    "1755": {
      "op": "frame_dig 1",
      "defined_out": [
        "assetId#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "assetId#0 (copy)",
        "sender#0"
      ]
    },
    "1757": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "key#0"
      ]
    },
    "1758": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "key#0",
        "\"g\""
      ]
    },
    "1759": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "\"g\"",
        "key#0"
      ]
    },
    "1760": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1761": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "1762": {
      "op": "box_len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1763": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_exists%2#0"
      ]
    },
    "1765": {
      "op": "bz CreateGameWithArc200Token_else_body@5",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1768": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1769": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1770": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%3#0"
      ]
    },
    "1771": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%3#0",
        "320"
      ]
    },
    "1773": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%0#0"
      ]
    },
    "1774": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1775": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1776": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1778": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%0#0"
      ]
    },
    "1779": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "1780": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1781": {
      "error": "The previous game was for the native token",
      "op": "assert // The previous game was for the native token",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1782": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1783": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1784": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%4#0"
      ]
    },
    "1785": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "322"
      ]
    },
    "1787": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%1#0"
      ]
    },
    "1788": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1789": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1790": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1792": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%1#0"
      ]
    },
    "1793": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%1#0",
        "0x80"
      ]
    },
    "1795": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%11#0"
      ]
    },
    "1796": {
      "error": "The previous game was NOT for the arc200 token",
      "op": "assert // The previous game was NOT for the arc200 token",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1797": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1798": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1799": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%5#0"
      ]
    },
    "1800": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%5#0",
        "321"
      ]
    },
    "1802": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%2#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%2#0"
      ]
    },
    "1803": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "1804": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "1805": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "1807": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%2#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%2#0"
      ]
    },
    "1808": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%2#0",
        "0x00"
      ]
    },
    "1809": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%13#0"
      ]
    },
    "1810": {
      "error": "The previous game was for the ASA token",
      "op": "assert // The previous game was for the ASA token",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1811": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1812": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1813": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%6#0"
      ]
    },
    "1814": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%15#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%15#0"
      ]
    },
    "1817": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%15#0",
        "assetId#0 (copy)"
      ]
    },
    "1819": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%16#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%16#0"
      ]
    },
    "1820": {
      "error": "The previous game was not for the same token",
      "op": "assert // The previous game was not for the same token",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1821": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1822": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1823": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%7#0"
      ]
    },
    "1824": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "oldBalance#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "oldBalance#0"
      ]
    },
    "1827": {
      "op": "frame_dig 2",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "oldBalance#0",
        "deposit#0"
      ]
    },
    "1829": {
      "op": "b+",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ]
    },
    "1830": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "1831": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "1832": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "1833": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "1834": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ]
    },
    "1835": {
      "op": "frame_dig 0",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1837": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0"
      ]
    },
    "1838": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1840": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1841": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0"
      ]
    },
    "1842": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%8#0",
        "arc4_encoded%1#0"
      ]
    },
    "1843": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%0#0"
      ]
    },
    "1845": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%0#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1847": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "1848": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1849": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1850": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1851": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%9#0"
      ]
    },
    "1852": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%9#0",
        "winRatio#0 (copy)"
      ]
    },
    "1854": {
      "op": "replace2 137",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%1#0"
      ]
    },
    "1856": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1857": {
      "retsub": true,
      "op": "retsub"
    },
    "1858": {
      "block": "CreateGameWithArc200Token_else_body@5",
      "stack_in": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "deposit#0"
      ]
    },
    "1860": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "deposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "deposit#0",
        "deposit#0 (copy)"
      ]
    },
    "1861": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "deposit#0",
        "value_len%2#0"
      ]
    },
    "1862": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "deposit#0",
        "value_len%2#0",
        "32"
      ]
    },
    "1863": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "deposit#0",
        "len_ok%2#0"
      ]
    },
    "1864": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "deposit#0"
      ]
    },
    "1865": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "deposit#0",
        "bzero%0#0"
      ]
    },
    "1867": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%2#0"
      ]
    },
    "1868": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%2#0",
        "to_encode%2#0"
      ]
    },
    "1870": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "1871": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "arc4_encoded%2#0"
      ]
    },
    "1872": {
      "op": "frame_dig -3",
      "defined_out": [
        "arc4_encoded%2#0",
        "assetId#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "arc4_encoded%2#0",
        "assetId#0 (copy)"
      ]
    },
    "1874": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1875": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "1876": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1877": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0",
        "321"
      ]
    },
    "1879": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "321",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0",
        "321",
        "0"
      ]
    },
    "1880": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1881": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0",
        "322"
      ]
    },
    "1883": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "322",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0",
        "322",
        "1"
      ]
    },
    "1884": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1885": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "1886": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1887": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%9#0",
        "0x0000000000000000"
      ]
    },
    "1888": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1889": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%10#0",
        "0x0000000000000000"
      ]
    },
    "1890": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%11#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1891": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%11#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%11#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1892": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1893": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%12#0",
        "0x0000000000000000"
      ]
    },
    "1894": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1895": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%13#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1896": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1897": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%14#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%14#0",
        "winRatio#0 (copy)"
      ]
    },
    "1899": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%15#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "1900": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%15#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_tuple_buffer%15#0",
        "sender#0"
      ]
    },
    "1902": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "newValue#0",
        "sender#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "newValue#0"
      ]
    },
    "1903": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1904": {
      "retsub": true,
      "op": "retsub"
    },
    "1905": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithNativeToken",
      "params": {
        "txnDeposit#0": "uint64",
        "game#0": "bytes",
        "winProbability#0": "bytes"
      },
      "block": "StartGameWithNativeToken",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1908": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "1909": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0"
      ]
    },
    "1910": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0"
      ]
    },
    "1912": {
      "op": "frame_dig -3",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1914": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0"
      ]
    },
    "1916": {
      "op": "dup",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0"
      ]
    },
    "1917": {
      "op": "txn Sender",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "1919": {
      "op": "dig 1",
      "defined_out": [
        "sender#0",
        "sender#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%0#0",
        "sender#0 (copy)"
      ]
    },
    "1921": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "1922": {
      "error": "Sender of the app call must be the same as sender of the deposit",
      "op": "assert // Sender of the app call must be the same as sender of the deposit",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0"
      ]
    },
    "1923": {
      "op": "frame_dig -2",
      "defined_out": [
        "game#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "1925": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%3#0"
      ]
    },
    "1928": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "1929": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%3#0"
      ]
    },
    "1931": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%3#0",
        "0x0000000000000000"
      ]
    },
    "1932": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%4#0"
      ]
    },
    "1933": {
      "error": "Asset id in the tx does not match the game asset id",
      "op": "assert // Asset id in the tx does not match the game asset id",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0"
      ]
    },
    "1934": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "\"g\""
      ]
    },
    "1935": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "\"g\"",
        "game#0 (copy)"
      ]
    },
    "1937": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "1938": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%5#0",
        "tmp%5#0"
      ]
    },
    "1939": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "1941": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "1942": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1943": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0",
        "maybe_exists%0#0"
      ]
    },
    "1945": {
      "error": "The game does not exist",
      "op": "assert // The game does not exist",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "1946": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1947": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "maybe_value%1#0"
      ]
    },
    "1948": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "1951": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%7#0",
        "0x0000000000000000"
      ]
    },
    "1952": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%8#0"
      ]
    },
    "1953": {
      "error": "This game must be played with native token",
      "op": "assert // This game must be played with native token",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0"
      ]
    },
    "1954": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "winProbability#0 (copy)"
      ]
    },
    "1956": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%9#0"
      ]
    },
    "1957": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%9#0",
        "tmp%9#0"
      ]
    },
    "1958": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "tmp%9#0"
      ]
    },
    "1960": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "tmp%9#0",
        "1000000"
      ]
    },
    "1962": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "tmp%10#0"
      ]
    },
    "1963": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0"
      ]
    },
    "1964": {
      "op": "bytec 6 // \"p\"",
      "defined_out": [
        "\"p\"",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "\"p\""
      ]
    },
    "1966": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "1967": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1968": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "1969": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1970": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%2#0"
      ]
    },
    "1972": {
      "op": "bz StartGameWithNativeToken_after_if_else@3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1975": {
      "op": "frame_dig 7",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "1977": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1978": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%3#0"
      ]
    },
    "1979": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "1980": {
      "op": "extract_uint64",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "1981": {
      "op": "intc_2 // 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%14#0",
        "1"
      ]
    },
    "1982": {
      "op": ">",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%15#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%15#0"
      ]
    },
    "1983": {
      "error": "Your previous game has not yet been claimed",
      "op": "assert // Your previous game has not yet been claimed",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1984": {
      "block": "StartGameWithNativeToken_after_if_else@3",
      "stack_in": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "to_encode%0#0"
      ]
    },
    "1986": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%0#0"
      ]
    },
    "1987": {
      "op": "frame_dig 5",
      "defined_out": [
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "tmp%5#0"
      ]
    },
    "1989": {
      "op": "dup",
      "defined_out": [
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "tmp%5#0 (copy)",
        "tmp%5#0 (copy)"
      ]
    },
    "1990": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "tmp%5#0 (copy)"
      ]
    },
    "1992": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1993": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0"
      ]
    },
    "1994": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "1995": {
      "op": "replace2 49",
      "defined_out": [
        "tmp%5#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "updated_data%0#0"
      ]
    },
    "1997": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "updated_data%0#0",
        "tmp%5#0 (copy)"
      ]
    },
    "1999": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2000": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0"
      ]
    },
    "2001": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%5#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2003": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%17#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0"
      ]
    },
    "2005": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0",
        "tmp%17#0"
      ]
    },
    "2006": {
      "op": "frame_bury 2",
      "defined_out": [
        "tmp%17#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0"
      ]
    },
    "2008": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "tmp%17#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0",
        "1000000"
      ]
    },
    "2010": {
      "op": "*",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%18#0"
      ]
    },
    "2011": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%18#0",
        "tmp%9#0"
      ]
    },
    "2013": {
      "op": "/",
      "defined_out": [
        "tmp%17#0",
        "tmp%20#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%20#0"
      ]
    },
    "2014": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2015": {
      "op": "dup",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ]
    },
    "2016": {
      "op": "len",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "value_len%0#0"
      ]
    },
    "2017": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2018": {
      "op": "<=",
      "defined_out": [
        "len_ok%0#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "len_ok%0#0"
      ]
    },
    "2019": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2020": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "32"
      ]
    },
    "2021": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "2022": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "2023": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "2025": {
      "op": "b|",
      "defined_out": [
        "bzero%0#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "winAmount#0"
      ]
    },
    "2026": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "tmp%5#0"
      ]
    },
    "2027": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2028": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "maybe_value%5#0"
      ]
    },
    "2029": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "tmp%17#0",
        "tmp%22#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "tmp%22#0"
      ]
    },
    "2032": {
      "op": "b<=",
      "defined_out": [
        "bzero%0#0",
        "tmp%17#0",
        "tmp%23#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%23#0"
      ]
    },
    "2033": {
      "error": "The game does not have enough balance for your win scenario",
      "op": "assert // The game does not have enough balance for your win scenario",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2034": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "prevDeposit#0"
      ]
    },
    "2035": {
      "op": "frame_bury 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2037": {
      "op": "bytec 5 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "0x640000000000000000"
      ]
    },
    "2039": {
      "op": "box_len",
      "defined_out": [
        "bzero%0#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2040": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%6#0"
      ]
    },
    "2042": {
      "op": "bz StartGameWithNativeToken_after_if_else@5",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2045": {
      "op": "bytec 5 // 0x640000000000000000",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "0x640000000000000000"
      ]
    },
    "2047": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "maybe_exists%7#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "prevDeposit#0",
        "maybe_exists%7#0"
      ]
    },
    "2048": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%7#0",
        "prevDeposit#0"
      ]
    },
    "2049": {
      "op": "frame_bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%7#0"
      ]
    },
    "2051": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2052": {
      "block": "StartGameWithNativeToken_after_if_else@5",
      "stack_in": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%17#0"
      ]
    },
    "2054": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2055": {
      "op": "frame_dig 1",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0"
      ]
    },
    "2057": {
      "op": "dig 1",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%1#0 (copy)",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2059": {
      "op": "b+",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0"
      ]
    },
    "2060": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "2061": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "2062": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "2063": {
      "op": "<=",
      "defined_out": [
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "2064": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0"
      ]
    },
    "2065": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "2067": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "2068": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%1#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2070": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%1#0"
      ]
    },
    "2071": {
      "op": "bytec 5 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "arc4_encoded%1#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%1#0",
        "0x640000000000000000"
      ]
    },
    "2073": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "0x640000000000000000",
        "arc4_encoded%1#0"
      ]
    },
    "2074": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2075": {
      "op": "global Round",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%2#0"
      ]
    },
    "2077": {
      "op": "itob",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2078": {
      "op": "dig 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2080": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "val_as_bytes%1#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "value_len%2#0"
      ]
    },
    "2081": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "value_len%2#0",
        "32"
      ]
    },
    "2082": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "len_ok%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "len_ok%2#0"
      ]
    },
    "2083": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2084": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2086": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0"
      ]
    },
    "2087": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "game#0 (copy)",
        "prevDeposit#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "game#0 (copy)"
      ]
    },
    "2089": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%29#0"
      ]
    },
    "2092": {
      "op": "bytec 12 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%29#0",
        "0x0000000000000001"
      ]
    },
    "2094": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%29#0",
        "0x0000000000000001",
        "winProbability#0 (copy)"
      ]
    },
    "2096": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "encoded_tuple_buffer%2#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%29#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2097": {
      "op": "uncover 3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "arc4_encoded%2#0",
        "tmp%29#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "2099": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "encoded_tuple_buffer%3#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "arc4_encoded%2#0",
        "tmp%29#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2100": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%3#0",
        "arc4_encoded%2#0"
      ]
    },
    "2102": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2103": {
      "op": "frame_dig 4",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "2105": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2106": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0",
        "tmp%29#0"
      ]
    },
    "2107": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2108": {
      "op": "frame_dig 3",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0",
        "sender#0"
      ]
    },
    "2110": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "newValue#0"
      ]
    },
    "2111": {
      "op": "frame_dig 7",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "newValue#0",
        "tmp%11#0"
      ]
    },
    "2113": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%11#0",
        "newValue#0"
      ]
    },
    "2114": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2115": {
      "retsub": true,
      "op": "retsub"
    },
    "2116": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithASAToken",
      "params": {
        "txnDeposit#0": "uint64",
        "game#0": "bytes",
        "winProbability#0": "bytes"
      },
      "block": "StartGameWithASAToken",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2119": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "2120": {
      "op": "dupn 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0"
      ]
    },
    "2122": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0"
      ]
    },
    "2124": {
      "op": "frame_dig -3",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2126": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0"
      ]
    },
    "2128": {
      "op": "dup",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0"
      ]
    },
    "2129": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2131": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "sender#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "to_encode%0#0"
      ]
    },
    "2133": {
      "op": "itob",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "assetId#0"
      ]
    },
    "2134": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "assetId#0",
        "assetId#0 (copy)"
      ]
    },
    "2135": {
      "op": "uncover 2",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2137": {
      "op": "txn Sender",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2139": {
      "op": "dig 1",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "sender#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%0#0",
        "sender#0 (copy)"
      ]
    },
    "2141": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2142": {
      "error": "Sender of the app call must be the same as sender of the deposit",
      "op": "assert // Sender of the app call must be the same as sender of the deposit",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2143": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0",
        "game#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "2145": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ]
    },
    "2148": {
      "op": "cover 2",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2150": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "2152": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "game#0 (copy)",
        "0"
      ]
    },
    "2153": {
      "op": "extract_uint64",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%4#0"
      ]
    },
    "2154": {
      "op": "dig 2",
      "defined_out": [
        "assetId#0",
        "assetId#0 (copy)",
        "sender#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%4#0",
        "assetId#0 (copy)"
      ]
    },
    "2156": {
      "op": "btoi",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2157": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%6#0"
      ]
    },
    "2158": {
      "error": "Asset id in the tx does not match the game asset id",
      "op": "assert // Asset id in the tx does not match the game asset id",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2159": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "\"g\""
      ]
    },
    "2160": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "\"g\"",
        "game#0 (copy)"
      ]
    },
    "2162": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2163": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "2164": {
      "op": "cover 3",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2166": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "2167": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2168": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "maybe_exists%0#0"
      ]
    },
    "2170": {
      "error": "The game does not exist",
      "op": "assert // The game does not exist",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2171": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2172": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "maybe_value%1#0"
      ]
    },
    "2173": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%9#0"
      ]
    },
    "2176": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%9#0",
        "assetId#0"
      ]
    },
    "2178": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%10#0"
      ]
    },
    "2179": {
      "error": "This game must be played with native token",
      "op": "assert // This game must be played with native token",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0"
      ]
    },
    "2180": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "winProbability#0 (copy)"
      ]
    },
    "2182": {
      "op": "btoi",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%11#0"
      ]
    },
    "2183": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2184": {
      "op": "cover 2",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "tmp%11#0"
      ]
    },
    "2186": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "tmp%11#0",
        "1000000"
      ]
    },
    "2188": {
      "op": "<=",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "tmp%12#0"
      ]
    },
    "2189": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0"
      ]
    },
    "2190": {
      "op": "bytec 6 // \"p\"",
      "defined_out": [
        "\"p\"",
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "\"p\""
      ]
    },
    "2192": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "2193": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2194": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "2195": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2196": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%2#0"
      ]
    },
    "2198": {
      "op": "bz StartGameWithASAToken_after_if_else@3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2201": {
      "op": "frame_dig 9",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "2203": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2204": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%3#0"
      ]
    },
    "2205": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2206": {
      "op": "extract_uint64",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0"
      ]
    },
    "2207": {
      "op": "intc_2 // 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0",
        "1"
      ]
    },
    "2208": {
      "op": ">",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%17#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%17#0"
      ]
    },
    "2209": {
      "error": "Your previous game has not yet been claimed",
      "op": "assert // Your previous game has not yet been claimed",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2210": {
      "block": "StartGameWithASAToken_after_if_else@3",
      "stack_in": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "to_encode%1#0"
      ]
    },
    "2212": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%1#0"
      ]
    },
    "2213": {
      "op": "frame_dig 7",
      "defined_out": [
        "tmp%7#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%1#0",
        "tmp%7#0"
      ]
    },
    "2215": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%1#0",
        "tmp%7#0 (copy)",
        "tmp%7#0 (copy)"
      ]
    },
    "2216": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "tmp%7#0 (copy)"
      ]
    },
    "2218": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%7#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2219": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "maybe_value%4#0"
      ]
    },
    "2220": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "val_as_bytes%1#0"
      ]
    },
    "2221": {
      "op": "replace2 49",
      "defined_out": [
        "tmp%7#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "updated_data%0#0"
      ]
    },
    "2223": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "updated_data%0#0",
        "tmp%7#0 (copy)"
      ]
    },
    "2225": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2226": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0"
      ]
    },
    "2227": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%7#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2229": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0"
      ]
    },
    "2231": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0",
        "tmp%19#0"
      ]
    },
    "2232": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0"
      ]
    },
    "2234": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0",
        "1000000"
      ]
    },
    "2236": {
      "op": "*",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%20#0"
      ]
    },
    "2237": {
      "op": "frame_dig 8",
      "defined_out": [
        "tmp%11#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%20#0",
        "tmp%11#0"
      ]
    },
    "2239": {
      "op": "/",
      "defined_out": [
        "tmp%11#0",
        "tmp%19#0",
        "tmp%22#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%22#0"
      ]
    },
    "2240": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2241": {
      "op": "dup",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ]
    },
    "2242": {
      "op": "len",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "value_len%0#0"
      ]
    },
    "2243": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "reinterpret_biguint%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2244": {
      "op": "<=",
      "defined_out": [
        "len_ok%0#0",
        "reinterpret_biguint%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "len_ok%0#0"
      ]
    },
    "2245": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2246": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "32"
      ]
    },
    "2247": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "2248": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "2249": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "2251": {
      "op": "b|",
      "defined_out": [
        "bzero%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2252": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "tmp%7#0"
      ]
    },
    "2253": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2254": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "maybe_value%5#0"
      ]
    },
    "2255": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%24#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "tmp%24#0"
      ]
    },
    "2258": {
      "op": "b<=",
      "defined_out": [
        "bzero%0#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%25#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%25#0"
      ]
    },
    "2259": {
      "error": "The game does not have enough balance for your win scenario",
      "op": "assert // The game does not have enough balance for your win scenario",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2260": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "prevDeposit#0"
      ]
    },
    "2261": {
      "op": "frame_bury 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2263": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"d\""
      ]
    },
    "2265": {
      "op": "frame_dig 5",
      "defined_out": [
        "\"d\"",
        "assetId#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"d\"",
        "assetId#0"
      ]
    },
    "2267": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0"
      ]
    },
    "2268": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0",
        "tmp%26#0"
      ]
    },
    "2269": {
      "op": "frame_bury 2",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0"
      ]
    },
    "2271": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2272": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%6#0"
      ]
    },
    "2274": {
      "op": "bz StartGameWithASAToken_after_if_else@5",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2277": {
      "op": "frame_dig 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0"
      ]
    },
    "2279": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "maybe_exists%7#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "prevDeposit#0",
        "maybe_exists%7#0"
      ]
    },
    "2280": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%7#0",
        "prevDeposit#0"
      ]
    },
    "2281": {
      "op": "frame_bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%7#0"
      ]
    },
    "2283": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2284": {
      "block": "StartGameWithASAToken_after_if_else@5",
      "stack_in": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%19#0"
      ]
    },
    "2286": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2287": {
      "op": "frame_dig 1",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0"
      ]
    },
    "2289": {
      "op": "dig 1",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%1#0 (copy)",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2291": {
      "op": "b+",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0"
      ]
    },
    "2292": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "2293": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "value_len%1#0"
      ]
    },
    "2294": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "value_len%1#0",
        "32"
      ]
    },
    "2295": {
      "op": "<=",
      "defined_out": [
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "len_ok%1#0"
      ]
    },
    "2296": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0"
      ]
    },
    "2297": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "bzero%0#0"
      ]
    },
    "2299": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "2300": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2302": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%1#0"
      ]
    },
    "2303": {
      "op": "frame_dig 2",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%1#0",
        "tmp%26#0"
      ]
    },
    "2305": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "tmp%26#0",
        "arc4_encoded%1#0"
      ]
    },
    "2306": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2307": {
      "op": "global Round",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%3#0"
      ]
    },
    "2309": {
      "op": "itob",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "2310": {
      "op": "dig 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2312": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "value_len%2#0"
      ]
    },
    "2313": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "value_len%2#0",
        "32"
      ]
    },
    "2314": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "len_ok%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "len_ok%2#0"
      ]
    },
    "2315": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "2316": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2318": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0"
      ]
    },
    "2319": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "game#0 (copy)",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0",
        "game#0 (copy)"
      ]
    },
    "2321": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0",
        "tmp%31#0"
      ]
    },
    "2324": {
      "op": "bytec 12 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0",
        "tmp%31#0",
        "0x0000000000000001"
      ]
    },
    "2326": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0",
        "tmp%31#0",
        "0x0000000000000001",
        "winProbability#0 (copy)"
      ]
    },
    "2328": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "encoded_tuple_buffer%2#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2329": {
      "op": "uncover 3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "arc4_encoded%2#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "2331": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "encoded_tuple_buffer%3#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "arc4_encoded%2#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2332": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0",
        "arc4_encoded%2#0"
      ]
    },
    "2334": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2335": {
      "op": "frame_dig 6",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "2337": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2338": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "encoded_tuple_buffer%5#0",
        "tmp%31#0"
      ]
    },
    "2339": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2340": {
      "op": "frame_dig 4",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "encoded_tuple_buffer%6#0",
        "sender#0"
      ]
    },
    "2342": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "newValue#0"
      ]
    },
    "2343": {
      "op": "frame_dig 9",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%13#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "newValue#0",
        "tmp%13#0"
      ]
    },
    "2345": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%13#0",
        "newValue#0"
      ]
    },
    "2346": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2347": {
      "retsub": true,
      "op": "retsub"
    },
    "2348": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithArc200Token",
      "params": {
        "amount#0": "bytes",
        "assetId#0": "bytes",
        "game#0": "bytes",
        "winProbability#0": "bytes"
      },
      "block": "StartGameWithArc200Token",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2351": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "2352": {
      "op": "dupn 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0"
      ]
    },
    "2354": {
      "op": "txn Sender"
    },
    "2356": {
      "op": "dup"
    },
    "2357": {
      "op": "frame_dig -2",
      "defined_out": [
        "game#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "2359": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2362": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2363": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2365": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetId#0 (copy)",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%0#0",
        "assetId#0 (copy)"
      ]
    },
    "2367": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "2368": {
      "error": "Asset id in the tx does not match the game asset id",
      "op": "assert // Asset id in the tx does not match the game asset id",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0"
      ]
    },
    "2369": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "\"g\""
      ]
    },
    "2370": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "\"g\"",
        "game#0 (copy)"
      ]
    },
    "2372": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2373": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2374": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2376": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2377": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2378": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "2380": {
      "error": "The game does not exist",
      "op": "assert // The game does not exist",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2381": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2382": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "maybe_value%1#0"
      ]
    },
    "2383": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%4#0"
      ]
    },
    "2386": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%4#0",
        "assetId#0 (copy)"
      ]
    },
    "2388": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "2389": {
      "error": "This game must be played with native token",
      "op": "assert // This game must be played with native token",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0"
      ]
    },
    "2390": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "winProbability#0 (copy)"
      ]
    },
    "2392": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%6#0"
      ]
    },
    "2393": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "2394": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "tmp%6#0"
      ]
    },
    "2396": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "tmp%6#0",
        "1000000"
      ]
    },
    "2398": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2399": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0"
      ]
    },
    "2400": {
      "op": "bytec 6 // \"p\"",
      "defined_out": [
        "\"p\"",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "\"p\""
      ]
    },
    "2402": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "2403": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2404": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "2405": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2406": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%2#0"
      ]
    },
    "2408": {
      "op": "bz StartGameWithArc200Token_after_if_else@3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2411": {
      "op": "frame_dig 7",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "2413": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2414": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%3#0"
      ]
    },
    "2415": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2416": {
      "op": "extract_uint64",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%11#0"
      ]
    },
    "2417": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "sender#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%11#0",
        "1"
      ]
    },
    "2418": {
      "op": ">",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%12#0"
      ]
    },
    "2419": {
      "error": "Your previous game has not yet been claimed",
      "op": "assert // Your previous game has not yet been claimed",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2420": {
      "block": "StartGameWithArc200Token_after_if_else@3",
      "stack_in": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%0#0"
      ]
    },
    "2422": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "2423": {
      "op": "frame_dig 5",
      "defined_out": [
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "tmp%2#0"
      ]
    },
    "2425": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "tmp%2#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "2426": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2428": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2429": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0"
      ]
    },
    "2430": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2431": {
      "op": "replace2 49",
      "defined_out": [
        "tmp%2#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "updated_data%0#0"
      ]
    },
    "2433": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "updated_data%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2435": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2436": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2437": {
      "op": "itxn_begin"
    },
    "2438": {
      "op": "frame_dig -2",
      "defined_out": [
        "game#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "game#0 (copy)"
      ]
    },
    "2440": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "game#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "game#0 (copy)",
        "0"
      ]
    },
    "2441": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2442": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0"
      ]
    },
    "2444": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2446": {
      "op": "bytec 15 // method \"arc200_transferFrom(address,address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transferFrom(address,address,uint256)bool)",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0",
        "Method(arc200_transferFrom(address,address,uint256)bool)"
      ]
    },
    "2448": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2450": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%16#0",
        "tmp%15#0"
      ]
    },
    "2451": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%16#0"
      ]
    },
    "2453": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2455": {
      "op": "frame_dig -4",
      "defined_out": [
        "amount#0 (copy)",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "amount#0 (copy)"
      ]
    },
    "2457": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2459": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2461": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "6"
      ]
    },
    "2463": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2465": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "0"
      ]
    },
    "2466": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2468": {
      "op": "itxn_submit"
    },
    "2469": {
      "op": "frame_dig -4",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "amount#0 (copy)"
      ]
    },
    "2471": {
      "op": "bytec 13 // 0x0f4240",
      "defined_out": [
        "0x0f4240",
        "amount#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "amount#0 (copy)",
        "0x0f4240"
      ]
    },
    "2473": {
      "op": "b*",
      "defined_out": [
        "tmp%17#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%17#0"
      ]
    },
    "2474": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%17#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%17#0",
        "tmp%6#0"
      ]
    },
    "2476": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%17#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2477": {
      "op": "b/",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0"
      ]
    },
    "2478": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "2479": {
      "op": "len",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "value_len%0#0"
      ]
    },
    "2480": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "tmp%2#0",
        "tmp%6#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2481": {
      "op": "<=",
      "defined_out": [
        "len_ok%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "len_ok%0#0"
      ]
    },
    "2482": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0"
      ]
    },
    "2483": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "32"
      ]
    },
    "2484": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "2485": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "2486": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "2488": {
      "op": "b|",
      "defined_out": [
        "bzero%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "winAmount#0"
      ]
    },
    "2489": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "tmp%2#0"
      ]
    },
    "2490": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%2#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2491": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "maybe_value%5#0"
      ]
    },
    "2492": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "tmp%2#0",
        "tmp%20#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "tmp%20#0"
      ]
    },
    "2495": {
      "op": "b<=",
      "defined_out": [
        "bzero%0#0",
        "tmp%2#0",
        "tmp%21#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%21#0"
      ]
    },
    "2496": {
      "error": "The game does not have enough balance for your win scenario",
      "op": "assert // The game does not have enough balance for your win scenario",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2497": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0"
      ]
    },
    "2498": {
      "op": "frame_bury 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2500": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "\"d\""
      ]
    },
    "2502": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "2504": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0"
      ]
    },
    "2505": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0",
        "tmp%22#0"
      ]
    },
    "2506": {
      "op": "frame_bury 2",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0"
      ]
    },
    "2508": {
      "op": "box_len",
      "defined_out": [
        "bzero%0#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2509": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%6#0"
      ]
    },
    "2511": {
      "op": "bz StartGameWithArc200Token_after_if_else@6",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2514": {
      "op": "frame_dig 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0"
      ]
    },
    "2516": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "maybe_exists%7#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0",
        "maybe_exists%7#0"
      ]
    },
    "2517": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%7#0",
        "prevDeposit#0"
      ]
    },
    "2518": {
      "op": "frame_bury 1",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%7#0"
      ]
    },
    "2520": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2521": {
      "block": "StartGameWithArc200Token_after_if_else@6",
      "stack_in": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0"
      ]
    },
    "2523": {
      "op": "frame_dig -4",
      "defined_out": [
        "amount#0 (copy)",
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0",
        "amount#0 (copy)"
      ]
    },
    "2525": {
      "op": "b+",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0"
      ]
    },
    "2526": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "2527": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0",
        "value_len%1#0"
      ]
    },
    "2528": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "to_encode%2#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0",
        "value_len%1#0",
        "32"
      ]
    },
    "2529": {
      "op": "<=",
      "defined_out": [
        "len_ok%1#0",
        "prevDeposit#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0",
        "len_ok%1#0"
      ]
    },
    "2530": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0"
      ]
    },
    "2531": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0",
        "bzero%0#0"
      ]
    },
    "2533": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "2534": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2536": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "arc4_encoded%1#0"
      ]
    },
    "2537": {
      "op": "frame_dig 2",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "arc4_encoded%1#0",
        "tmp%22#0"
      ]
    },
    "2539": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "tmp%22#0",
        "arc4_encoded%1#0"
      ]
    },
    "2540": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0"
      ]
    },
    "2541": {
      "op": "global Round",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "to_encode%3#0"
      ]
    },
    "2543": {
      "op": "itob",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2544": {
      "op": "frame_dig -4",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "amount#0 (copy)"
      ]
    },
    "2546": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "amount#0 (copy)",
        "bzero%0#0"
      ]
    },
    "2548": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0"
      ]
    },
    "2549": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "game#0 (copy)",
        "prevDeposit#0",
        "tmp%22#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "game#0 (copy)"
      ]
    },
    "2551": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%25#0"
      ]
    },
    "2554": {
      "op": "bytec 12 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%25#0",
        "0x0000000000000001"
      ]
    },
    "2556": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%25#0",
        "0x0000000000000001",
        "winProbability#0 (copy)"
      ]
    },
    "2558": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "encoded_tuple_buffer%2#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "tmp%25#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2559": {
      "op": "uncover 3",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "arc4_encoded%2#0",
        "tmp%25#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "2561": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "encoded_tuple_buffer%3#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "arc4_encoded%2#0",
        "tmp%25#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2562": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%3#0",
        "arc4_encoded%2#0"
      ]
    },
    "2564": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2565": {
      "op": "frame_dig 4",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ]
    },
    "2567": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2568": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "encoded_tuple_buffer%5#0",
        "tmp%25#0"
      ]
    },
    "2569": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2570": {
      "op": "frame_dig 3",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "encoded_tuple_buffer%6#0",
        "sender#0"
      ]
    },
    "2572": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "newValue#0"
      ]
    },
    "2573": {
      "op": "frame_dig 7",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "newValue#0",
        "tmp%8#0"
      ]
    },
    "2575": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%8#0",
        "newValue#0"
      ]
    },
    "2576": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2577": {
      "retsub": true,
      "op": "retsub"
    },
    "2578": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.Game",
      "params": {
        "creator#0": "bytes",
        "assetId#0": "bytes"
      },
      "block": "Game",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2581": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "assetId#0 (copy)"
      ]
    },
    "2583": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0 (copy)",
        "creator#0 (copy)"
      ],
      "stack_out": [
        "assetId#0 (copy)",
        "creator#0 (copy)"
      ]
    },
    "2585": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "2586": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"g\""
      ]
    },
    "2587": {
      "op": "swap",
      "stack_out": [
        "\"g\"",
        "key#0"
      ]
    },
    "2588": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2589": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2590": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2591": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2593": {
      "error": "Did not found the game",
      "op": "assert // Did not found the game",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2594": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2595": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2596": {
      "retsub": true,
      "op": "retsub"
    },
    "2597": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.MyGame",
      "params": {},
      "block": "MyGame",
      "stack_in": [],
      "op": "bytec 6 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "\"p\""
      ]
    },
    "2599": {
      "op": "txn Sender",
      "defined_out": [
        "\"p\"",
        "sender#0"
      ],
      "stack_out": [
        "\"p\"",
        "sender#0"
      ]
    },
    "2601": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2602": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2603": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2604": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2606": {
      "error": "Did not found the game you are playing",
      "op": "assert // Did not found the game you are playing",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2607": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2608": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2609": {
      "retsub": true,
      "op": "retsub"
    },
    "2610": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.ClaimGame",
      "params": {},
      "block": "ClaimGame",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2613": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0"
      ]
    },
    "2614": {
      "op": "dupn 9",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0"
      ]
    },
    "2616": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0"
      ]
    },
    "2618": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0"
      ]
    },
    "2619": {
      "op": "txn Sender"
    },
    "2621": {
      "op": "bytec 6 // \"p\""
    },
    "2623": {
      "op": "txn Sender",
      "defined_out": [
        "\"p\"",
        "sender#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "2625": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2626": {
      "op": "dupn 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2628": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2629": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2631": {
      "error": "Did not found the game you are playing",
      "op": "assert // Did not found the game you are playing",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2632": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "maybe_exists%1#0"
      ]
    },
    "2633": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "play#0"
      ]
    },
    "2634": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "play#0",
        "play#0 (copy)"
      ]
    },
    "2635": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "maybe_exists%1#0"
      ]
    },
    "2637": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0"
      ]
    },
    "2638": {
      "op": "dup",
      "defined_out": [
        "play#0",
        "play#0 (copy)",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "play#0 (copy)"
      ]
    },
    "2639": {
      "error": "Index access is out of bounds",
      "op": "extract 56 8 // on error: Index access is out of bounds",
      "defined_out": [
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "tmp%2#0"
      ]
    },
    "2642": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "tmp%2#0",
        "play#0 (copy)"
      ]
    },
    "2644": {
      "error": "Index access is out of bounds",
      "op": "extract 64 32 // on error: Index access is out of bounds",
      "defined_out": [
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2647": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "key#0"
      ]
    },
    "2648": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "key#0",
        "key#0"
      ]
    },
    "2649": {
      "op": "cover 2",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "key#0"
      ]
    },
    "2651": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "key#0",
        "\"g\""
      ]
    },
    "2652": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "\"g\"",
        "key#0"
      ]
    },
    "2653": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "tmp%4#0"
      ]
    },
    "2654": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "2655": {
      "op": "cover 2",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0"
      ]
    },
    "2657": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2658": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2659": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0",
        "maybe_exists%2#0"
      ]
    },
    "2661": {
      "error": "Did not found the game",
      "op": "assert // Did not found the game",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0"
      ]
    },
    "2662": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%3#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "game#0",
        "maybe_exists%3#0"
      ]
    },
    "2663": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "maybe_exists%3#0",
        "game#0"
      ]
    },
    "2664": {
      "op": "cover 2",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%3#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "play#0",
        "maybe_exists%3#0"
      ]
    },
    "2666": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "play#0"
      ]
    },
    "2667": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "play#0",
        "16"
      ]
    },
    "2669": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2670": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "2671": {
      "op": "global Round",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2673": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "tmp%8#0",
        "100"
      ]
    },
    "2675": {
      "op": "-",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2676": {
      "op": "<",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%10#0"
      ]
    },
    "2677": {
      "op": "bz ClaimGame_after_if_else@2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2680": {
      "op": "frame_dig 15",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "2682": {
      "op": "frame_dig 17",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0"
      ]
    },
    "2684": {
      "op": "frame_dig 14",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "2686": {
      "op": "frame_dig 12",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0",
        "sender#0"
      ]
    },
    "2688": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.LooseGame",
      "op": "callsub LooseGame",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "2691": {
      "op": "popn 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2693": {
      "retsub": true,
      "op": "retsub"
    },
    "2694": {
      "block": "ClaimGame_after_if_else@2",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 18",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "2696": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "1"
      ]
    },
    "2697": {
      "op": "+",
      "defined_out": [
        "tmp%13#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%13#0"
      ]
    },
    "2698": {
      "op": "block BlkSeed",
      "defined_out": [
        "seed#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "seed#0"
      ]
    },
    "2700": {
      "op": "bytec 13 // 0x0f4240",
      "defined_out": [
        "0x0f4240",
        "seed#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "seed#0",
        "0x0f4240"
      ]
    },
    "2702": {
      "op": "b%",
      "defined_out": [
        "rand0_1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0"
      ]
    },
    "2703": {
      "op": "frame_dig 14",
      "defined_out": [
        "play#0",
        "rand0_1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "play#0"
      ]
    },
    "2705": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "play#0",
        "rand0_1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "play#0",
        "8"
      ]
    },
    "2706": {
      "op": "extract_uint64",
      "defined_out": [
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%15#0"
      ]
    },
    "2707": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%15#0"
      ]
    },
    "2708": {
      "op": "frame_bury 10",
      "defined_out": [
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%15#0"
      ]
    },
    "2710": {
      "op": "frame_dig 17",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%15#0",
        "game#0"
      ]
    },
    "2712": {
      "op": "pushint 137 // 137",
      "defined_out": [
        "137",
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%15#0",
        "game#0",
        "137"
      ]
    },
    "2715": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "2716": {
      "op": "*",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%18#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%18#0"
      ]
    },
    "2717": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%18#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%18#0",
        "1000000"
      ]
    },
    "2719": {
      "op": "/",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%15#0",
        "tmp%7#0",
        "winThreshold#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "winThreshold#0"
      ]
    },
    "2720": {
      "op": "itob",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "reinterpret_biguint%1#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2721": {
      "op": "b<",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%19#0"
      ]
    },
    "2722": {
      "op": "bz ClaimGame_else_body@21",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2725": {
      "op": "frame_dig 14",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "play#0"
      ]
    },
    "2727": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%20#0"
      ]
    },
    "2730": {
      "op": "bytec 13 // 0x0f4240",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%20#0",
        "0x0f4240"
      ]
    },
    "2732": {
      "op": "b*",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%21#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%21#0"
      ]
    },
    "2733": {
      "op": "frame_dig 10",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%21#0",
        "tmp%15#0"
      ]
    },
    "2735": {
      "op": "itob",
      "defined_out": [
        "game#0",
        "play#0",
        "reinterpret_biguint%2#0",
        "tmp%15#0",
        "tmp%21#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%21#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "2736": {
      "op": "b/",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2737": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "winAmount#0"
      ]
    },
    "2738": {
      "op": "frame_bury 9",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2740": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "winAmount#0 (copy)"
      ]
    },
    "2741": {
      "op": "len",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0"
      ]
    },
    "2742": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0",
        "value_len%0#0"
      ]
    },
    "2743": {
      "op": "frame_bury 11",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0"
      ]
    },
    "2745": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2746": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "len_ok%0#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "len_ok%0#0"
      ]
    },
    "2747": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2748": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "32"
      ]
    },
    "2749": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0"
      ]
    },
    "2750": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "2751": {
      "op": "frame_bury 1",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0"
      ]
    },
    "2753": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0",
        "winAmount#0 (copy)"
      ]
    },
    "2755": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0"
      ]
    },
    "2756": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "2757": {
      "op": "frame_bury 0",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0"
      ]
    },
    "2759": {
      "op": "frame_dig 17",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0",
        "game#0"
      ]
    },
    "2761": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0",
        "arc4_encoded%0#0"
      ]
    },
    "2762": {
      "op": "replace2 65",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "2764": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "to_encode%0#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0",
        "to_encode%0#0"
      ]
    },
    "2766": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0",
        "val_as_bytes%0#0"
      ]
    },
    "2767": {
      "op": "replace2 57",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "2769": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0",
        "game#0"
      ]
    },
    "2770": {
      "op": "frame_bury 17",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "2772": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "game#0 (copy)",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0",
        "game#0 (copy)"
      ]
    },
    "2773": {
      "error": "Index access is out of bounds",
      "op": "extract 105 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%24#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0",
        "tmp%24#0"
      ]
    },
    "2776": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%24#0",
        "winAmount#0"
      ]
    },
    "2778": {
      "op": "b<",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%15#0",
        "tmp%25#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%25#0"
      ]
    },
    "2779": {
      "op": "swap",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "game#15",
        "play#0",
        "tmp%15#0",
        "tmp%25#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%25#0",
        "game#15"
      ]
    },
    "2780": {
      "op": "frame_bury 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%25#0"
      ]
    },
    "2782": {
      "op": "bz ClaimGame_after_if_else@5",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2785": {
      "op": "frame_dig 17",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "2787": {
      "op": "frame_dig 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "arc4_encoded%0#0"
      ]
    },
    "2789": {
      "op": "replace2 105",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "2791": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "game#15",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "to_encode%1#0"
      ]
    },
    "2793": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "game#15",
        "play#0",
        "tmp%15#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "val_as_bytes%1#0"
      ]
    },
    "2794": {
      "op": "replace2 97",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#15"
      ]
    },
    "2796": {
      "op": "frame_bury 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2798": {
      "block": "ClaimGame_after_if_else@5",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "2800": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "game#0"
      ]
    },
    "2801": {
      "op": "frame_bury 17",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "2803": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "320"
      ]
    },
    "2805": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%0#0"
      ]
    },
    "2806": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2807": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2808": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2810": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%0#0"
      ]
    },
    "2811": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2812": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%26#0"
      ]
    },
    "2813": {
      "op": "bz ClaimGame_after_if_else@10",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2816": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "game#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0"
      ]
    },
    "2817": {
      "op": "frame_bury 3",
      "defined_out": [
        "game#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2819": {
      "op": "frame_dig 15",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "2821": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%27#0"
      ]
    },
    "2824": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%27#0",
        "\"d\""
      ]
    },
    "2826": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "\"d\"",
        "tmp%27#0"
      ]
    },
    "2827": {
      "op": "concat",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%28#0"
      ]
    },
    "2828": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%28#0",
        "tmp%28#0"
      ]
    },
    "2829": {
      "op": "frame_bury 6",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%28#0"
      ]
    },
    "2831": {
      "op": "box_len",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2832": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%4#0"
      ]
    },
    "2834": {
      "op": "bz ClaimGame_after_if_else@8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2837": {
      "op": "frame_dig 6",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%28#0"
      ]
    },
    "2839": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%5#0",
        "prevDeposit#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "maybe_exists%5#0"
      ]
    },
    "2840": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%5#0",
        "prevDeposit#0"
      ]
    },
    "2841": {
      "op": "frame_bury 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%5#0"
      ]
    },
    "2843": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2844": {
      "block": "ClaimGame_after_if_else@8",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0"
      ]
    },
    "2846": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "prevDeposit#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)"
      ]
    },
    "2847": {
      "op": "frame_dig 9",
      "defined_out": [
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0"
      ]
    },
    "2849": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2850": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2852": {
      "op": "b>=",
      "defined_out": [
        "prevDeposit#0",
        "tmp%31#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0",
        "tmp%31#0"
      ]
    },
    "2853": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0"
      ]
    },
    "2854": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0",
        "winAmount#0 (copy)"
      ]
    },
    "2856": {
      "op": "b-",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0"
      ]
    },
    "2857": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "2858": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "value_len%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "value_len%2#0"
      ]
    },
    "2859": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "to_encode%2#0",
        "value_len%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "value_len%2#0",
        "32"
      ]
    },
    "2860": {
      "op": "<=",
      "defined_out": [
        "len_ok%2#0",
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "len_ok%2#0"
      ]
    },
    "2861": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0"
      ]
    },
    "2862": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "bzero%0#0"
      ]
    },
    "2864": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "2865": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2867": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%2#0"
      ]
    },
    "2868": {
      "op": "frame_dig 6",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%28#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%2#0",
        "tmp%28#0"
      ]
    },
    "2870": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%28#0",
        "arc4_encoded%2#0"
      ]
    },
    "2871": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0"
      ]
    },
    "2872": {
      "op": "frame_dig 17",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "2874": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "tmp%34#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%34#0"
      ]
    },
    "2877": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "tmp%34#0",
        "tmp%34#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%34#0",
        "tmp%34#0 (copy)"
      ]
    },
    "2878": {
      "op": "dig 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%34#0",
        "tmp%34#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2880": {
      "op": "b>=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "tmp%34#0",
        "tmp%35#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "2881": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%34#0"
      ]
    },
    "2882": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%34#0",
        "winAmount#0 (copy)"
      ]
    },
    "2884": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "to_encode%3#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0"
      ]
    },
    "2885": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "to_encode%3#0",
        "to_encode%3#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ]
    },
    "2886": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "to_encode%3#0",
        "value_len%3#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "value_len%3#0"
      ]
    },
    "2887": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "value_len%3#0",
        "32"
      ]
    },
    "2888": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%3#0",
        "prevDeposit#0",
        "tmp%28#0",
        "to_encode%3#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "len_ok%3#0"
      ]
    },
    "2889": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0"
      ]
    },
    "2890": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%3#0",
        "bzero%0#0"
      ]
    },
    "2892": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%3#0"
      ]
    },
    "2893": {
      "op": "frame_dig 16",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%3#0",
        "tmp%4#0"
      ]
    },
    "2895": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%3#0",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "2896": {
      "op": "cover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%3#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2898": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%3#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2899": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%3#0",
        "maybe_value%6#0"
      ]
    },
    "2900": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "maybe_value%6#0",
        "arc4_encoded%3#0"
      ]
    },
    "2901": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%28#0",
        "tmp%4#0",
        "updated_data%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "updated_data%4#0"
      ]
    },
    "2903": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2904": {
      "op": "frame_dig 13",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0"
      ]
    },
    "2906": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2907": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2908": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%7#0"
      ]
    },
    "2909": {
      "op": "bytec 14 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "bzero%0#0",
        "game#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%7#0",
        "0x0000000000000002"
      ]
    },
    "2911": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "updated_data%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "updated_data%5#0"
      ]
    },
    "2913": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2914": {
      "op": "itxn_begin"
    },
    "2915": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2917": {
      "op": "frame_dig 14",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0"
      ]
    },
    "2919": {
      "error": "Index access is out of bounds",
      "op": "extract 96 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%39#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0"
      ]
    },
    "2922": {
      "op": "frame_dig 11",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%39#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "value_len%0#0"
      ]
    },
    "2924": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%39#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "value_len%0#0",
        "8"
      ]
    },
    "2925": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "len_ok%4#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%39#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "len_ok%4#0"
      ]
    },
    "2926": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0"
      ]
    },
    "2927": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "8"
      ]
    },
    "2928": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "bzero%4#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%39#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "bzero%4#0"
      ]
    },
    "2929": {
      "op": "uncover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "bzero%4#0",
        "winAmount#0"
      ]
    },
    "2931": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%39#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "arc4_encoded%4#0"
      ]
    },
    "2932": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%39#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "2933": {
      "op": "itxn_field Amount",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%39#0"
      ]
    },
    "2935": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2937": {
      "op": "itxn_field Sender",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2939": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "1"
      ]
    },
    "2940": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2942": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%28#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0"
      ]
    },
    "2943": {
      "op": "itxn_field Fee",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2945": {
      "op": "itxn_submit"
    },
    "2946": {
      "block": "ClaimGame_after_if_else@10",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 17",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "2948": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "321"
      ]
    },
    "2950": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%1#0"
      ]
    },
    "2951": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "2952": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "2953": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "2955": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%1#0"
      ]
    },
    "2956": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "2957": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%40#0"
      ]
    },
    "2958": {
      "op": "bz ClaimGame_after_if_else@15",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2961": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "game#0",
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0"
      ]
    },
    "2962": {
      "op": "frame_bury 4",
      "defined_out": [
        "game#0",
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2964": {
      "op": "frame_dig 15",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "2966": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%41#0"
      ]
    },
    "2969": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%41#0",
        "\"d\""
      ]
    },
    "2971": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "\"d\"",
        "tmp%41#0"
      ]
    },
    "2972": {
      "op": "concat",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%42#0"
      ]
    },
    "2973": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%42#0",
        "tmp%42#0"
      ]
    },
    "2974": {
      "op": "frame_bury 7",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%42#0"
      ]
    },
    "2976": {
      "op": "box_len",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "prevDeposit\u2081#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2977": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%8#0"
      ]
    },
    "2979": {
      "op": "bz ClaimGame_after_if_else@13",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2982": {
      "op": "frame_dig 7",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%42#0"
      ]
    },
    "2984": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%9#0",
        "prevDeposit\u2081#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "maybe_exists%9#0"
      ]
    },
    "2985": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%9#0",
        "prevDeposit\u2081#0"
      ]
    },
    "2986": {
      "op": "frame_bury 4",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%9#0"
      ]
    },
    "2988": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2989": {
      "block": "ClaimGame_after_if_else@13",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0"
      ]
    },
    "2991": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)"
      ]
    },
    "2992": {
      "op": "frame_dig 9",
      "defined_out": [
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0"
      ]
    },
    "2994": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2995": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2997": {
      "op": "b>=",
      "defined_out": [
        "prevDeposit\u2081#0",
        "tmp%45#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0",
        "tmp%45#0"
      ]
    },
    "2998": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0"
      ]
    },
    "2999": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0",
        "winAmount#0 (copy)"
      ]
    },
    "3001": {
      "op": "b-",
      "defined_out": [
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0"
      ]
    },
    "3002": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "to_encode%4#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "to_encode%4#0 (copy)"
      ]
    },
    "3003": {
      "op": "len",
      "defined_out": [
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "value_len%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "value_len%5#0"
      ]
    },
    "3004": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "value_len%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "value_len%5#0",
        "32"
      ]
    },
    "3005": {
      "op": "<=",
      "defined_out": [
        "len_ok%5#0",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "len_ok%5#0"
      ]
    },
    "3006": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0"
      ]
    },
    "3007": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "bzero%0#0"
      ]
    },
    "3009": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "3010": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%4#0",
        "bzero%0#0 (copy)"
      ]
    },
    "3012": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%5#0",
        "bzero%0#0",
        "prevDeposit\u2081#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%5#0"
      ]
    },
    "3013": {
      "op": "frame_dig 7",
      "defined_out": [
        "arc4_encoded%5#0",
        "bzero%0#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%5#0",
        "tmp%42#0"
      ]
    },
    "3015": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%42#0",
        "arc4_encoded%5#0"
      ]
    },
    "3016": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0"
      ]
    },
    "3017": {
      "op": "frame_dig 17",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "3019": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "game#0 (copy)",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "3020": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)"
      ]
    },
    "3022": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "tmp%48#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%48#0"
      ]
    },
    "3025": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "tmp%48#0",
        "tmp%48#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%48#0",
        "tmp%48#0 (copy)"
      ]
    },
    "3026": {
      "op": "dig 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%48#0",
        "tmp%48#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3028": {
      "op": "b>=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "tmp%48#0",
        "tmp%49#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "3029": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%48#0"
      ]
    },
    "3030": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%48#0",
        "winAmount#0 (copy)"
      ]
    },
    "3032": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "to_encode%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0"
      ]
    },
    "3033": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "to_encode%5#0",
        "to_encode%5#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ]
    },
    "3034": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "to_encode%5#0",
        "value_len%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "value_len%6#0"
      ]
    },
    "3035": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "value_len%6#0",
        "32"
      ]
    },
    "3036": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%6#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "to_encode%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "len_ok%6#0"
      ]
    },
    "3037": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0"
      ]
    },
    "3038": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "to_encode%5#0",
        "bzero%0#0"
      ]
    },
    "3040": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "arc4_encoded%6#0"
      ]
    },
    "3041": {
      "op": "frame_dig 16",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "arc4_encoded%6#0",
        "tmp%4#0"
      ]
    },
    "3043": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "arc4_encoded%6#0",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "3044": {
      "op": "cover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%6#0",
        "tmp%4#0 (copy)"
      ]
    },
    "3046": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%6#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3047": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%6#0",
        "maybe_value%10#0"
      ]
    },
    "3048": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "maybe_value%10#0",
        "arc4_encoded%6#0"
      ]
    },
    "3049": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%42#0",
        "updated_data%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "updated_data%6#0"
      ]
    },
    "3051": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0"
      ]
    },
    "3052": {
      "op": "frame_dig 13",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0"
      ]
    },
    "3054": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3055": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3056": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%11#0"
      ]
    },
    "3057": {
      "op": "bytec 14 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "bzero%0#0",
        "game#0",
        "maybe_value%11#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%11#0",
        "0x0000000000000002"
      ]
    },
    "3059": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "updated_data%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "updated_data%7#0"
      ]
    },
    "3061": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0"
      ]
    },
    "3062": {
      "op": "itxn_begin"
    },
    "3063": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3065": {
      "op": "frame_dig 14",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0"
      ]
    },
    "3067": {
      "error": "Index access is out of bounds",
      "op": "extract 96 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0"
      ]
    },
    "3070": {
      "op": "frame_dig 11",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "value_len%0#0"
      ]
    },
    "3072": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "value_len%0#0",
        "8"
      ]
    },
    "3073": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "len_ok%7#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "len_ok%7#0"
      ]
    },
    "3074": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0"
      ]
    },
    "3075": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "8"
      ]
    },
    "3076": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "bzero%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "bzero%7#0"
      ]
    },
    "3077": {
      "op": "uncover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "bzero%7#0",
        "winAmount#0"
      ]
    },
    "3079": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%7#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "arc4_encoded%7#0"
      ]
    },
    "3080": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3081": {
      "op": "uncover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "game#0"
      ]
    },
    "3083": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "game#0",
        "32"
      ]
    },
    "3084": {
      "op": "extract_uint64",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "tmp%53#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3085": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3087": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%53#0"
      ]
    },
    "3089": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3091": {
      "op": "itxn_field Sender",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3093": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "4"
      ]
    },
    "3095": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3097": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%42#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0"
      ]
    },
    "3098": {
      "op": "itxn_field Fee",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3100": {
      "op": "itxn_submit"
    },
    "3101": {
      "block": "ClaimGame_after_if_else@15",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 17",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "3103": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "322"
      ]
    },
    "3105": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%2#0"
      ]
    },
    "3106": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "3107": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "3108": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "3110": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%2#0"
      ]
    },
    "3111": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "3112": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%55#0"
      ]
    },
    "3113": {
      "op": "bz ClaimGame_after_if_else@22",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3116": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "game#0",
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3117": {
      "op": "frame_bury 5",
      "defined_out": [
        "game#0",
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3119": {
      "op": "frame_dig 15",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "3121": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%56#0"
      ]
    },
    "3124": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%56#0",
        "\"d\""
      ]
    },
    "3126": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "\"d\"",
        "tmp%56#0"
      ]
    },
    "3127": {
      "op": "concat",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%57#0"
      ]
    },
    "3128": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%57#0",
        "tmp%57#0"
      ]
    },
    "3129": {
      "op": "frame_bury 8",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%57#0"
      ]
    },
    "3131": {
      "op": "box_len",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%12#0",
        "maybe_value%12#0",
        "prevDeposit\u2082#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3132": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%12#0"
      ]
    },
    "3134": {
      "op": "bz ClaimGame_after_if_else@18",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3137": {
      "op": "frame_dig 8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%57#0"
      ]
    },
    "3139": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%13#0",
        "prevDeposit\u2082#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "maybe_exists%13#0"
      ]
    },
    "3140": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%13#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3141": {
      "op": "frame_bury 5",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%13#0"
      ]
    },
    "3143": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3144": {
      "block": "ClaimGame_after_if_else@18",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3146": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)"
      ]
    },
    "3147": {
      "op": "frame_dig 9",
      "defined_out": [
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0"
      ]
    },
    "3149": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3150": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3152": {
      "op": "b>=",
      "defined_out": [
        "prevDeposit\u2082#0",
        "tmp%60#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0",
        "tmp%60#0"
      ]
    },
    "3153": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3154": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0",
        "winAmount#0 (copy)"
      ]
    },
    "3156": {
      "op": "b-",
      "defined_out": [
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0"
      ]
    },
    "3157": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "to_encode%6#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ]
    },
    "3158": {
      "op": "len",
      "defined_out": [
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "value_len%8#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "value_len%8#0"
      ]
    },
    "3159": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "value_len%8#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "value_len%8#0",
        "32"
      ]
    },
    "3160": {
      "op": "<=",
      "defined_out": [
        "len_ok%8#0",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "len_ok%8#0"
      ]
    },
    "3161": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0"
      ]
    },
    "3162": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "bzero%0#0"
      ]
    },
    "3164": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "3165": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%6#0",
        "bzero%0#0 (copy)"
      ]
    },
    "3167": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%8#0",
        "bzero%0#0",
        "prevDeposit\u2082#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%8#0"
      ]
    },
    "3168": {
      "op": "frame_dig 8",
      "defined_out": [
        "arc4_encoded%8#0",
        "bzero%0#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%8#0",
        "tmp%57#0"
      ]
    },
    "3170": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%57#0",
        "arc4_encoded%8#0"
      ]
    },
    "3171": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0"
      ]
    },
    "3172": {
      "op": "frame_dig 17",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "3174": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "game#0 (copy)",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "3175": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)"
      ]
    },
    "3177": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "tmp%63#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%63#0"
      ]
    },
    "3180": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "tmp%63#0",
        "tmp%63#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%63#0",
        "tmp%63#0 (copy)"
      ]
    },
    "3181": {
      "op": "dig 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%63#0",
        "tmp%63#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3183": {
      "op": "b>=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "tmp%63#0",
        "tmp%64#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%63#0",
        "tmp%64#0"
      ]
    },
    "3184": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%63#0"
      ]
    },
    "3185": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "tmp%63#0",
        "winAmount#0"
      ]
    },
    "3186": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "to_encode%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0"
      ]
    },
    "3187": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "to_encode%7#0",
        "to_encode%7#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "to_encode%7#0 (copy)"
      ]
    },
    "3188": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "to_encode%7#0",
        "value_len%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "value_len%9#0"
      ]
    },
    "3189": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "value_len%9#0",
        "32"
      ]
    },
    "3190": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%9#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "to_encode%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "len_ok%9#0"
      ]
    },
    "3191": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0"
      ]
    },
    "3192": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "arc4_encoded%9#0"
      ]
    },
    "3193": {
      "op": "frame_dig 16",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "arc4_encoded%9#0",
        "tmp%4#0"
      ]
    },
    "3195": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "arc4_encoded%9#0",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "3196": {
      "op": "cover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "arc4_encoded%9#0",
        "tmp%4#0 (copy)"
      ]
    },
    "3198": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%14#0",
        "maybe_value%14#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "arc4_encoded%9#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3199": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "arc4_encoded%9#0",
        "maybe_value%14#0"
      ]
    },
    "3200": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "maybe_value%14#0",
        "arc4_encoded%9#0"
      ]
    },
    "3201": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%57#0",
        "updated_data%8#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "updated_data%8#0"
      ]
    },
    "3203": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "3204": {
      "op": "frame_dig 13",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0"
      ]
    },
    "3206": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3207": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%15#0",
        "maybe_value%15#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3208": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "maybe_value%15#0"
      ]
    },
    "3209": {
      "op": "bytec 14 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "bzero%0#0",
        "game#0",
        "maybe_value%15#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "maybe_value%15#0",
        "0x0000000000000002"
      ]
    },
    "3211": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "updated_data%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "updated_data%9#0"
      ]
    },
    "3213": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "3214": {
      "op": "itxn_begin"
    },
    "3215": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "32"
      ]
    },
    "3216": {
      "op": "extract_uint64",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3217": {
      "op": "frame_dig 14",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0"
      ]
    },
    "3219": {
      "error": "Index access is out of bounds",
      "op": "extract 96 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "tmp%69#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "tmp%69#0"
      ]
    },
    "3222": {
      "op": "bytec 10 // method \"arc200_transfer(address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transfer(address,uint256)bool)",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "tmp%69#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "tmp%69#0",
        "Method(arc200_transfer(address,uint256)bool)"
      ]
    },
    "3224": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "tmp%69#0"
      ]
    },
    "3226": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3228": {
      "op": "frame_dig 0",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%0#0"
      ]
    },
    "3230": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3232": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3234": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "6"
      ]
    },
    "3236": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3238": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%57#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0"
      ]
    },
    "3239": {
      "op": "itxn_field Fee",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3241": {
      "op": "itxn_submit"
    },
    "3242": {
      "block": "ClaimGame_after_if_else@22",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3243": {
      "block": "ClaimGame_else_body@21",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 15",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "3245": {
      "op": "frame_dig 17",
      "defined_out": [
        "game#0",
        "key#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0"
      ]
    },
    "3247": {
      "op": "frame_dig 14",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "3249": {
      "op": "frame_dig 12",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0",
        "sender#0"
      ]
    },
    "3251": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.LooseGame",
      "op": "callsub LooseGame",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "3254": {
      "op": "popn 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#15",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%28#0",
        "tmp%42#0",
        "tmp%57#0",
        "winAmount#0",
        "tmp%15#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3256": {
      "retsub": true,
      "op": "retsub"
    },
    "3257": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.LooseGame",
      "params": {
        "key#0": "bytes",
        "game#0": "bytes",
        "play#0": "bytes",
        "sender#0": "bytes"
      },
      "block": "LooseGame",
      "stack_in": [],
      "op": "proto 4 3"
    },
    "3260": {
      "op": "frame_dig -3",
      "defined_out": [
        "game#0 (copy)"
      ],
      "stack_out": [
        "game#0 (copy)"
      ]
    },
    "3262": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3265": {
      "op": "frame_dig -2",
      "defined_out": [
        "play#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "play#0 (copy)"
      ]
    },
    "3267": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3270": {
      "op": "b+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "3271": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "3272": {
      "op": "len",
      "defined_out": [
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "3273": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "3274": {
      "op": "<=",
      "defined_out": [
        "len_ok%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "3275": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "3276": {
      "op": "intc_1 // 32",
      "stack_out": [
        "to_encode%0#0",
        "32"
      ]
    },
    "3277": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "3278": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0"
      ]
    },
    "3279": {
      "op": "bytec_3 // \"g\"",
      "defined_out": [
        "\"g\"",
        "arc4_encoded%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "\"g\""
      ]
    },
    "3280": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"g\"",
        "arc4_encoded%0#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "\"g\"",
        "key#0 (copy)"
      ]
    },
    "3282": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "tmp%2#0"
      ]
    },
    "3283": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3284": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3285": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "3286": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "3288": {
      "op": "replace2 0",
      "defined_out": [
        "tmp%2#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "updated_data%0#0"
      ]
    },
    "3290": {
      "op": "box_put",
      "stack_out": []
    },
    "3291": {
      "op": "bytec 6 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "\"p\""
      ]
    },
    "3293": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"p\"",
        "sender#0 (copy)"
      ],
      "stack_out": [
        "\"p\"",
        "sender#0 (copy)"
      ]
    },
    "3295": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3296": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3297": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3298": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%1#0"
      ]
    },
    "3299": {
      "op": "pushbytes 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%1#0",
        "0x0000000000000003"
      ]
    },
    "3309": {
      "op": "replace2 0",
      "defined_out": [
        "tmp%3#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "updated_data%1#0"
      ]
    },
    "3311": {
      "op": "box_put",
      "stack_out": []
    },
    "3312": {
      "op": "frame_dig -4",
      "stack_out": [
        "key#0 (copy)"
      ]
    },
    "3314": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "3316": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0 (copy)",
        "game#0 (copy)",
        "play#0 (copy)"
      ]
    },
    "3318": {
      "retsub": true,
      "op": "retsub"
    }
  }
}