{
  "version": 3,
  "sources": [
    "C:/Users/ludko/source/repos/scholtz/AVMSatoshiDice/projects/AVMSatoshiDice/smart_contracts/avm_satoshi_dice/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA6nBG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAjmBH;;;AAAA;;;AAimBG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAtEA;;AAAA;AAAA;AAAA;;AAAA;AA3hBH;;;AAAA;;;AAAA;;;AAAA;;;AA2hBG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA9DA;;AAAA;AAAA;AAAA;;AAAA;AA7dH;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AA6dG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA9DA;;AAAA;AAAA;AAAA;;AAAA;AA/ZH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AA+ZG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA3EA;;AAAA;AAAA;AAAA;;AAAA;AApVH;;;AAAA;;;AAAA;;;AAoVG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA/DA;;AAAA;AAAA;AAAA;;AAAA;AArRH;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAqRG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AA3PH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AA2PG;;;AAAA;;AA7DA;;AAAA;AAAA;AAAA;;AAAA;AA9LH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AA8LG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxIA;;AAAA;AAAA;AAAA;;AAAA;AAtDH;;;AAAA;;;AAAA;;;AAAA;;;AAsDG;;;AAAA;;AAjCA;;AAAA;AAAA;AAAA;;AAAA;AArBH;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAqBG;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AATA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAZH;;;AAAA;;;AAYG;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAZH;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAYE;;;AAEgB;;AAAuB;;AAA9B;AAAP;AANmC;;;;;;;AAOnC;;AAAA;AACO;AAAP;AAKF;;;AAUgB;;AAAuB;;AAA9B;AAAP;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAAA;;;AAWnB;AAWF;;;;;;;;;;AAEc;;AAEa;;AAFb;AAvDqD;;AAAA;AAAA;AAAA;AA4D7C;AAAA;;AAApB;;;AAC+B;;AAAA;AAAA;AAAA;;AAAA;AAGzB;;AAAmC;;AAAnC;;;;;AAAJ;;;AACgC;;AAAA;;;AAAA;;AAE1B;;AAAA;AAAgD;;;AAAjC;AACf;;AAAA;AAAyB;AAAzB;AAAA;;AAAA;;AAGC;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAAA;AADF;AAK6C;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAzEwD;;AAAA;;AAAA;AA0EiB;AAAA;AAAA;AAA1B;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;AAES;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AACE;AAEY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AAE7B;;;;;;;;;;AAJV;;;AAKS;;;AALT;AASO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAW;AAApB;;;AACE;AAE4B;;AAAR;AAAQ;AACX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AAElC;;;;;;;;;;;;AALV;;;;AAMS;;;AANT;AAUO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AAEE;AAEwB;;AAAR;AAAQ;AACwD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEtE;;;;AAFI;;;;;;;;;;;;AAHd;;;;AAIS;;;AAJT;;AAWS;;AAAuB;;AAA9B;AAAJ;AAGc;;AAAA;AAAA;AAAA;;AAAZ;;;AAEW;;AAA0B;;AAAA;AAC1B;;AAA0B;;AAAA;AADjC;AAnHkD;;AAAA;;AAAA;AAqHZ;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAoD;AAHhD;;AAAA;AACJ;AADI;AAAA;;AAIkB;AAAjB;;AAAA;AAAP;AACuB;;AAAA;AAA2B;;;;AAClD;;;;;;;;;AAIA;AAEY;AAAsB;AAExB;;;;;;;;;;AAJV;;;AAKS;;;AALT;;AAQuB;;;AAAA;AAAlB;;;AAeL;AAKU;;;;AAFI;;;;;;;;;;;;;;;;AAHd;;;;AAIS;;;AAJT;;AAUqD;;AAArC;;AAAA;;AAAA;AA7JoC;;AAAA;;AAAA;AA8JmC;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAoD;AAA/F;;AAAA;AAAiC;AAAjC;AAAA;;AACkB;AAAjB;;AAAA;AAAP;AACuB;;AAAA;AAA2B;;;;AAClD;;;;;;;;;AAIA;AAGiB;AAAsB;AAE7B;;;;;;;;;;;;;;AALV;;;;AAMS;;;AANT;;AAsBR;;;;;;AAEQ;;AAAqC;;AAE3B;;AAAA;AAAU;;AAAnB;AAAP;AAE+B;;AAAA;;AAAzB;AAAkC;;AAApB;AACI;AACI;AAnM8B;;AAoM5B;AAAA;;AAA9B;;;AApM0D;;AAqMhB;AAAA;AAAA;;AAAA;AAG0B;;AAAA;AAAA;AAAA;;AAArB;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAxMwB;;AAwM1D;AAAA;AAEkB;;AAAA;;AAAoB;;AAA/B;AAAP;AAZgB;AAcJ;;AAAA;AA9MqD;;AAAA;AAAA;AAAA;AAAA;;AAkN7C;AAAA;;AAApB;;;AACyB;;AAAA;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAe;AAArC;AAAP;AACuB;AAAA;AAAA;AAAM;;;AArBf;AAqBP;AAAP;AAGmC;AAAA;AAAA;AAAM;;;AACI;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;;AAAA;AAAA;AACgB;AAAA;AAAA;AAAhB;;AAAA;;AAAA;AAwBqB;;AAAA;AAAA;AAAvB;;AAAA;AApBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMyB;;AAAnB;AACoB;;AAAnB;AARD;;AA7BH;AA6BG;AAIA;;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUC;AAVD;AAWF;AAXE;AAYA;AAZA;AAcC;AAdD;AAaG;AAbH;AAAA;;AAAA;AAAA;;AAAA;AAmBjB;;AAAA;AAAA;;;;AAUJ;;;AAGe;;AAAA;;AAAoB;;AAA/B;AADF;AAIkB;;AAAA;;AAAW;;;;;AAAtB;AAAP;AAEY;;AAAkD;;AAAA;AAAA;AAAA;;AAAzD;;AAAA;;AAAD;;;AACF;AAI0B;;;;AADT;;;;;;;AAHjB;;;;AAKS;;;AALT;;AAiBJ;;;;;;AAEQ;;AAAqC;;AAC3B;;AAAA;AAAU;;AAAnB;AAAP;AACuC;;AAAA;;AAAvB;AAAA;AAEe;;AAAA;;AAAzB;AAAuC;;AAAzB;AACI;AAAlB;AACsB;AAAxB;AA1RsD;;AAAA;AAAA;AAAA;AA2R5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAG0B;;AAAA;AAAA;AAAA;;AAArB;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAEkB;;AAAA;;AAAyB;;AAApC;AAAP;AAEY;;AAAA;;AAAA;AArSqD;;AAAA;AAAA;AAAA;AAAA;;AAyS7C;AAAA;;AAApB;;;AACyB;;AAAA;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAe;;AAArC;AAAP;AACuB;AAAA;AAAA;AAAM;;;AAAtB;;AAAA;AAAP;AAGmC;AAAA;AAAA;AAAM;;;AACI;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;;AAAA;AAAA;AACgB;AAAA;AAAA;AAAhB;;AAAA;;AAAA;AAwBqB;;AAAA;AAAA;AAAvB;;AAAA;AApBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMyB;;AAAnB;AACoB;;AAAnB;AARD;;AAAA;;AAAA;AAIA;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUC;AAVD;AAWF;AAXE;AAYA;AAZA;AAcC;AAdD;AAaG;AAbH;AAAA;;AAAA;AAAA;;AAAA;AAmBjB;;AAAA;AAAA;;;;AAWJ;;;;;AAEsC;;AACpB;;AAAA;AAAU;;AAAnB;AAAP;AAEM;;AAAuC;;;AAAxB;AACf;;AAAA;AAAmB;AACG;AAxV8B;;AAAA;;AAAA;AAAA;AAyV5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAGK;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAGA;AAEmB;;AAAA;AAGG;;AACG;;AAFnB;;;;;;;;;;;;;;;AAJN;;;;AAAA;;;AAAA;AAYY;;AAAA;;AAAA;AA9WqD;;AAAA;AAAA;AAAA;AAAA;;AAkX7C;AAAA;;AAApB;;;AACyB;;AAAA;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;;AAAxC;AAAP;AACuB;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAe;AAArC;AAAP;AACuB;AAAA;AAAA;AAAM;;;AAAtB;;AAAA;AAAP;AAGmC;AAAA;AAAA;AAAM;;;AACI;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;;AAAA;AAAA;AACgB;AAAA;AAAA;AAAhB;;AAAA;;AAAA;AAwBqB;;AAAA;AAAA;AAAvB;;AAAA;AApBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMyB;;AAAnB;AACoB;;AAAnB;AARD;;AAAA;;AAAA;AAIA;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUC;AAVD;AAWF;AAXE;AAYA;AAZA;AAcC;AAdD;AAaG;AAbH;AAAA;;AAAA;AAAA;;AAAA;AAmBjB;;AAAA;AAAA;;;;AAaJ;;;;;;AAMQ;;AAAqC;;AAArC;AAEK;;AAAJ;;AAAA;AAAP;AACY;;AAAA;;;AAAA;AAAA;;AAFI;AAET;AAAP;AAvaiE;;AAAA;;AAAA;AAAA;AAAA;;AAwazC;AAAA;AAAA;;AAAxB;AACwB;AAAA;AAAM;;;AAJd;AAIT;AAAP;AACsB;;AAAA;AAAA;AAAA;;AAAU;;AAAzB;AAAP;AAzasD;;AAAA;AAAA;AAAA;AA2a/B;AAAA;;AAAvB;;;AAE4B;;AAAA;AAAA;AAAM;AAAM;AAAS;AAAxC;AAAP;AAKyD;;AAAnB;AAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAjB;AAAA;;AAAA;;AAAA;AAAA;AAK+C;;AAAA;;AAAA;AAAA;;AAAS;;AAApB;AAAD;;AAAA;AAAR;AACuB;AAAA;AAAA;AAAM;;;AAAyB;;AAAhD;AAE/B;AADF;AAK4B;AAAxB;;AA7bsD;;AA8b5B;AAAA;;AAA9B;;;AA9b0D;;AA+bhB;AAAA;AAAA;;AAAA;AAE0B;;AAAA;AAArB;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAjcwB;;AAic1D;AAAA;AAG4B;;AAAnB;AAGE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAES;;AAAA;;;AAJX;;AAFQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAUjB;;AAAA;;AAAA;AACA;;AAAA;AAYF;;;;;;;AAMQ;;AAAqC;;AAArC;AACiC;;AAAA;;AAAvB;AAAA;AAAA;;AACL;;AAAJ;;AAAA;AAAP;AACY;;AAAA;;;AAAA;;AAAQ;;AAAR;AAAQ;AAAmB;;AAAA;AAAhC;AAAP;AAreiE;;AAAA;;AAAA;AAAA;AAAA;;AAsezC;AAAA;AAAA;;AAAxB;AACwB;AAAA;AAAM;;;AAAvB;;AAAA;AAAP;AACsB;;AAAA;AAAA;AAAA;;AAAU;;AAAzB;AAAP;AAvesD;;AAAA;AAAA;AAAA;AAye/B;AAAA;;AAAvB;;;AAE4B;;AAAA;AAAA;AAAM;AAAM;AAAS;AAAxC;AAAP;AAKyD;;AAAnB;AAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAjB;AAAA;;AAAA;;AAAA;AAAA;AAK+C;;AAAA;;AAAA;AAAA;;AAAc;;AAAzB;AAAD;;AAAA;AAAR;AACuB;AAAA;AAAA;AAAM;;;AAAyB;;AAAhD;AAE/B;AADF;AAK4B;AAAxB;;AA3fsD;;AAAA;;AAAA;AAAA;AAAA;;AA4f5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAE0B;;AAAA;AAArB;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAG4B;;AAAnB;AAGE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAES;;AAAA;;;AAJX;;AAFQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAUjB;;AAAA;;AAAA;AACA;;AAAA;AAYF;;;;;AAOsC;;AAA9B;AACM;;AAAA;;;AAAA;AAAA;;AAAL;;AAAA;AAAP;AAliBiE;;AAAA;;AAAA;AAAA;AAAA;;AAmiBzC;AAAA;AAAA;;AAAxB;AACwB;AAAA;AAAM;;;AAAvB;;AAAA;AAAP;AACsB;;AAAA;AAAA;AAAA;;AAAU;;AAAzB;AAAP;AApiBsD;;AAAA;AAAA;AAAA;AAsiB/B;AAAA;;AAAvB;;;AAE4B;;AAAA;AAAA;AAAM;AAAM;AAAS;AAAxC;AAAP;AAMyD;;AAAnB;AAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAjB;AAAA;;AAAA;;AAAA;AAAA;AAKA;AAEwB;;AAAR;AAAQ;AAGF;;AACG;;AAFnB;;;;;;;;;;;;;;;AAJN;;;;AAAA;;;AAAA;AAY4B;;AAAwB;;AAAxB;AAAsC;;AAAA;AAAvC;AACuB;AAAA;AAAA;AAAM;;;AAAyB;;AAAhD;AAE/B;AADF;AAK4B;AAAxB;;AArkBsD;;AAAA;;AAAA;AAAA;AAAA;;AAskB5B;AAAA;;AAA9B;;;AAC0C;;AAAA;AAAA;AAAA;;AAAA;AAEK;;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlC;;AAAA;AAAA;AAG4B;;AAAnB;AAGE;;AAAA;;AAAA;AAES;;AAAA;;;AAJX;;AAFQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAUjB;;AAAA;;AAAA;AACA;;AAAA;AAQF;;;AAEc;;AAAA;;AAAA;AAlmBqD;;AAAA;AAAA;AAsmB1C;AAAA;AAAA;;AAAvB;AACuB;AAAA;AAAvB;AAtmBsD;;AA+mBlB;;AA/mBkB;AAgnB5B;AAAA;AAAA;;AAA1B;AAC0B;AAAA;AAA1B;AAUF;;;;;;;;;AAEsC;;AA7nBkB;;AA6nBhD;;AA7nBgD;AAAA;;AA8nB5B;AAAA;;AAA1B;AACgC;AAAA;AAAA;AAAA;;AAAA;AAGhB;AAAA;;;AACF;;AAAA;;;AAFF;AAAA;AAAA;;AAloBqD;;AAAA;AAAA;AAAA;AAAA;;AAsoB1C;AAAA;AAAA;;AAAvB;AAC6B;AAAA;AAAA;;AAAA;AAIpB;;AAAM;AAAA;AAAgB;;AAAQ;;AAAf;AAApB;AAAJ;;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAC0B;;AAAA;AAAA;AAA1B;;AAAA;AAMoC;;AAAoB;;AAApB;AAAjB;;AAEmB;;AAAf;AAGyB;;AAAf;AAAe;AAAA;AAAA;;AAAuB;;AAAT;;;AAAS;AAA3C;AAAqD;;AAAtD;AACf;AAAV;AAAJ;;;AAIU;;AAAA;;;AAAyB;;AAA9B;AAA4C;;AAAA;AAA7C;AADI;AAAA;;AAIgC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAtB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;;AAAA;AAAA;AACuD;;AAAnB;AAApB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AACqB;;AAAA;;;AAAjB;AAAJ;;;AACkB;;AAAA;AAAA;AAAA;AAAhB;;AAAA;;AAAA;;AAAA;AAAA;AAC0D;;AAAnB;AAAvB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAGO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AAG8B;AAAxB;;AACqB;;AAAA;;;AAzqB6B;;AAAA;AAAA;AAAA;AAAA;;AAyqBpB;AAAA;;AAAlC;;;AAC8C;;AAAA;AAAA;AAAA;;AAAA;AAEvC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AACmD;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAtC;;AAAA;AAAA;AAEY;;AAAA;;;AAAL;AAAA;;AAAA;AAAP;AAC6C;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAEmB;;AAAA;AAAA;AAAA;AAAc;;AAAjC;;AAAA;AAEA;AAEmB;;AACA;;AAAA;;;AACP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAuB;;;;;;;AAJnC;;;AAKS;;;AALT;AAUO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAW;AAApB;;;AAG8B;AAAxB;;AACqB;;AAAA;;;AAlsB6B;;AAAA;AAAA;AAAA;AAAA;;AAksBpB;AAAA;;AAAlC;;;AAC8C;;AAAA;AAAA;AAAA;;AAAA;AAEvC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AACmD;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAtC;;AAAA;AAAA;AAEY;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAAA;AAAP;AAC6C;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAEmB;;AAAA;AAAA;AAAA;AAAc;;AAAjC;;AAAA;AAEA;AAEmB;;AACK;;AAAA;;;AACP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAuB;AACZ;;AAAR;AAAQ;;;;;;;;;AAL5B;;;;AAMS;;;AANT;AAUO;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAc;AAAvB;;;AAC8B;AAAxB;;AACqB;;AAAA;;;AAztB6B;;AAAA;AAAA;AAAA;AAAA;;AAytBpB;AAAA;;AAAlC;;;AAC8C;;AAAA;AAAA;AAAA;;AAAA;AAEvC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AACmD;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAtC;;AAAA;AAAA;AAEY;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAAA;AAAP;AAC6C;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAEmB;;AAAA;AAAA;AAAA;AAAc;;AAAjC;;AAAA;AAGA;AAEgB;AAAQ;AACmD;;AAAA;;;AAA7D;;;;;;;;;;;;AAHd;;;;AAIS;;;AAJT;AAYsB;;AAAA;AAAA;AAA1B;;AAAA;AAFE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;;AAKJ;;;AAtvBmE;;AAAA;;AAAA;AA2vBL;AAAA;AAAA;AAAM;;;AAAS;AAA3C;;AAA1B;AAA0B;AACW;;AAAlB;AACE;;AAAA;;;AAAiB;AAAA;AAAtB;;AAAA;AAAmD;;AAApD;AAEmD;;AAAA;;;AA7vBd;;AAAA;AAAA;AA6vBuB;AAAA;AAAA;AAA9B;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAtC;;AAAA;AAAA;AACkD;;AAAA;;;AAAL;;AAAA;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;;AAAA;AAAA;AAAhB;AAAA;;AAAA;AA/vBsD;;AAAA;;AAAA;AAgwBnC;AAAA;AAAA;AAAc;;;;;;;;;;AAAjC;;AAAA;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 32 1 8 1000000 321 322 320"
    },
    "16": {
      "op": "bytecblock 0x00 0x0000000000000000000000000000000000000000000000000000000000000000 0x0000000000000000 0x151f7c75 \"d\" \"g\" 0x640000000000000000 \"p\" 0x80 0x0f4240 \"user withdrawal\" 0xda7025b9 \"admin withdrawal\" 0x02 0x0000000000000001 0x0000000000000002 0x4a968f8f"
    },
    "152": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "154": {
      "op": "bz main_bare_routing@18",
      "stack_out": []
    },
    "157": {
      "op": "pushbytess 0x70a65e89 0xc61d56f5 0x54cc696f 0x837a076a 0xe36e57bf 0xf7a36005 0x7d7fb8cf 0x259220b5 0xb73539ed 0x9c983955 0x457e7d1c 0x2a236e18 0x0bc571d2 // method \"updateApplication(string)bool\", method \"sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[]\", method \"withdraw(address,uint256,uint64,bool)void\", method \"CreateGameWithNativeToken(pay,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address)\", method \"OptInToASA(pay,uint64)void\", method \"CreateGameWithASAToken(axfer,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address)\", method \"CreateGameWithArc200Token(uint64,uint256,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address)\", method \"StartGameWithNativeToken(pay,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address)\", method \"StartGameWithASAToken(axfer,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address)\", method \"StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address)\", method \"Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address)\", method \"MyGame()(uint64,uint64,uint64,uint256,uint64,address,address)\", method \"ClaimGame()(uint64,uint64,uint64,uint256,uint64,address,address)\"",
      "defined_out": [
        "Method(ClaimGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(CreateGameWithASAToken(axfer,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(CreateGameWithNativeToken(pay,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(updateApplication(string)bool)",
        "Method(withdraw(address,uint256,uint64,bool)void)"
      ],
      "stack_out": [
        "Method(updateApplication(string)bool)",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(withdraw(address,uint256,uint64,bool)void)",
        "Method(CreateGameWithNativeToken(pay,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(CreateGameWithASAToken(axfer,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(ClaimGame()(uint64,uint64,uint64,uint256,uint64,address,address))"
      ]
    },
    "224": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(ClaimGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(CreateGameWithASAToken(axfer,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(CreateGameWithNativeToken(pay,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(updateApplication(string)bool)",
        "Method(withdraw(address,uint256,uint64,bool)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(updateApplication(string)bool)",
        "Method(sendOnlineKeyRegistration(byte[],byte[],byte[],uint64,uint64,uint64,uint64)byte[])",
        "Method(withdraw(address,uint256,uint64,bool)void)",
        "Method(CreateGameWithNativeToken(pay,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(OptInToASA(pay,uint64)void)",
        "Method(CreateGameWithASAToken(axfer,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(CreateGameWithArc200Token(uint64,uint256,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(StartGameWithNativeToken(pay,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithASAToken(axfer,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(StartGameWithArc200Token(uint256,uint64,(uint64,address),uint64)(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(Game(address,uint64)(uint256,uint64,bool,bool,bool,uint64,uint64,uint64,uint64,uint256,uint64,uint256,uint64,address))",
        "Method(MyGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "Method(ClaimGame()(uint64,uint64,uint64,uint256,uint64,address,address))",
        "tmp%2#0"
      ]
    },
    "227": {
      "op": "match main_updateApplication_route@3 main_sendOnlineKeyRegistration_route@4 main_withdraw_route@5 main_CreateGameWithNativeToken_route@6 main_OptInToASA_route@7 main_CreateGameWithASAToken_route@8 main_CreateGameWithArc200Token_route@9 main_StartGameWithNativeToken_route@10 main_StartGameWithASAToken_route@11 main_StartGameWithArc200Token_route@12 main_Game_route@13 main_MyGame_route@14 main_ClaimGame_route@15",
      "stack_out": []
    },
    "255": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "256": {
      "op": "return",
      "stack_out": []
    },
    "257": {
      "block": "main_ClaimGame_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "259": {
      "op": "!",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "260": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "261": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "263": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "264": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.ClaimGame",
      "op": "callsub ClaimGame",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "267": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0",
        "0x151f7c75"
      ]
    },
    "268": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%90#0"
      ]
    },
    "269": {
      "op": "concat",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "270": {
      "op": "log",
      "stack_out": []
    },
    "271": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "272": {
      "op": "return",
      "stack_out": []
    },
    "273": {
      "block": "main_MyGame_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "275": {
      "op": "!",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "276": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "277": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "279": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "280": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.MyGame",
      "op": "callsub MyGame",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "283": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0",
        "0x151f7c75"
      ]
    },
    "284": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%84#0"
      ]
    },
    "285": {
      "op": "concat",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "286": {
      "op": "log",
      "stack_out": []
    },
    "287": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "288": {
      "op": "return",
      "stack_out": []
    },
    "289": {
      "block": "main_Game_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "291": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "292": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "293": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "295": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "296": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "299": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "302": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.Game",
      "op": "callsub Game",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "305": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "0x151f7c75"
      ]
    },
    "306": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%78#0"
      ]
    },
    "307": {
      "op": "concat",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "308": {
      "op": "log",
      "stack_out": []
    },
    "309": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "310": {
      "op": "return",
      "stack_out": []
    },
    "311": {
      "block": "main_StartGameWithArc200Token_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "313": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "314": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "315": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "317": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "318": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "321": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "324": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[40]%2#0",
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[40]%2#0"
      ]
    },
    "327": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[40]%2#0",
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[40]%2#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "330": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithArc200Token",
      "op": "callsub StartGameWithArc200Token",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "333": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0",
        "0x151f7c75"
      ]
    },
    "334": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%72#0"
      ]
    },
    "335": {
      "op": "concat",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "336": {
      "op": "log",
      "stack_out": []
    },
    "337": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "338": {
      "op": "return",
      "stack_out": []
    },
    "339": {
      "block": "main_StartGameWithASAToken_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "341": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "342": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "343": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "345": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "346": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "348": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "1"
      ]
    },
    "349": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "350": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "351": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "353": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "axfer"
      ]
    },
    "355": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "356": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "357": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0"
      ]
    },
    "360": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0",
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[40]%1#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "363": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithASAToken",
      "op": "callsub StartGameWithASAToken",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "366": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "0x151f7c75"
      ]
    },
    "367": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%66#0"
      ]
    },
    "368": {
      "op": "concat",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "369": {
      "op": "log",
      "stack_out": []
    },
    "370": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "371": {
      "op": "return",
      "stack_out": []
    },
    "372": {
      "block": "main_StartGameWithNativeToken_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "374": {
      "op": "!",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "375": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "376": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "378": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "379": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "381": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "1"
      ]
    },
    "382": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "383": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "384": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "386": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "387": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "388": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "389": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0"
      ]
    },
    "392": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0",
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[40]%0#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "395": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithNativeToken",
      "op": "callsub StartGameWithNativeToken",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "398": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0",
        "0x151f7c75"
      ]
    },
    "399": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%59#0"
      ]
    },
    "400": {
      "op": "concat",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "401": {
      "op": "log",
      "stack_out": []
    },
    "402": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "403": {
      "op": "return",
      "stack_out": []
    },
    "404": {
      "block": "main_CreateGameWithArc200Token_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "406": {
      "op": "!",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "407": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "408": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "410": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "411": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "414": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "417": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "420": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithArc200Token",
      "op": "callsub CreateGameWithArc200Token",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "423": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "0x151f7c75"
      ]
    },
    "424": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%52#0"
      ]
    },
    "425": {
      "op": "concat",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "426": {
      "op": "log",
      "stack_out": []
    },
    "427": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "428": {
      "op": "return",
      "stack_out": []
    },
    "429": {
      "block": "main_CreateGameWithASAToken_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "431": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "432": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "433": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "435": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "436": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "438": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "1"
      ]
    },
    "439": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "440": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "441": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "443": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "445": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "446": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "447": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "450": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithASAToken",
      "op": "callsub CreateGameWithASAToken",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "453": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "0x151f7c75"
      ]
    },
    "454": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%46#0"
      ]
    },
    "455": {
      "op": "concat",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "456": {
      "op": "log",
      "stack_out": []
    },
    "457": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "458": {
      "op": "return",
      "stack_out": []
    },
    "459": {
      "block": "main_OptInToASA_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "461": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "462": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "463": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "465": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "466": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "468": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "1"
      ]
    },
    "469": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "470": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "471": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "473": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "474": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "475": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "476": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "479": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.OptInToASA",
      "op": "callsub OptInToASA",
      "stack_out": []
    },
    "482": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "483": {
      "op": "return",
      "stack_out": []
    },
    "484": {
      "block": "main_CreateGameWithNativeToken_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "486": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "487": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "488": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "490": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "491": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "493": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "1"
      ]
    },
    "494": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "495": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "496": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "498": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "499": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "500": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "501": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "504": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithNativeToken",
      "op": "callsub CreateGameWithNativeToken",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "507": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "0x151f7c75"
      ]
    },
    "508": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%34#0"
      ]
    },
    "509": {
      "op": "concat",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "510": {
      "op": "log",
      "stack_out": []
    },
    "511": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "512": {
      "op": "return",
      "stack_out": []
    },
    "513": {
      "block": "main_withdraw_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "515": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "516": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "517": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "519": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "520": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "523": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "526": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "529": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "532": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.withdraw",
      "op": "callsub withdraw",
      "stack_out": []
    },
    "535": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "536": {
      "op": "return",
      "stack_out": []
    },
    "537": {
      "block": "main_sendOnlineKeyRegistration_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "539": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "540": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "541": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "543": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "544": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "547": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "550": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "553": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "556": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "559": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "562": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "565": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "566": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "569": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "570": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "573": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "574": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[8]%3#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "577": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "578": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.sendOnlineKeyRegistration",
      "op": "callsub sendOnlineKeyRegistration",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "581": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "582": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%0#0"
      ]
    },
    "583": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%0#0"
      ]
    },
    "584": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%0#0"
      ]
    },
    "587": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%1#0"
      ]
    },
    "588": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "589": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "590": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "591": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "592": {
      "op": "log",
      "stack_out": []
    },
    "593": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "594": {
      "op": "return",
      "stack_out": []
    },
    "595": {
      "block": "main_updateApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "597": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "UpdateApplication"
      ]
    },
    "599": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "600": {
      "error": "OnCompletion is not UpdateApplication",
      "op": "assert // OnCompletion is not UpdateApplication",
      "stack_out": []
    },
    "601": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "603": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "604": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "607": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "610": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.updateApplication",
      "op": "callsub updateApplication",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "613": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "614": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "615": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "617": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "618": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "619": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "620": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "621": {
      "op": "log",
      "stack_out": []
    },
    "622": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "623": {
      "op": "return",
      "stack_out": []
    },
    "624": {
      "block": "main_bare_routing@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "626": {
      "op": "bnz main_after_if_else@22",
      "stack_out": []
    },
    "629": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "631": {
      "op": "!",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "632": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "633": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "634": {
      "op": "return",
      "stack_out": []
    },
    "635": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.updateApplication",
      "params": {
        "newVersion#0": "bytes"
      },
      "block": "updateApplication",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "638": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "640": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "642": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "643": {
      "error": "Only creator can update application",
      "op": "assert // Only creator can update application",
      "stack_out": []
    },
    "644": {
      "op": "pushbytes \"scver\"",
      "defined_out": [
        "\"scver\""
      ],
      "stack_out": [
        "\"scver\""
      ]
    },
    "651": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"scver\"",
        "newVersion#0 (copy)"
      ],
      "stack_out": [
        "\"scver\"",
        "newVersion#0 (copy)"
      ]
    },
    "653": {
      "op": "app_global_put",
      "stack_out": []
    },
    "654": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "655": {
      "retsub": true,
      "op": "retsub"
    },
    "656": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.sendOnlineKeyRegistration",
      "params": {
        "voteKey#0": "bytes",
        "selectionKey#0": "bytes",
        "stateProofKey#0": "bytes",
        "voteFirst#0": "uint64",
        "voteLast#0": "uint64",
        "voteKeyDilution#0": "uint64",
        "fee#0": "uint64"
      },
      "block": "sendOnlineKeyRegistration",
      "stack_in": [],
      "op": "proto 7 1"
    },
    "659": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "661": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "663": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "664": {
      "error": "Only creator can use this method",
      "op": "assert // Only creator can use this method",
      "stack_out": []
    },
    "665": {
      "op": "itxn_begin"
    },
    "666": {
      "op": "frame_dig -7",
      "defined_out": [
        "voteKey#0 (copy)"
      ],
      "stack_out": [
        "voteKey#0 (copy)"
      ]
    },
    "668": {
      "op": "itxn_field VotePK",
      "stack_out": []
    },
    "670": {
      "op": "frame_dig -3",
      "defined_out": [
        "voteLast#0 (copy)"
      ],
      "stack_out": [
        "voteLast#0 (copy)"
      ]
    },
    "672": {
      "op": "itxn_field VoteLast",
      "stack_out": []
    },
    "674": {
      "op": "frame_dig -2",
      "defined_out": [
        "voteKeyDilution#0 (copy)"
      ],
      "stack_out": [
        "voteKeyDilution#0 (copy)"
      ]
    },
    "676": {
      "op": "itxn_field VoteKeyDilution",
      "stack_out": []
    },
    "678": {
      "op": "frame_dig -4",
      "defined_out": [
        "voteFirst#0 (copy)"
      ],
      "stack_out": [
        "voteFirst#0 (copy)"
      ]
    },
    "680": {
      "op": "itxn_field VoteFirst",
      "stack_out": []
    },
    "682": {
      "op": "frame_dig -5",
      "defined_out": [
        "stateProofKey#0 (copy)"
      ],
      "stack_out": [
        "stateProofKey#0 (copy)"
      ]
    },
    "684": {
      "op": "itxn_field StateProofPK",
      "stack_out": []
    },
    "686": {
      "op": "frame_dig -6",
      "defined_out": [
        "selectionKey#0 (copy)"
      ],
      "stack_out": [
        "selectionKey#0 (copy)"
      ]
    },
    "688": {
      "op": "itxn_field SelectionPK",
      "stack_out": []
    },
    "690": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "692": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "694": {
      "op": "frame_dig -1",
      "defined_out": [
        "fee#0 (copy)"
      ],
      "stack_out": [
        "fee#0 (copy)"
      ]
    },
    "696": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "698": {
      "op": "itxn_submit"
    },
    "699": {
      "op": "itxn TxID",
      "defined_out": [
        "itxnResult.TxID#0"
      ],
      "stack_out": [
        "itxnResult.TxID#0"
      ]
    },
    "701": {
      "retsub": true,
      "op": "retsub"
    },
    "702": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.withdraw",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "bytes",
        "assetId#0": "bytes",
        "isArc200Token#0": "bytes"
      },
      "block": "withdraw",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "705": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "706": {
      "op": "dupn 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ]
    },
    "708": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "710": {
      "op": "dupn 4",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4"
      ]
    },
    "712": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "assetId#0 (copy)"
      ]
    },
    "714": {
      "op": "txn Sender",
      "defined_out": [
        "assetId#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "assetId#0 (copy)",
        "tmp%0#0"
      ]
    },
    "716": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "key#0"
      ]
    },
    "717": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "key#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "key#0",
        "\"g\""
      ]
    },
    "719": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "\"g\"",
        "key#0"
      ]
    },
    "720": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "721": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "722": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "723": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_exists%0#0"
      ]
    },
    "725": {
      "op": "bz withdraw_else_body@13",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "728": {
      "op": "frame_dig 9",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "730": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "maybe_exists%1#0"
      ]
    },
    "731": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_exists%1#0",
        "game#0"
      ]
    },
    "732": {
      "op": "frame_bury 1",
      "defined_out": [
        "game#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "maybe_exists%1#0"
      ]
    },
    "734": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "735": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "game#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "amount#0 (copy)"
      ]
    },
    "737": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "amount#0 (copy)",
        "game#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "amount#0 (copy)",
        "0x"
      ]
    },
    "739": {
      "op": "b==",
      "defined_out": [
        "game#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "740": {
      "op": "frame_dig -3",
      "defined_out": [
        "game#0",
        "tmp%1#0",
        "tmp%3#0",
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%3#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "742": {
      "op": "frame_bury 2",
      "defined_out": [
        "game#0",
        "tmp%1#0",
        "tmp%3#0",
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "744": {
      "op": "bz withdraw_after_if_else@3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "747": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "749": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "752": {
      "op": "frame_bury 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "754": {
      "block": "withdraw_after_if_else@3",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "756": {
      "op": "dup",
      "defined_out": [
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)"
      ]
    },
    "757": {
      "op": "pushbytes 0x28",
      "defined_out": [
        "0x28",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)",
        "0x28"
      ]
    },
    "760": {
      "op": "b/",
      "defined_out": [
        "fee#0",
        "toWithdrawIncludingFee#1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "fee#0"
      ]
    },
    "761": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "fee#0",
        "toWithdrawIncludingFee#1 (copy)"
      ]
    },
    "763": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawIncludingFee#1 (copy)",
        "fee#0"
      ]
    },
    "764": {
      "op": "b-",
      "defined_out": [
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ]
    },
    "765": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "766": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ]
    },
    "768": {
      "op": "frame_bury 3",
      "defined_out": [
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "770": {
      "op": "frame_dig 1",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "game#0"
      ]
    },
    "772": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "game#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "game#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "773": {
      "op": "cover 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "game#0 (copy)"
      ]
    },
    "775": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "tmp%5#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0"
      ]
    },
    "778": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "779": {
      "op": "dig 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "toWithdrawIncludingFee#1 (copy)"
      ]
    },
    "781": {
      "op": "b>=",
      "defined_out": [
        "game#0",
        "tmp%5#0",
        "tmp%6#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "782": {
      "error": "Game creator can withdraw from the game only the game deposit",
      "op": "assert // Game creator can withdraw from the game only the game deposit",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "toWithdrawIncludingFee#1",
        "tmp%5#0"
      ]
    },
    "783": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "tmp%5#0",
        "toWithdrawIncludingFee#1"
      ]
    },
    "784": {
      "op": "b-",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ]
    },
    "785": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "786": {
      "op": "len",
      "defined_out": [
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "787": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "788": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "len_ok%0#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "789": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ]
    },
    "790": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "32"
      ]
    },
    "791": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "792": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "793": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "795": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "to_encode%0#0"
      ]
    },
    "796": {
      "op": "dig 1",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "to_encode%0#0",
        "bzero%0#0 (copy)"
      ]
    },
    "798": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "799": {
      "op": "frame_dig 9",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "tmp%1#0"
      ]
    },
    "801": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "tmp%1#0 (copy)",
        "tmp%1#0 (copy)"
      ]
    },
    "802": {
      "op": "cover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "arc4_encoded%0#0",
        "tmp%1#0 (copy)"
      ]
    },
    "804": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "arc4_encoded%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "805": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "arc4_encoded%0#0",
        "maybe_value%2#0"
      ]
    },
    "806": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "maybe_value%2#0",
        "arc4_encoded%0#0"
      ]
    },
    "807": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%1#0",
        "updated_data%0#0"
      ]
    },
    "809": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0"
      ]
    },
    "810": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "\"d\""
      ]
    },
    "812": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "814": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0"
      ]
    },
    "815": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "tmp%9#0 (copy)",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "816": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "817": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "toWithdrawNet#0",
        "bzero%0#0",
        "tmp%9#0",
        "maybe_value%3#0"
      ]
    },
    "818": {
      "op": "uncover 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "maybe_value%3#0",
        "toWithdrawNet#0"
      ]
    },
    "820": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0"
      ]
    },
    "821": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "822": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "823": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "824": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%1#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "825": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "bzero%0#0",
        "tmp%9#0",
        "to_encode%1#0"
      ]
    },
    "826": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "tmp%9#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "828": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%9#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "tmp%9#0",
        "arc4_encoded%1#0"
      ]
    },
    "829": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "830": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "320"
      ]
    },
    "832": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "is_true%0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%0#0"
      ]
    },
    "833": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "game#0",
        "is_true%0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "834": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "835": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "837": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "encoded_bool%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%0#0"
      ]
    },
    "838": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "839": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "tmp%11#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%11#0"
      ]
    },
    "840": {
      "op": "bz withdraw_after_if_else@6",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "843": {
      "op": "itxn_begin"
    },
    "844": {
      "op": "frame_dig 3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0"
      ]
    },
    "846": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "847": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "value_len%2#0"
      ]
    },
    "848": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "value_len%2#0",
        "8"
      ]
    },
    "849": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%2#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "len_ok%2#0"
      ]
    },
    "850": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0"
      ]
    },
    "851": {
      "op": "intc_3 // 8",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "8"
      ]
    },
    "852": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "bzero%2#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWithdrawNet#0",
        "bzero%2#0"
      ]
    },
    "853": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "arc4_encoded%2#0"
      ]
    },
    "854": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "855": {
      "op": "bytec 10 // \"user withdrawal\"",
      "defined_out": [
        "\"user withdrawal\"",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "\"user withdrawal\""
      ]
    },
    "857": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "859": {
      "op": "frame_dig -4",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "receiver#0 (copy)",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "861": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "863": {
      "op": "itxn_field Amount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "865": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "bzero%0#0",
        "game#0",
        "tmp%1#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "1"
      ]
    },
    "866": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "868": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "869": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "871": {
      "op": "itxn_submit"
    },
    "872": {
      "block": "withdraw_after_if_else@6",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "874": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "321"
      ]
    },
    "876": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%1#0"
      ]
    },
    "877": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "878": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "879": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "881": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%1#0"
      ]
    },
    "882": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "883": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%12#0"
      ]
    },
    "884": {
      "op": "bz withdraw_after_if_else@9",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "887": {
      "op": "itxn_begin"
    },
    "888": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "890": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "32"
      ]
    },
    "891": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "892": {
      "op": "frame_dig 3",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "894": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "895": {
      "op": "len",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0"
      ]
    },
    "896": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "value_len%3#0",
        "8"
      ]
    },
    "897": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "len_ok%3#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "len_ok%3#0"
      ]
    },
    "898": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "899": {
      "op": "intc_3 // 8",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "8"
      ]
    },
    "900": {
      "op": "bzero",
      "defined_out": [
        "bzero%3#0",
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0",
        "bzero%3#0"
      ]
    },
    "901": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%3#0",
        "game#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "arc4_encoded%3#0"
      ]
    },
    "902": {
      "op": "btoi",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "903": {
      "op": "bytec 10 // \"user withdrawal\"",
      "defined_out": [
        "\"user withdrawal\"",
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "\"user withdrawal\""
      ]
    },
    "905": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "907": {
      "op": "frame_dig -4",
      "defined_out": [
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "receiver#0 (copy)",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "909": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "911": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "913": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "915": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "game#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "4"
      ]
    },
    "917": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "919": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "920": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "922": {
      "op": "itxn_submit"
    },
    "923": {
      "block": "withdraw_after_if_else@9",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "925": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "322"
      ]
    },
    "927": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%2#0"
      ]
    },
    "928": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "929": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "930": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "932": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%2#0"
      ]
    },
    "933": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "934": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%14#0"
      ]
    },
    "935": {
      "op": "bz withdraw_after_if_else@30",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "938": {
      "op": "itxn_begin"
    },
    "939": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0"
      ]
    },
    "941": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "game#0",
        "32"
      ]
    },
    "942": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "943": {
      "op": "frame_dig 3",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "945": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "toWithdrawNet#0 (copy)"
      ]
    },
    "946": {
      "op": "len",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "value_len%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "value_len%4#0"
      ]
    },
    "947": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "value_len%4#0",
        "32"
      ]
    },
    "948": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "len_ok%4#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "len_ok%4#0"
      ]
    },
    "949": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ]
    },
    "950": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0",
        "bzero%0#0"
      ]
    },
    "952": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "953": {
      "op": "bytec 10 // \"user withdrawal\"",
      "defined_out": [
        "\"user withdrawal\"",
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0",
        "\"user withdrawal\""
      ]
    },
    "955": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "957": {
      "op": "bytec 11 // method \"arc200_transfer(address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transfer(address,uint256)bool)",
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0",
        "Method(arc200_transfer(address,uint256)bool)"
      ]
    },
    "959": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "961": {
      "op": "frame_dig -4",
      "defined_out": [
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "receiver#0 (copy)",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0",
        "receiver#0 (copy)"
      ]
    },
    "963": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%4#0"
      ]
    },
    "965": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "967": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "969": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "bzero%0#0",
        "game#0",
        "toWithdrawNet#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "6"
      ]
    },
    "971": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "973": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "974": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "976": {
      "op": "itxn_submit"
    },
    "977": {
      "block": "withdraw_after_if_else@30",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "978": {
      "block": "withdraw_else_body@13",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%16#0"
      ]
    },
    "980": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "982": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%18#0"
      ]
    },
    "983": {
      "error": "The game for this asset does not exists",
      "op": "assert // The game for this asset does not exists",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "984": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "assetId#0 (copy)"
      ]
    },
    "986": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "987": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0",
        "tmp%19#0"
      ]
    },
    "988": {
      "op": "frame_bury 6",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "990": {
      "op": "bnz withdraw_else_body@19",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "993": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%21#0"
      ]
    },
    "995": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "tmp%19#0",
        "value%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "997": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0"
      ]
    },
    "998": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%19#0",
        "tmp%22#0",
        "value%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "tmp%22#0"
      ]
    },
    "1000": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "tmp%19#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "1002": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1003": {
      "op": "-",
      "defined_out": [
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0"
      ]
    },
    "1004": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "\"d\""
      ]
    },
    "1006": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "1008": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "1009": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1010": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0"
      ]
    },
    "1011": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "1012": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0"
      ]
    },
    "1013": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "8"
      ]
    },
    "1014": {
      "op": "bzero",
      "defined_out": [
        "bzero%5#0",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "bzero%5#0"
      ]
    },
    "1015": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "maybe_value%4#0"
      ]
    },
    "1016": {
      "op": "dig 1",
      "defined_out": [
        "bzero%5#0",
        "bzero%5#0 (copy)",
        "maybe_value%4#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "maybe_value%4#0",
        "bzero%5#0 (copy)"
      ]
    },
    "1018": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%5#0",
        "bzero%5#0",
        "tmp%19#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "arc4_encoded%5#0"
      ]
    },
    "1019": {
      "op": "btoi",
      "defined_out": [
        "bzero%5#0",
        "tmp%19#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%23#0",
        "bzero%5#0",
        "tmp%25#0"
      ]
    },
    "1020": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "tmp%25#0",
        "tmp%23#0"
      ]
    },
    "1022": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "1023": {
      "op": "-",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "1024": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "1025": {
      "op": "frame_bury 4",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "maxWithdrawableBalance#0"
      ]
    },
    "1027": {
      "op": "itob",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "reinterpret_biguint%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1028": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "reinterpret_biguint%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "reinterpret_biguint%0#0",
        "amount#0 (copy)"
      ]
    },
    "1030": {
      "op": "b>=",
      "defined_out": [
        "bzero%5#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "tmp%26#0"
      ]
    },
    "1031": {
      "error": "maxWithdrawableBalance is less then requested",
      "op": "assert // maxWithdrawableBalance is less then requested",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0"
      ]
    },
    "1032": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%5#0",
        "amount#0 (copy)"
      ]
    },
    "1034": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%6#0",
        "maxWithdrawableBalance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "arc4_encoded%6#0"
      ]
    },
    "1035": {
      "op": "btoi",
      "defined_out": [
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "toWidraw#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0"
      ]
    },
    "1036": {
      "op": "dup",
      "defined_out": [
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "toWidraw#0",
        "toWidraw#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0",
        "toWidraw#4"
      ]
    },
    "1037": {
      "op": "frame_bury 7",
      "defined_out": [
        "maxWithdrawableBalance#0",
        "tmp%19#0",
        "toWidraw#0",
        "toWidraw#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0"
      ]
    },
    "1039": {
      "op": "bnz withdraw_after_if_else@17",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1042": {
      "op": "frame_dig 4",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#4"
      ]
    },
    "1044": {
      "op": "frame_bury 7",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1046": {
      "block": "withdraw_after_if_else@17",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "toWidraw#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw#0"
      ]
    },
    "1048": {
      "op": "itxn_begin"
    },
    "1049": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "1050": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ]
    },
    "1051": {
      "op": "bytec 12 // \"admin withdrawal\"",
      "defined_out": [
        "\"admin withdrawal\"",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0",
        "\"admin withdrawal\""
      ]
    },
    "1053": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ]
    },
    "1055": {
      "op": "frame_dig -4",
      "defined_out": [
        "inner_txn_params%3%%param_Amount_idx_0#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "1057": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%3%%param_Amount_idx_0#0"
      ]
    },
    "1059": {
      "op": "itxn_field Amount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1061": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "1"
      ]
    },
    "1062": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1064": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "1065": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1067": {
      "op": "itxn_submit"
    },
    "1068": {
      "retsub": true,
      "op": "retsub"
    },
    "1069": {
      "block": "withdraw_else_body@19",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "isArc200Token#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "isArc200Token#0 (copy)"
      ]
    },
    "1071": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "isArc200Token#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "isArc200Token#0 (copy)",
        "0"
      ]
    },
    "1072": {
      "op": "getbit",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%28#0"
      ]
    },
    "1073": {
      "op": "bz withdraw_else_body@22",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1076": {
      "op": "itxn_begin"
    },
    "1077": {
      "op": "bytec 12 // \"admin withdrawal\"",
      "defined_out": [
        "\"admin withdrawal\""
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "\"admin withdrawal\""
      ]
    },
    "1079": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1081": {
      "op": "bytec 11 // method \"arc200_transfer(address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transfer(address,uint256)bool)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "Method(arc200_transfer(address,uint256)bool)"
      ]
    },
    "1083": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1085": {
      "op": "frame_dig -4",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "receiver#0 (copy)"
      ]
    },
    "1087": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1089": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "amount#0 (copy)"
      ]
    },
    "1091": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1093": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "1095": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1097": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "6"
      ]
    },
    "1099": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "1102": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1104": {
      "op": "itxn_submit"
    },
    "1105": {
      "retsub": true,
      "op": "retsub"
    },
    "1106": {
      "block": "withdraw_else_body@22",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%29#0"
      ]
    },
    "1108": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%19#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%29#0",
        "tmp%19#0"
      ]
    },
    "1110": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "balance#0",
        "check%2#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "check%2#0"
      ]
    },
    "1112": {
      "error": "account opted into asset",
      "op": "assert // account opted into asset",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0"
      ]
    },
    "1113": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "balance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "\"d\""
      ]
    },
    "1115": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "balance#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "1117": {
      "op": "concat",
      "defined_out": [
        "balance#0",
        "tmp%19#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "tmp%31#0"
      ]
    },
    "1118": {
      "op": "box_get",
      "defined_out": [
        "balance#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1119": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0"
      ]
    },
    "1120": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "balance#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "1121": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0"
      ]
    },
    "1122": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "balance#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "8"
      ]
    },
    "1123": {
      "op": "bzero",
      "defined_out": [
        "balance#0",
        "bzero%7#0",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "maybe_value%5#0",
        "bzero%7#0"
      ]
    },
    "1124": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "maybe_value%5#0"
      ]
    },
    "1125": {
      "op": "dig 1",
      "defined_out": [
        "balance#0",
        "bzero%7#0",
        "bzero%7#0 (copy)",
        "maybe_value%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "maybe_value%5#0",
        "bzero%7#0 (copy)"
      ]
    },
    "1127": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%7#0",
        "balance#0",
        "bzero%7#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "arc4_encoded%7#0"
      ]
    },
    "1128": {
      "op": "btoi",
      "defined_out": [
        "balance#0",
        "bzero%7#0",
        "tmp%19#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "balance#0",
        "bzero%7#0",
        "tmp%32#0"
      ]
    },
    "1129": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "tmp%32#0",
        "balance#0"
      ]
    },
    "1131": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "balance#0",
        "tmp%32#0"
      ]
    },
    "1132": {
      "op": "-",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0"
      ]
    },
    "1133": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "maxWithdrawableBalance\u2081#0"
      ]
    },
    "1134": {
      "op": "frame_bury 5",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0"
      ]
    },
    "1136": {
      "op": "itob",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "1137": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "reinterpret_biguint%1#0",
        "amount#0 (copy)"
      ]
    },
    "1139": {
      "op": "b>=",
      "defined_out": [
        "bzero%7#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "tmp%33#0"
      ]
    },
    "1140": {
      "error": "maxWithdrawableBalance is less then requested",
      "op": "assert // maxWithdrawableBalance is less then requested",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0"
      ]
    },
    "1141": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "bzero%7#0",
        "amount#0 (copy)"
      ]
    },
    "1143": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%8#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "arc4_encoded%8#0"
      ]
    },
    "1144": {
      "op": "btoi",
      "defined_out": [
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw\u2081#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0"
      ]
    },
    "1145": {
      "op": "dup",
      "defined_out": [
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw\u2081#0",
        "toWidraw\u2081#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0",
        "toWidraw\u2081#4"
      ]
    },
    "1146": {
      "op": "frame_bury 8",
      "defined_out": [
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw\u2081#0",
        "toWidraw\u2081#4"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0"
      ]
    },
    "1148": {
      "op": "bnz withdraw_after_if_else@24",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1151": {
      "op": "frame_dig 5",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#4"
      ]
    },
    "1153": {
      "op": "frame_bury 8",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1155": {
      "block": "withdraw_after_if_else@24",
      "stack_in": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "toWidraw\u2081#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "toWidraw\u2081#0"
      ]
    },
    "1157": {
      "op": "itxn_begin"
    },
    "1158": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "1159": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ]
    },
    "1160": {
      "op": "bytec 12 // \"admin withdrawal\"",
      "defined_out": [
        "\"admin withdrawal\"",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0",
        "\"admin withdrawal\""
      ]
    },
    "1162": {
      "op": "itxn_field Note",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ]
    },
    "1164": {
      "op": "frame_dig -4",
      "defined_out": [
        "inner_txn_params%5%%param_AssetAmount_idx_0#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0",
        "receiver#0 (copy)"
      ]
    },
    "1166": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "inner_txn_params%5%%param_AssetAmount_idx_0#0"
      ]
    },
    "1168": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1170": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "tmp%19#0"
      ]
    },
    "1172": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1174": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "4"
      ]
    },
    "1176": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1178": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0",
        "0"
      ]
    },
    "1179": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "game#0",
        "toWithdrawIncludingFee#1",
        "toWithdrawNet#0",
        "maxWithdrawableBalance#0",
        "maxWithdrawableBalance\u2081#0",
        "tmp%19#0",
        "toWidraw#4",
        "toWidraw\u2081#4",
        "tmp%1#0"
      ]
    },
    "1181": {
      "op": "itxn_submit"
    },
    "1182": {
      "retsub": true,
      "op": "retsub"
    },
    "1183": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithNativeToken",
      "params": {
        "txnDeposit#0": "uint64",
        "winRatio#0": "bytes"
      },
      "block": "CreateGameWithNativeToken",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1186": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "1187": {
      "op": "dupn 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0"
      ]
    },
    "1189": {
      "op": "frame_dig -2",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1191": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0"
      ]
    },
    "1193": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "winRatio#0 (copy)"
      ]
    },
    "1195": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "1196": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%0#0",
        "1000000"
      ]
    },
    "1198": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "1199": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0"
      ]
    },
    "1200": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1202": {
      "op": "gtxns Amount",
      "defined_out": [
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "1204": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1205": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "40"
      ]
    },
    "1207": {
      "op": "/",
      "defined_out": [
        "fee#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%2#0",
        "fee#0"
      ]
    },
    "1208": {
      "op": "-",
      "defined_out": [
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0"
      ]
    },
    "1209": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    "1210": {
      "op": "bytec 6 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x640000000000000000"
      ]
    },
    "1212": {
      "op": "box_len",
      "defined_out": [
        "deposit#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1213": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_exists%0#0"
      ]
    },
    "1215": {
      "op": "bz CreateGameWithNativeToken_after_if_else@2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1218": {
      "op": "bytec 6 // 0x640000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x640000000000000000"
      ]
    },
    "1220": {
      "op": "box_get",
      "defined_out": [
        "deposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1221": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0"
      ]
    },
    "1222": {
      "op": "frame_bury 5",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1224": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1225": {
      "block": "CreateGameWithNativeToken_after_if_else@2",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "deposit#0"
      ]
    },
    "1227": {
      "op": "itob",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1228": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1229": {
      "op": "frame_bury 1",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1231": {
      "op": "frame_dig 5",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "prevDeposit#0"
      ]
    },
    "1233": {
      "op": "b+",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ]
    },
    "1234": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1235": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "1236": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "1237": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "1238": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ]
    },
    "1239": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "32"
      ]
    },
    "1240": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1241": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "1242": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1244": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%0#0"
      ]
    },
    "1245": {
      "op": "bytec 6 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%0#0",
        "0x640000000000000000"
      ]
    },
    "1247": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x640000000000000000",
        "arc4_encoded%0#0"
      ]
    },
    "1248": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1249": {
      "op": "frame_dig -2",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1251": {
      "op": "gtxns Receiver",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%7#0"
      ]
    },
    "1253": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1255": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%9#0"
      ]
    },
    "1256": {
      "error": "Receiver must be the gas station app",
      "op": "assert // Receiver must be the gas station app",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1257": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x0000000000000000"
      ]
    },
    "1258": {
      "op": "frame_dig 3",
      "defined_out": [
        "0x0000000000000000",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "0x0000000000000000",
        "sender#0"
      ]
    },
    "1260": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "key#0"
      ]
    },
    "1261": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "key#0",
        "\"g\""
      ]
    },
    "1263": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "\"g\"",
        "key#0"
      ]
    },
    "1264": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1265": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "1266": {
      "op": "frame_bury 2",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1268": {
      "op": "box_len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1269": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_exists%2#0"
      ]
    },
    "1271": {
      "op": "bz CreateGameWithNativeToken_else_body@4",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1274": {
      "op": "frame_dig 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1276": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1277": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1278": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "1279": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "320"
      ]
    },
    "1281": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%0#0"
      ]
    },
    "1282": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1283": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1284": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1286": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%0#0"
      ]
    },
    "1287": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%0#0",
        "0x80"
      ]
    },
    "1289": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1290": {
      "error": "The previous game was not for the native token",
      "op": "assert // The previous game was not for the native token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1291": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1292": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1293": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%4#0"
      ]
    },
    "1294": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "321"
      ]
    },
    "1296": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%1#0"
      ]
    },
    "1297": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1298": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1299": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1301": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%1#0"
      ]
    },
    "1302": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "encoded_bool%1#0",
        "0x00"
      ]
    },
    "1303": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%14#0"
      ]
    },
    "1304": {
      "error": "The previous game was ASA token",
      "op": "assert // The previous game was ASA token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1305": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1306": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1307": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%5#0"
      ]
    },
    "1308": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%16#0"
      ]
    },
    "1311": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%16#0",
        "0x0000000000000000"
      ]
    },
    "1312": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%17#0"
      ]
    },
    "1313": {
      "error": "The previous game was not for the native token",
      "op": "assert // The previous game was not for the native token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1314": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1315": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1316": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%6#0"
      ]
    },
    "1317": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "oldBalance#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "oldBalance#0"
      ]
    },
    "1320": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "oldBalance#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1322": {
      "op": "b+",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0"
      ]
    },
    "1323": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "1324": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "1325": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "1326": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "1327": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0"
      ]
    },
    "1328": {
      "op": "frame_dig 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1330": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0"
      ]
    },
    "1331": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1333": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1334": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%7#0"
      ]
    },
    "1335": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%7#0",
        "arc4_encoded%1#0"
      ]
    },
    "1336": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "updated_data%0#0"
      ]
    },
    "1338": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "updated_data%0#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1340": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "1341": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1342": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1343": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1344": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%8#0"
      ]
    },
    "1345": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "winRatio#0 (copy)"
      ]
    },
    "1347": {
      "op": "replace2 145",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "updated_data%1#0"
      ]
    },
    "1349": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1350": {
      "block": "CreateGameWithNativeToken_after_if_else@5",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0"
      ]
    },
    "1352": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1353": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "maybe_value%9#0"
      ]
    },
    "1354": {
      "op": "frame_bury 0"
    },
    "1356": {
      "retsub": true,
      "op": "retsub"
    },
    "1357": {
      "block": "CreateGameWithNativeToken_else_body@4",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1359": {
      "op": "dup",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ]
    },
    "1360": {
      "op": "len",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ]
    },
    "1361": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0",
        "32"
      ]
    },
    "1362": {
      "op": "<=",
      "defined_out": [
        "len_ok%2#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "len_ok%2#0"
      ]
    },
    "1363": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1364": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "1366": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%2#0"
      ]
    },
    "1367": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%2#0",
        "to_encode%2#0"
      ]
    },
    "1369": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "1370": {
      "op": "global Round",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "to_encode%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0",
        "to_encode%3#0"
      ]
    },
    "1372": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1373": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0"
      ]
    },
    "1375": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "0x0000000000000000"
      ]
    },
    "1376": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1377": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "0x80"
      ]
    },
    "1379": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1380": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "321"
      ]
    },
    "1382": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "321",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "321",
        "0"
      ]
    },
    "1383": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1384": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "322"
      ]
    },
    "1386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "322",
        "0"
      ]
    },
    "1387": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%8#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1388": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "1390": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%9#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1391": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%1#0"
      ]
    },
    "1392": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%10#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1393": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%10#0",
        "0x0000000000000000"
      ]
    },
    "1394": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%11#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1395": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%11#0",
        "0x0000000000000000"
      ]
    },
    "1396": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%12#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1397": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "bzero%0#0",
        "encoded_tuple_buffer%12#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%12#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1398": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%13#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1399": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%13#0",
        "0x0000000000000000"
      ]
    },
    "1400": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%14#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1401": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%14#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1402": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "1403": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%15#0",
        "winRatio#0 (copy)"
      ]
    },
    "1405": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%16#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "1406": {
      "op": "frame_dig 3",
      "defined_out": [
        "bzero%0#0",
        "encoded_tuple_buffer%16#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "encoded_tuple_buffer%16#0",
        "sender#0"
      ]
    },
    "1408": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "newValue#0"
      ]
    },
    "1409": {
      "op": "frame_dig 2",
      "defined_out": [
        "bzero%0#0",
        "newValue#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "newValue#0",
        "tmp%10#0"
      ]
    },
    "1411": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%10#0",
        "newValue#0"
      ]
    },
    "1412": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0"
      ]
    },
    "1413": {
      "op": "b CreateGameWithNativeToken_after_if_else@5"
    },
    "1416": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.OptInToASA",
      "params": {
        "txnDeposit#0": "uint64",
        "assetId#0": "bytes"
      },
      "block": "OptInToASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1419": {
      "op": "frame_dig -2",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "txnDeposit#0 (copy)"
      ]
    },
    "1421": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1423": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1425": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1426": {
      "error": "Receiver of the optin fee must be the current smart contract",
      "op": "assert // Receiver of the optin fee must be the current smart contract",
      "stack_out": []
    },
    "1427": {
      "op": "frame_dig -2",
      "stack_out": [
        "txnDeposit#0 (copy)"
      ]
    },
    "1429": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1431": {
      "op": "pushint 10000000 // 10000000",
      "defined_out": [
        "10000000",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "10000000"
      ]
    },
    "1436": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1437": {
      "error": "Opt in fee for new asset is 10 native tokens",
      "op": "assert // Opt in fee for new asset is 10 native tokens",
      "stack_out": []
    },
    "1438": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1440": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "assetId#0 (copy)"
      ]
    },
    "1442": {
      "op": "btoi",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1443": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1444": {
      "op": "cover 2",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1446": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1448": {
      "op": "bury 1",
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1450": {
      "op": "bnz OptInToASA_after_if_else@3",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1453": {
      "op": "itxn_begin"
    },
    "1454": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1456": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1458": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "1459": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1461": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1463": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1465": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "4"
      ]
    },
    "1467": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1469": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "1470": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1472": {
      "op": "itxn_submit"
    },
    "1473": {
      "block": "OptInToASA_after_if_else@3",
      "stack_in": [
        "tmp%6#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1474": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithASAToken",
      "params": {
        "txnDeposit#0": "uint64",
        "winRatio#0": "bytes"
      },
      "block": "CreateGameWithASAToken",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1477": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "1478": {
      "op": "dupn 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0"
      ]
    },
    "1480": {
      "op": "frame_dig -2",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1482": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0"
      ]
    },
    "1484": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "winRatio#0 (copy)"
      ]
    },
    "1486": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "1487": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%0#0",
        "1000000"
      ]
    },
    "1489": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "1490": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0"
      ]
    },
    "1491": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1493": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "sender#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "to_encode%0#0"
      ]
    },
    "1495": {
      "op": "itob",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0"
      ]
    },
    "1496": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "assetId#0"
      ]
    },
    "1497": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1499": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0"
      ]
    },
    "1501": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1502": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "assetId#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "40"
      ]
    },
    "1504": {
      "op": "/",
      "defined_out": [
        "assetId#0",
        "fee#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "tmp%2#0",
        "fee#0"
      ]
    },
    "1505": {
      "op": "-",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "deposit#0"
      ]
    },
    "1506": {
      "op": "swap",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "assetId#0"
      ]
    },
    "1507": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "assetId#0",
        "prevDeposit#0"
      ]
    },
    "1508": {
      "op": "swap",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "assetId#0"
      ]
    },
    "1509": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "assetId#0",
        "\"d\""
      ]
    },
    "1511": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "\"d\"",
        "assetId#0"
      ]
    },
    "1512": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1513": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "1514": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1515": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_exists%0#0"
      ]
    },
    "1517": {
      "op": "bz CreateGameWithASAToken_after_if_else@2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1520": {
      "op": "frame_dig 7",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "1522": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "deposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1523": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_exists%1#0",
        "prevDeposit#0"
      ]
    },
    "1524": {
      "op": "frame_bury 6",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_exists%1#0"
      ]
    },
    "1526": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1527": {
      "block": "CreateGameWithASAToken_after_if_else@2",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "deposit#0"
      ]
    },
    "1529": {
      "op": "itob",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1530": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1531": {
      "op": "frame_bury 1",
      "defined_out": [
        "deposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1533": {
      "op": "frame_dig 6",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "prevDeposit#0"
      ]
    },
    "1535": {
      "op": "b+",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0"
      ]
    },
    "1536": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "1537": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "value_len%0#0"
      ]
    },
    "1538": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "value_len%0#0",
        "32"
      ]
    },
    "1539": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "len_ok%0#0"
      ]
    },
    "1540": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0"
      ]
    },
    "1541": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "32"
      ]
    },
    "1542": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1543": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "1544": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1546": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%0#0"
      ]
    },
    "1547": {
      "op": "frame_dig 7",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%0#0",
        "tmp%4#0"
      ]
    },
    "1549": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%4#0",
        "arc4_encoded%0#0"
      ]
    },
    "1550": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1551": {
      "op": "frame_dig -2",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "1553": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%7#0"
      ]
    },
    "1555": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1557": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%9#0"
      ]
    },
    "1558": {
      "error": "Receiver must be the gas station app",
      "op": "assert // Receiver must be the gas station app",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1559": {
      "op": "frame_dig 4",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "assetId#0"
      ]
    },
    "1561": {
      "op": "frame_dig 3",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "1563": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "key#0"
      ]
    },
    "1564": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "key#0",
        "\"g\""
      ]
    },
    "1566": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "\"g\"",
        "key#0"
      ]
    },
    "1567": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1568": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "1569": {
      "op": "frame_bury 2",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1571": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1572": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_exists%2#0"
      ]
    },
    "1574": {
      "op": "bz CreateGameWithASAToken_else_body@4",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1577": {
      "op": "frame_dig 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1579": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1580": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1581": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "1582": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "320"
      ]
    },
    "1584": {
      "op": "getbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%0#0"
      ]
    },
    "1585": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1586": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1587": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1589": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%0#0"
      ]
    },
    "1590": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "1591": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1592": {
      "error": "The previous game was for the native token",
      "op": "assert // The previous game was for the native token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1593": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1594": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1595": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%4#0"
      ]
    },
    "1596": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "322"
      ]
    },
    "1598": {
      "op": "getbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%1#0"
      ]
    },
    "1599": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1600": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1601": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1603": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%1#0"
      ]
    },
    "1604": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%1#0",
        "0x00"
      ]
    },
    "1605": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%14#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%14#0"
      ]
    },
    "1606": {
      "error": "The previous game was for the arc200 token",
      "op": "assert // The previous game was for the arc200 token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1607": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1608": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1609": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%5#0"
      ]
    },
    "1610": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%5#0",
        "321"
      ]
    },
    "1612": {
      "op": "getbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "is_true%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%2#0"
      ]
    },
    "1613": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "1614": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "1615": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "1617": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%2#0"
      ]
    },
    "1618": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%2#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "encoded_bool%2#0",
        "0x80"
      ]
    },
    "1620": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%16#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%16#0"
      ]
    },
    "1621": {
      "error": "The previous game was not for the ASA token",
      "op": "assert // The previous game was not for the ASA token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1622": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1623": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1624": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%6#0"
      ]
    },
    "1625": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%18#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%18#0"
      ]
    },
    "1628": {
      "op": "frame_dig 4",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%18#0",
        "assetId#0"
      ]
    },
    "1630": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%19#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%19#0"
      ]
    },
    "1631": {
      "error": "The previous game was not for the same token",
      "op": "assert // The previous game was not for the same token",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1632": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1633": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1634": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%7#0"
      ]
    },
    "1635": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "oldBalance#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "oldBalance#0"
      ]
    },
    "1638": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "oldBalance#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1640": {
      "op": "b+",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0"
      ]
    },
    "1641": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "1642": {
      "op": "len",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "value_len%1#0"
      ]
    },
    "1643": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "value_len%1#0",
        "32"
      ]
    },
    "1644": {
      "op": "<=",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "len_ok%1#0"
      ]
    },
    "1645": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0"
      ]
    },
    "1646": {
      "op": "frame_dig 0",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "to_encode%2#0",
        "bzero%0#0"
      ]
    },
    "1648": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0"
      ]
    },
    "1649": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1651": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%1#0",
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1652": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0"
      ]
    },
    "1653": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "arc4_encoded%1#0"
      ]
    },
    "1654": {
      "op": "replace2 0",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "updated_data%0#0"
      ]
    },
    "1656": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "updated_data%0#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1658": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "1659": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1660": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1661": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1662": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%9#0"
      ]
    },
    "1663": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "maybe_value%9#0",
        "winRatio#0 (copy)"
      ]
    },
    "1665": {
      "op": "replace2 145",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0",
        "tmp%4#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "updated_data%1#0"
      ]
    },
    "1667": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1668": {
      "block": "CreateGameWithASAToken_after_if_else@5",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0"
      ]
    },
    "1670": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "1671": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "maybe_value%10#0"
      ]
    },
    "1672": {
      "op": "frame_bury 0"
    },
    "1674": {
      "retsub": true,
      "op": "retsub"
    },
    "1675": {
      "block": "CreateGameWithASAToken_else_body@4",
      "stack_in": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1677": {
      "op": "dup",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)"
      ]
    },
    "1678": {
      "op": "len",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ]
    },
    "1679": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "reinterpret_biguint%0#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "value_len%2#0",
        "32"
      ]
    },
    "1680": {
      "op": "<=",
      "defined_out": [
        "len_ok%2#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "len_ok%2#0"
      ]
    },
    "1681": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1682": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "reinterpret_biguint%0#0",
        "bzero%0#0"
      ]
    },
    "1684": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%2#0"
      ]
    },
    "1685": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%2#0",
        "to_encode%3#0"
      ]
    },
    "1687": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "1688": {
      "op": "global Round",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "to_encode%4#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%2#0",
        "val_as_bytes%1#0",
        "to_encode%4#0"
      ]
    },
    "1690": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "arc4_encoded%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "1691": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0"
      ]
    },
    "1693": {
      "op": "frame_dig 4",
      "defined_out": [
        "arc4_encoded%2#0",
        "assetId#0",
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "arc4_encoded%2#0",
        "assetId#0"
      ]
    },
    "1695": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1696": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%5#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "1697": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1698": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%6#0",
        "321"
      ]
    },
    "1700": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "321",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%6#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%6#0",
        "321",
        "1"
      ]
    },
    "1701": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1702": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%7#0",
        "322"
      ]
    },
    "1704": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "322",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%7#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%7#0",
        "322",
        "0"
      ]
    },
    "1705": {
      "op": "setbit",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%8#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1706": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "1708": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%9#0",
        "reinterpret_biguint%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1709": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%2#0"
      ]
    },
    "1710": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%10#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1711": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%10#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%10#0",
        "0x0000000000000000"
      ]
    },
    "1712": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%11#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1713": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%11#0",
        "0x0000000000000000"
      ]
    },
    "1714": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%12#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1715": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%12#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%12#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1716": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%13#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1717": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%13#0",
        "0x0000000000000000"
      ]
    },
    "1718": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%14#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1719": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%14#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1720": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "1721": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%15#0",
        "reinterpret_biguint%0#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%15#0",
        "winRatio#0 (copy)"
      ]
    },
    "1723": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%16#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "1724": {
      "op": "frame_dig 3",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "encoded_tuple_buffer%16#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "encoded_tuple_buffer%16#0",
        "sender#0"
      ]
    },
    "1726": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "newValue#0",
        "reinterpret_biguint%0#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "newValue#0"
      ]
    },
    "1727": {
      "op": "frame_dig 2",
      "defined_out": [
        "assetId#0",
        "bzero%0#0",
        "newValue#0",
        "reinterpret_biguint%0#0",
        "sender#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "newValue#0",
        "tmp%10#0"
      ]
    },
    "1729": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0",
        "tmp%10#0",
        "newValue#0"
      ]
    },
    "1730": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "sender#0",
        "assetId#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%4#0"
      ]
    },
    "1731": {
      "op": "b CreateGameWithASAToken_after_if_else@5"
    },
    "1734": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.CreateGameWithArc200Token",
      "params": {
        "assetId#0": "bytes",
        "amount#0": "bytes",
        "winRatio#0": "bytes"
      },
      "block": "CreateGameWithArc200Token",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1737": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0"
      ]
    },
    "1738": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0"
      ]
    },
    "1739": {
      "op": "txn Sender"
    },
    "1741": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "winRatio#0 (copy)"
      ]
    },
    "1743": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "1744": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "tmp%0#0",
        "1000000"
      ]
    },
    "1746": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "1747": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0"
      ]
    },
    "1748": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "amount#0 (copy)"
      ]
    },
    "1750": {
      "op": "pushbytes 0x28",
      "defined_out": [
        "0x28",
        "amount#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "amount#0 (copy)",
        "0x28"
      ]
    },
    "1753": {
      "op": "b/",
      "defined_out": [
        "fee#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "fee#0"
      ]
    },
    "1754": {
      "op": "frame_dig -2",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "fee#0",
        "amount#0 (copy)"
      ]
    },
    "1756": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "amount#0 (copy)",
        "fee#0"
      ]
    },
    "1757": {
      "op": "b-",
      "defined_out": [
        "deposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0"
      ]
    },
    "1758": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    "1759": {
      "op": "bytec 4 // \"d\""
    },
    "1761": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "deposit#0",
        "prevDeposit#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "1763": {
      "op": "concat",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1764": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "1765": {
      "op": "box_len",
      "defined_out": [
        "deposit#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1766": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "1768": {
      "op": "bz CreateGameWithArc200Token_after_if_else@2",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1771": {
      "op": "frame_dig 5",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "1773": {
      "op": "box_get",
      "defined_out": [
        "deposit#0",
        "maybe_exists%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "prevDeposit#0",
        "maybe_exists%1#0"
      ]
    },
    "1774": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_exists%1#0",
        "prevDeposit#0"
      ]
    },
    "1775": {
      "op": "frame_bury 4",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "1777": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1778": {
      "block": "CreateGameWithArc200Token_after_if_else@2",
      "stack_in": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "prevDeposit#0"
      ]
    },
    "1780": {
      "op": "frame_dig 3",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "prevDeposit#0",
        "deposit#0"
      ]
    },
    "1782": {
      "op": "b+",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0"
      ]
    },
    "1783": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1784": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "1785": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "1786": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%0#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "1787": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0"
      ]
    },
    "1788": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "32"
      ]
    },
    "1789": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1790": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "1791": {
      "op": "frame_bury 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "1793": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%0#0"
      ]
    },
    "1794": {
      "op": "frame_dig 5",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%0#0",
        "tmp%2#0"
      ]
    },
    "1796": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%2#0",
        "arc4_encoded%0#0"
      ]
    },
    "1797": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1798": {
      "op": "itxn_begin"
    },
    "1799": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetId#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "assetId#0 (copy)"
      ]
    },
    "1801": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1802": {
      "op": "txn Sender",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0"
      ]
    },
    "1804": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1806": {
      "op": "bytec 16 // method \"arc200_transferFrom(address,address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transferFrom(address,address,uint256)bool)",
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0",
        "tmp%6#0",
        "Method(arc200_transferFrom(address,address,uint256)bool)"
      ]
    },
    "1808": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1810": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "1811": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%6#0"
      ]
    },
    "1813": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1815": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "amount#0 (copy)"
      ]
    },
    "1817": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1819": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1821": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "6"
      ]
    },
    "1823": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1825": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1826": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1828": {
      "op": "itxn_submit"
    },
    "1829": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "assetId#0 (copy)"
      ]
    },
    "1831": {
      "op": "frame_dig 2",
      "defined_out": [
        "assetId#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "assetId#0 (copy)",
        "sender#0"
      ]
    },
    "1833": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "key#0"
      ]
    },
    "1834": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "bzero%0#0",
        "deposit#0",
        "key#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "key#0",
        "\"g\""
      ]
    },
    "1836": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "\"g\"",
        "key#0"
      ]
    },
    "1837": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1838": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "1839": {
      "op": "frame_bury 1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1841": {
      "op": "box_len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1842": {
      "op": "bury 1",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1844": {
      "op": "bz CreateGameWithArc200Token_else_body@5",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1847": {
      "op": "frame_dig 1",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1849": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1850": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1851": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%3#0"
      ]
    },
    "1852": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%3#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%3#0",
        "320"
      ]
    },
    "1854": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%0#0"
      ]
    },
    "1855": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "deposit#0",
        "is_true%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1856": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1857": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1859": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%0#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%0#0"
      ]
    },
    "1860": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "1861": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1862": {
      "error": "The previous game was for the native token",
      "op": "assert // The previous game was for the native token",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1863": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1864": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1865": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%4#0"
      ]
    },
    "1866": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%4#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "322"
      ]
    },
    "1868": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%1#0"
      ]
    },
    "1869": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1870": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1871": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1873": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%1#0"
      ]
    },
    "1874": {
      "op": "bytec 8 // 0x80",
      "defined_out": [
        "0x80",
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%1#0",
        "0x80"
      ]
    },
    "1876": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%11#0"
      ]
    },
    "1877": {
      "error": "The previous game was NOT for the arc200 token",
      "op": "assert // The previous game was NOT for the arc200 token",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1878": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1879": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1880": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%5#0"
      ]
    },
    "1881": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "deposit#0",
        "maybe_value%5#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%5#0",
        "321"
      ]
    },
    "1883": {
      "op": "getbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "is_true%2#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%2#0"
      ]
    },
    "1884": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "1885": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "1886": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "1888": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_bool%2#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%2#0"
      ]
    },
    "1889": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "encoded_bool%2#0",
        "0x00"
      ]
    },
    "1890": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%13#0"
      ]
    },
    "1891": {
      "error": "The previous game was for the ASA token",
      "op": "assert // The previous game was for the ASA token",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1892": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1893": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1894": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%6#0"
      ]
    },
    "1895": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%15#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%15#0"
      ]
    },
    "1898": {
      "op": "frame_dig -3",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%15#0",
        "assetId#0 (copy)"
      ]
    },
    "1900": {
      "op": "==",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%16#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%16#0"
      ]
    },
    "1901": {
      "error": "The previous game was not for the same token",
      "op": "assert // The previous game was not for the same token",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1902": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1903": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1904": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%7#0"
      ]
    },
    "1905": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "oldBalance#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "oldBalance#0"
      ]
    },
    "1908": {
      "op": "frame_dig 3",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "oldBalance#0",
        "deposit#0"
      ]
    },
    "1910": {
      "op": "b+",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ]
    },
    "1911": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "1912": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "1913": {
      "op": "intc_1 // 32",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "1914": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "1915": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0"
      ]
    },
    "1916": {
      "op": "frame_dig 0",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "1918": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0"
      ]
    },
    "1919": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1921": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%1#0",
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1922": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "arc4_encoded%1#0",
        "maybe_value%8#0"
      ]
    },
    "1923": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%8#0",
        "arc4_encoded%1#0"
      ]
    },
    "1924": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%0#0"
      ]
    },
    "1926": {
      "op": "dig 1",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%0#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1928": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "1929": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1930": {
      "op": "dup",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1931": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1932": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%9#0"
      ]
    },
    "1933": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%9#0",
        "winRatio#0 (copy)"
      ]
    },
    "1935": {
      "op": "replace2 145",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "updated_data%1#0"
      ]
    },
    "1937": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "1938": {
      "block": "CreateGameWithArc200Token_after_if_else@6",
      "stack_in": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1940": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "1941": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "maybe_value%10#0"
      ]
    },
    "1942": {
      "op": "frame_bury 0"
    },
    "1944": {
      "retsub": true,
      "op": "retsub"
    },
    "1945": {
      "block": "CreateGameWithArc200Token_else_body@5",
      "stack_in": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "deposit#0"
      ]
    },
    "1947": {
      "op": "dup",
      "defined_out": [
        "deposit#0",
        "deposit#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "deposit#0",
        "deposit#0 (copy)"
      ]
    },
    "1948": {
      "op": "len",
      "defined_out": [
        "deposit#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "deposit#0",
        "value_len%2#0"
      ]
    },
    "1949": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "deposit#0",
        "value_len%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "deposit#0",
        "value_len%2#0",
        "32"
      ]
    },
    "1950": {
      "op": "<=",
      "defined_out": [
        "deposit#0",
        "len_ok%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "deposit#0",
        "len_ok%2#0"
      ]
    },
    "1951": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "deposit#0"
      ]
    },
    "1952": {
      "op": "frame_dig 0",
      "defined_out": [
        "bzero%0#0",
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "deposit#0",
        "bzero%0#0"
      ]
    },
    "1954": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%2#0"
      ]
    },
    "1955": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%2#0",
        "to_encode%2#0"
      ]
    },
    "1957": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "1958": {
      "op": "global Round",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0",
        "to_encode%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0",
        "to_encode%3#0"
      ]
    },
    "1960": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "deposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "arc4_encoded%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1961": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0"
      ]
    },
    "1963": {
      "op": "frame_dig -3",
      "defined_out": [
        "arc4_encoded%2#0",
        "assetId#0 (copy)",
        "bzero%0#0",
        "deposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "arc4_encoded%2#0",
        "assetId#0 (copy)"
      ]
    },
    "1965": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1966": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "1967": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1968": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "321"
      ]
    },
    "1970": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "321",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "321",
        "0"
      ]
    },
    "1971": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1972": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "322"
      ]
    },
    "1974": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "322",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "322",
        "1"
      ]
    },
    "1975": {
      "op": "setbit",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1976": {
      "op": "uncover 2",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "1978": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1979": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%1#0"
      ]
    },
    "1980": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1981": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%10#0",
        "0x0000000000000000"
      ]
    },
    "1982": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%11#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1983": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%11#0",
        "0x0000000000000000"
      ]
    },
    "1984": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1985": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%12#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1986": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1987": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%13#0",
        "0x0000000000000000"
      ]
    },
    "1988": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1989": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%14#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1990": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%15#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "1991": {
      "op": "frame_dig -1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%15#0",
        "winRatio#0 (copy)"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%15#0",
        "winRatio#0 (copy)"
      ]
    },
    "1993": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%16#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "1994": {
      "op": "frame_dig 2",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "encoded_tuple_buffer%16#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "encoded_tuple_buffer%16#0",
        "sender#0"
      ]
    },
    "1996": {
      "op": "concat",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "newValue#0",
        "sender#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "newValue#0"
      ]
    },
    "1997": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "deposit#0",
        "newValue#0",
        "sender#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "newValue#0",
        "tmp%7#0"
      ]
    },
    "1999": {
      "op": "swap",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%7#0",
        "newValue#0"
      ]
    },
    "2000": {
      "op": "box_put",
      "stack_out": [
        "bzero%0#0",
        "tmp%7#0",
        "sender#0",
        "deposit#0",
        "prevDeposit#0",
        "tmp%2#0"
      ]
    },
    "2001": {
      "op": "b CreateGameWithArc200Token_after_if_else@6"
    },
    "2004": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithNativeToken",
      "params": {
        "txnDeposit#0": "uint64",
        "game#0": "bytes",
        "winProbability#0": "bytes"
      },
      "block": "StartGameWithNativeToken",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2007": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0"
      ]
    },
    "2008": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0"
      ]
    },
    "2010": {
      "op": "frame_dig -3",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2012": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0"
      ]
    },
    "2014": {
      "op": "dup",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0"
      ]
    },
    "2015": {
      "op": "txn Sender",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2017": {
      "op": "dig 1",
      "defined_out": [
        "sender#0",
        "sender#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%0#0",
        "sender#0 (copy)"
      ]
    },
    "2019": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2020": {
      "error": "Sender of the app call must be the same as sender of the deposit",
      "op": "assert // Sender of the app call must be the same as sender of the deposit",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0"
      ]
    },
    "2021": {
      "op": "frame_dig -2",
      "defined_out": [
        "game#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "2023": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%3#0"
      ]
    },
    "2026": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "sender#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "2027": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%3#0"
      ]
    },
    "2029": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%3#0",
        "0x0000000000000000"
      ]
    },
    "2030": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%4#0"
      ]
    },
    "2031": {
      "error": "Asset id in the tx does not match the game asset id",
      "op": "assert // Asset id in the tx does not match the game asset id",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0"
      ]
    },
    "2032": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "\"g\""
      ]
    },
    "2034": {
      "op": "frame_dig -2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "\"g\"",
        "game#0 (copy)"
      ]
    },
    "2036": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "2037": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "sender#0",
        "tmp%5#0",
        "tmp%5#0"
      ]
    },
    "2038": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "2040": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "2041": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2042": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0",
        "maybe_exists%0#0"
      ]
    },
    "2044": {
      "error": "The game does not exist",
      "op": "assert // The game does not exist",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "2045": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2046": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "maybe_value%1#0"
      ]
    },
    "2047": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2050": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%7#0",
        "0x0000000000000000"
      ]
    },
    "2051": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%8#0"
      ]
    },
    "2052": {
      "error": "This game must be played with native token",
      "op": "assert // This game must be played with native token",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0"
      ]
    },
    "2053": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "winProbability#0 (copy)"
      ]
    },
    "2055": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%9#0"
      ]
    },
    "2056": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "sender#0",
        "tmp%9#0",
        "tmp%9#0"
      ]
    },
    "2057": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "tmp%9#0"
      ]
    },
    "2059": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "tmp%9#0",
        "1000000"
      ]
    },
    "2061": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "tmp%10#0"
      ]
    },
    "2062": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0"
      ]
    },
    "2063": {
      "op": "bytec 7 // \"p\"",
      "defined_out": [
        "\"p\"",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "sender#0",
        "\"p\""
      ]
    },
    "2065": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "2066": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2067": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2068": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2069": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%2#0"
      ]
    },
    "2071": {
      "op": "bz StartGameWithNativeToken_after_if_else@3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2074": {
      "op": "frame_dig 6",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2076": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2077": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%3#0"
      ]
    },
    "2078": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2079": {
      "op": "extract_uint64",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "2080": {
      "op": "intc_2 // 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%14#0",
        "1"
      ]
    },
    "2081": {
      "op": ">",
      "defined_out": [
        "sender#0",
        "tmp%11#0",
        "tmp%15#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%15#0"
      ]
    },
    "2082": {
      "error": "Your previous game has not yet been claimed",
      "op": "assert // Your previous game has not yet been claimed",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2083": {
      "block": "StartGameWithNativeToken_after_if_else@3",
      "stack_in": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "to_encode%0#0"
      ]
    },
    "2085": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%0#0"
      ]
    },
    "2086": {
      "op": "frame_dig 4",
      "defined_out": [
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "tmp%5#0"
      ]
    },
    "2088": {
      "op": "dup",
      "defined_out": [
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "tmp%5#0 (copy)",
        "tmp%5#0 (copy)"
      ]
    },
    "2089": {
      "op": "cover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "tmp%5#0 (copy)"
      ]
    },
    "2091": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2092": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0"
      ]
    },
    "2093": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2094": {
      "op": "replace2 57",
      "defined_out": [
        "tmp%5#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "updated_data%0#0"
      ]
    },
    "2096": {
      "op": "dig 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "updated_data%0#0",
        "tmp%5#0 (copy)"
      ]
    },
    "2098": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2099": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0"
      ]
    },
    "2100": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%5#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2102": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%17#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0"
      ]
    },
    "2104": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0",
        "tmp%17#0"
      ]
    },
    "2105": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%17#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0"
      ]
    },
    "2107": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "tmp%17#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%17#0",
        "1000000"
      ]
    },
    "2109": {
      "op": "*",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%18#0"
      ]
    },
    "2110": {
      "op": "frame_dig 5",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%18#0",
        "tmp%9#0"
      ]
    },
    "2112": {
      "op": "/",
      "defined_out": [
        "tmp%17#0",
        "tmp%20#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%20#0"
      ]
    },
    "2113": {
      "op": "itob",
      "defined_out": [
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%5#0",
        "winAmount#0"
      ]
    },
    "2114": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "tmp%5#0"
      ]
    },
    "2115": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2116": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "maybe_value%5#0"
      ]
    },
    "2117": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%17#0",
        "tmp%22#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "tmp%22#0"
      ]
    },
    "2120": {
      "op": "bytec 13 // 0x02",
      "defined_out": [
        "0x02",
        "tmp%17#0",
        "tmp%22#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "tmp%22#0",
        "0x02"
      ]
    },
    "2122": {
      "op": "b/",
      "defined_out": [
        "maxPotWinAmount#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "winAmount#0",
        "maxPotWinAmount#0"
      ]
    },
    "2123": {
      "op": "b<=",
      "defined_out": [
        "tmp%17#0",
        "tmp%23#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%23#0"
      ]
    },
    "2124": {
      "error": "The game does not have enough balance for your win scenario. You can win max 50% of the game balance",
      "op": "assert // The game does not have enough balance for your win scenario. You can win max 50% of the game balance",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2125": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "prevDeposit#0"
      ]
    },
    "2126": {
      "op": "frame_bury 0",
      "defined_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2128": {
      "op": "bytec 6 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "0x640000000000000000"
      ]
    },
    "2130": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2131": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%6#0"
      ]
    },
    "2133": {
      "op": "bz StartGameWithNativeToken_after_if_else@5",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2136": {
      "op": "bytec 6 // 0x640000000000000000",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "0x640000000000000000"
      ]
    },
    "2138": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%7#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "prevDeposit#0",
        "maybe_exists%7#0"
      ]
    },
    "2139": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%7#0",
        "prevDeposit#0"
      ]
    },
    "2140": {
      "op": "frame_bury 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "maybe_exists%7#0"
      ]
    },
    "2142": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2143": {
      "block": "StartGameWithNativeToken_after_if_else@5",
      "stack_in": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%17#0"
      ]
    },
    "2145": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2146": {
      "op": "frame_dig 0",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0"
      ]
    },
    "2148": {
      "op": "dig 1",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%1#0 (copy)",
        "tmp%17#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2150": {
      "op": "b+",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0"
      ]
    },
    "2151": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "2152": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "value_len%0#0"
      ]
    },
    "2153": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2154": {
      "op": "<=",
      "defined_out": [
        "len_ok%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "len_ok%0#0"
      ]
    },
    "2155": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0"
      ]
    },
    "2156": {
      "op": "intc_1 // 32",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "32"
      ]
    },
    "2157": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "2158": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%1#0"
      ]
    },
    "2159": {
      "op": "dig 1",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%1#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2161": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "2162": {
      "op": "bytec 6 // 0x640000000000000000",
      "defined_out": [
        "0x640000000000000000",
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "0x640000000000000000"
      ]
    },
    "2164": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "0x640000000000000000",
        "arc4_encoded%0#0"
      ]
    },
    "2165": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2166": {
      "op": "global Round",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%2#0"
      ]
    },
    "2168": {
      "op": "itob",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2169": {
      "op": "dig 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2171": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "val_as_bytes%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "value_len%1#0"
      ]
    },
    "2172": {
      "op": "intc_1 // 32",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "2173": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "len_ok%1#0"
      ]
    },
    "2174": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2175": {
      "op": "cover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2177": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0"
      ]
    },
    "2178": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc4_encoded%1#0",
        "game#0 (copy)",
        "prevDeposit#0",
        "tmp%17#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "game#0 (copy)"
      ]
    },
    "2180": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%29#0"
      ]
    },
    "2183": {
      "op": "bytec 14 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%29#0",
        "0x0000000000000001"
      ]
    },
    "2185": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%29#0",
        "0x0000000000000001",
        "winProbability#0 (copy)"
      ]
    },
    "2187": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%1#0",
        "encoded_tuple_buffer%2#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%29#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2188": {
      "op": "uncover 3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "arc4_encoded%1#0",
        "tmp%29#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "2190": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%1#0",
        "encoded_tuple_buffer%3#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "arc4_encoded%1#0",
        "tmp%29#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2191": {
      "op": "uncover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%3#0",
        "arc4_encoded%1#0"
      ]
    },
    "2193": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2194": {
      "op": "frame_dig 3",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "2196": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%29#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%29#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2197": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0",
        "tmp%29#0"
      ]
    },
    "2198": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2199": {
      "op": "frame_dig 2",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0",
        "sender#0"
      ]
    },
    "2201": {
      "op": "concat",
      "defined_out": [
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "newValue#0"
      ]
    },
    "2202": {
      "op": "frame_dig 6",
      "defined_out": [
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "newValue#0",
        "tmp%11#0"
      ]
    },
    "2204": {
      "op": "dig 1",
      "defined_out": [
        "newValue#0",
        "newValue#0 (copy)",
        "prevDeposit#0",
        "sender#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "newValue#0",
        "tmp%11#0",
        "newValue#0 (copy)"
      ]
    },
    "2206": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%17#0",
        "sender#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0",
        "newValue#0"
      ]
    },
    "2207": {
      "op": "frame_bury 0"
    },
    "2209": {
      "retsub": true,
      "op": "retsub"
    },
    "2210": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithASAToken",
      "params": {
        "txnDeposit#0": "uint64",
        "game#0": "bytes",
        "winProbability#0": "bytes"
      },
      "block": "StartGameWithASAToken",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2213": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0"
      ]
    },
    "2214": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0"
      ]
    },
    "2215": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0"
      ]
    },
    "2217": {
      "op": "frame_dig -3",
      "defined_out": [
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2219": {
      "op": "gtxns Sender",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0"
      ]
    },
    "2221": {
      "op": "dup",
      "defined_out": [
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0"
      ]
    },
    "2222": {
      "op": "frame_dig -3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2224": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "sender#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "to_encode%0#0"
      ]
    },
    "2226": {
      "op": "itob",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "assetId#0"
      ]
    },
    "2227": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "sender#0",
        "assetId#0",
        "assetId#0 (copy)"
      ]
    },
    "2228": {
      "op": "uncover 2",
      "defined_out": [
        "assetId#0",
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2230": {
      "op": "txn Sender",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2232": {
      "op": "dig 1",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "sender#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%0#0",
        "sender#0 (copy)"
      ]
    },
    "2234": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2235": {
      "error": "Sender of the app call must be the same as sender of the deposit",
      "op": "assert // Sender of the app call must be the same as sender of the deposit",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2236": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0",
        "game#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "2238": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ]
    },
    "2241": {
      "op": "cover 2",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2243": {
      "op": "frame_dig -2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "2245": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "game#0 (copy)",
        "0"
      ]
    },
    "2246": {
      "op": "extract_uint64",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%4#0"
      ]
    },
    "2247": {
      "op": "dig 2",
      "defined_out": [
        "assetId#0",
        "assetId#0 (copy)",
        "sender#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%4#0",
        "assetId#0 (copy)"
      ]
    },
    "2249": {
      "op": "btoi",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2250": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%6#0"
      ]
    },
    "2251": {
      "error": "Asset id in the tx does not match the game asset id",
      "op": "assert // Asset id in the tx does not match the game asset id",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0"
      ]
    },
    "2252": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "assetId#0",
        "sender#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "\"g\""
      ]
    },
    "2254": {
      "op": "frame_dig -2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "\"g\"",
        "game#0 (copy)"
      ]
    },
    "2256": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2257": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "2258": {
      "op": "cover 3",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2260": {
      "op": "dup",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "2261": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2262": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0",
        "maybe_exists%0#0"
      ]
    },
    "2264": {
      "error": "The game does not exist",
      "op": "assert // The game does not exist",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2265": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2266": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "maybe_value%1#0"
      ]
    },
    "2267": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "assetId#0",
        "sender#0",
        "tmp%9#0"
      ]
    },
    "2270": {
      "op": "uncover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%9#0",
        "assetId#0"
      ]
    },
    "2272": {
      "op": "==",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%10#0"
      ]
    },
    "2273": {
      "error": "This game must be played with native token",
      "op": "assert // This game must be played with native token",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0"
      ]
    },
    "2274": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%3#0",
        "tmp%7#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "winProbability#0 (copy)"
      ]
    },
    "2276": {
      "op": "btoi",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%11#0"
      ]
    },
    "2277": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "sender#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2278": {
      "op": "cover 2",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "tmp%11#0"
      ]
    },
    "2280": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "tmp%11#0",
        "1000000"
      ]
    },
    "2282": {
      "op": "<=",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "tmp%12#0"
      ]
    },
    "2283": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0"
      ]
    },
    "2284": {
      "op": "bytec 7 // \"p\"",
      "defined_out": [
        "\"p\"",
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "sender#0",
        "\"p\""
      ]
    },
    "2286": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "2287": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2288": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "2289": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2290": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%2#0"
      ]
    },
    "2292": {
      "op": "bz StartGameWithASAToken_after_if_else@3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2295": {
      "op": "frame_dig 8",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "2297": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2298": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%3#0"
      ]
    },
    "2299": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2300": {
      "op": "extract_uint64",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0"
      ]
    },
    "2301": {
      "op": "intc_2 // 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0",
        "1"
      ]
    },
    "2302": {
      "op": ">",
      "defined_out": [
        "assetId#0",
        "sender#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%17#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%17#0"
      ]
    },
    "2303": {
      "error": "Your previous game has not yet been claimed",
      "op": "assert // Your previous game has not yet been claimed",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2304": {
      "block": "StartGameWithASAToken_after_if_else@3",
      "stack_in": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "to_encode%1#0"
      ]
    },
    "2306": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%1#0"
      ]
    },
    "2307": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%7#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%1#0",
        "tmp%7#0"
      ]
    },
    "2309": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%1#0",
        "tmp%7#0 (copy)",
        "tmp%7#0 (copy)"
      ]
    },
    "2310": {
      "op": "cover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "tmp%7#0 (copy)"
      ]
    },
    "2312": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%7#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2313": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "maybe_value%4#0"
      ]
    },
    "2314": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "val_as_bytes%1#0"
      ]
    },
    "2315": {
      "op": "replace2 57",
      "defined_out": [
        "tmp%7#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "updated_data%0#0"
      ]
    },
    "2317": {
      "op": "dig 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "updated_data%0#0",
        "tmp%7#0 (copy)"
      ]
    },
    "2319": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2320": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0"
      ]
    },
    "2321": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%7#0",
        "txnDeposit#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "txnDeposit#0 (copy)"
      ]
    },
    "2323": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0"
      ]
    },
    "2325": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0",
        "tmp%19#0"
      ]
    },
    "2326": {
      "op": "frame_bury 2",
      "defined_out": [
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0"
      ]
    },
    "2328": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%19#0",
        "1000000"
      ]
    },
    "2330": {
      "op": "*",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%20#0"
      ]
    },
    "2331": {
      "op": "frame_dig 7",
      "defined_out": [
        "tmp%11#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%20#0",
        "tmp%11#0"
      ]
    },
    "2333": {
      "op": "/",
      "defined_out": [
        "tmp%11#0",
        "tmp%19#0",
        "tmp%22#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%22#0"
      ]
    },
    "2334": {
      "op": "itob",
      "defined_out": [
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2335": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "tmp%7#0"
      ]
    },
    "2336": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2337": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "maybe_value%5#0"
      ]
    },
    "2338": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%11#0",
        "tmp%19#0",
        "tmp%24#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "tmp%24#0"
      ]
    },
    "2341": {
      "op": "bytec 13 // 0x02",
      "defined_out": [
        "0x02",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%24#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "tmp%24#0",
        "0x02"
      ]
    },
    "2343": {
      "op": "b/",
      "defined_out": [
        "maxPotWinAmount#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "winAmount#0",
        "maxPotWinAmount#0"
      ]
    },
    "2344": {
      "op": "b<=",
      "defined_out": [
        "tmp%11#0",
        "tmp%19#0",
        "tmp%25#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%25#0"
      ]
    },
    "2345": {
      "error": "The game does not have enough balance for your win scenario. You can win max 50% of the game balance",
      "op": "assert // The game does not have enough balance for your win scenario. You can win max 50% of the game balance",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2346": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "prevDeposit#0"
      ]
    },
    "2347": {
      "op": "frame_bury 0",
      "defined_out": [
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2349": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"d\""
      ]
    },
    "2351": {
      "op": "frame_dig 4",
      "defined_out": [
        "\"d\"",
        "assetId#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"d\"",
        "assetId#0"
      ]
    },
    "2353": {
      "op": "concat",
      "defined_out": [
        "assetId#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0"
      ]
    },
    "2354": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0",
        "tmp%26#0"
      ]
    },
    "2355": {
      "op": "frame_bury 1",
      "defined_out": [
        "assetId#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0"
      ]
    },
    "2357": {
      "op": "box_len",
      "defined_out": [
        "assetId#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2358": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%6#0"
      ]
    },
    "2360": {
      "op": "bz StartGameWithASAToken_after_if_else@5",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2363": {
      "op": "frame_dig 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%26#0"
      ]
    },
    "2365": {
      "op": "box_get",
      "defined_out": [
        "assetId#0",
        "maybe_exists%7#0",
        "prevDeposit#0",
        "tmp%11#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "prevDeposit#0",
        "maybe_exists%7#0"
      ]
    },
    "2366": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%7#0",
        "prevDeposit#0"
      ]
    },
    "2367": {
      "op": "frame_bury 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "maybe_exists%7#0"
      ]
    },
    "2369": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2370": {
      "block": "StartGameWithASAToken_after_if_else@5",
      "stack_in": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%19#0"
      ]
    },
    "2372": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2373": {
      "op": "frame_dig 0",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0"
      ]
    },
    "2375": {
      "op": "dig 1",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%1#0 (copy)",
        "tmp%19#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2377": {
      "op": "b+",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0"
      ]
    },
    "2378": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "2379": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "value_len%0#0"
      ]
    },
    "2380": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2381": {
      "op": "<=",
      "defined_out": [
        "len_ok%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "len_ok%0#0"
      ]
    },
    "2382": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0"
      ]
    },
    "2383": {
      "op": "intc_1 // 32",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "32"
      ]
    },
    "2384": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "to_encode%2#0",
        "bzero%0#0"
      ]
    },
    "2385": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%2#0"
      ]
    },
    "2386": {
      "op": "dig 1",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2388": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "2389": {
      "op": "frame_dig 1",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "tmp%26#0"
      ]
    },
    "2391": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "tmp%26#0",
        "arc4_encoded%0#0"
      ]
    },
    "2392": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2393": {
      "op": "global Round",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "to_encode%3#0"
      ]
    },
    "2395": {
      "op": "itob",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "2396": {
      "op": "dig 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "reinterpret_biguint%1#0 (copy)"
      ]
    },
    "2398": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "value_len%1#0"
      ]
    },
    "2399": {
      "op": "intc_1 // 32",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "value_len%1#0",
        "32"
      ]
    },
    "2400": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "len_ok%1#0",
        "prevDeposit#0",
        "reinterpret_biguint%1#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0",
        "len_ok%1#0"
      ]
    },
    "2401": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "2402": {
      "op": "cover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "reinterpret_biguint%1#0",
        "bzero%0#0"
      ]
    },
    "2404": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%1#0"
      ]
    },
    "2405": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc4_encoded%1#0",
        "game#0 (copy)",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%1#0",
        "game#0 (copy)"
      ]
    },
    "2407": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%1#0",
        "tmp%31#0"
      ]
    },
    "2410": {
      "op": "bytec 14 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%1#0",
        "tmp%31#0",
        "0x0000000000000001"
      ]
    },
    "2412": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%1#0",
        "tmp%31#0",
        "0x0000000000000001",
        "winProbability#0 (copy)"
      ]
    },
    "2414": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%1#0",
        "encoded_tuple_buffer%2#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "val_as_bytes%2#0",
        "arc4_encoded%1#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2415": {
      "op": "uncover 3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "arc4_encoded%1#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "2417": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%1#0",
        "encoded_tuple_buffer%3#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "arc4_encoded%1#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2418": {
      "op": "uncover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0",
        "arc4_encoded%1#0"
      ]
    },
    "2420": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2421": {
      "op": "frame_dig 5",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "2423": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2424": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "encoded_tuple_buffer%5#0",
        "tmp%31#0"
      ]
    },
    "2425": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2426": {
      "op": "frame_dig 3",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "encoded_tuple_buffer%6#0",
        "sender#0"
      ]
    },
    "2428": {
      "op": "concat",
      "defined_out": [
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "newValue#0"
      ]
    },
    "2429": {
      "op": "frame_dig 8",
      "defined_out": [
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%13#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "newValue#0",
        "tmp%13#0"
      ]
    },
    "2431": {
      "op": "dig 1",
      "defined_out": [
        "newValue#0",
        "newValue#0 (copy)",
        "prevDeposit#0",
        "sender#0",
        "tmp%13#0",
        "tmp%19#0",
        "tmp%26#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "newValue#0",
        "tmp%13#0",
        "newValue#0 (copy)"
      ]
    },
    "2433": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%26#0",
        "tmp%19#0",
        "sender#0",
        "assetId#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%11#0",
        "tmp%13#0",
        "newValue#0"
      ]
    },
    "2434": {
      "op": "frame_bury 0"
    },
    "2436": {
      "retsub": true,
      "op": "retsub"
    },
    "2437": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.StartGameWithArc200Token",
      "params": {
        "amount#0": "bytes",
        "assetId#0": "bytes",
        "game#0": "bytes",
        "winProbability#0": "bytes"
      },
      "block": "StartGameWithArc200Token",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "2440": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0"
      ]
    },
    "2441": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0"
      ]
    },
    "2442": {
      "op": "txn Sender"
    },
    "2444": {
      "op": "dup"
    },
    "2445": {
      "op": "frame_dig -2",
      "defined_out": [
        "game#0 (copy)",
        "sender#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "sender#0",
        "game#0 (copy)"
      ]
    },
    "2447": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2450": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2451": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2453": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetId#0 (copy)",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%0#0",
        "assetId#0 (copy)"
      ]
    },
    "2455": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%1#0"
      ]
    },
    "2456": {
      "error": "Asset id in the tx does not match the game asset id",
      "op": "assert // Asset id in the tx does not match the game asset id",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0"
      ]
    },
    "2457": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "\"g\""
      ]
    },
    "2459": {
      "op": "frame_dig -2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "\"g\"",
        "game#0 (copy)"
      ]
    },
    "2461": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2462": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2463": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2465": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2466": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2467": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "2469": {
      "error": "The game does not exist",
      "op": "assert // The game does not exist",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%2#0"
      ]
    },
    "2470": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2471": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "maybe_value%1#0"
      ]
    },
    "2472": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%4#0"
      ]
    },
    "2475": {
      "op": "frame_dig -3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%4#0",
        "assetId#0 (copy)"
      ]
    },
    "2477": {
      "op": "==",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%5#0"
      ]
    },
    "2478": {
      "error": "This game must be played with native token",
      "op": "assert // This game must be played with native token",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0"
      ]
    },
    "2479": {
      "op": "frame_dig -1",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "winProbability#0 (copy)"
      ]
    },
    "2481": {
      "op": "btoi",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%6#0"
      ]
    },
    "2482": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "sender#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "2483": {
      "op": "cover 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "tmp%6#0"
      ]
    },
    "2485": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "tmp%6#0",
        "1000000"
      ]
    },
    "2487": {
      "op": "<=",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "tmp%7#0"
      ]
    },
    "2488": {
      "error": "Win probability must be below 1 000 000",
      "op": "assert // Win probability must be below 1 000 000",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0"
      ]
    },
    "2489": {
      "op": "bytec 7 // \"p\"",
      "defined_out": [
        "\"p\"",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "sender#0",
        "\"p\""
      ]
    },
    "2491": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "2492": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2493": {
      "op": "dup",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "2494": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2495": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%2#0"
      ]
    },
    "2497": {
      "op": "bz StartGameWithArc200Token_after_if_else@3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2500": {
      "op": "frame_dig 6",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "2502": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2503": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%3#0"
      ]
    },
    "2504": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2505": {
      "op": "extract_uint64",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%11#0"
      ]
    },
    "2506": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "sender#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%11#0",
        "1"
      ]
    },
    "2507": {
      "op": ">",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%12#0"
      ]
    },
    "2508": {
      "error": "Your previous game has not yet been claimed",
      "op": "assert // Your previous game has not yet been claimed",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2509": {
      "block": "StartGameWithArc200Token_after_if_else@3",
      "stack_in": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%0#0"
      ]
    },
    "2511": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "2512": {
      "op": "frame_dig 4",
      "defined_out": [
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "tmp%2#0"
      ]
    },
    "2514": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "tmp%2#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "2515": {
      "op": "cover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2517": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2518": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0"
      ]
    },
    "2519": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2520": {
      "op": "replace2 57",
      "defined_out": [
        "tmp%2#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "updated_data%0#0"
      ]
    },
    "2522": {
      "op": "dig 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "updated_data%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2524": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2525": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2526": {
      "op": "itxn_begin"
    },
    "2527": {
      "op": "frame_dig -2",
      "defined_out": [
        "game#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "game#0 (copy)"
      ]
    },
    "2529": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "game#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "game#0 (copy)",
        "0"
      ]
    },
    "2530": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2531": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0"
      ]
    },
    "2533": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2535": {
      "op": "bytec 16 // method \"arc200_transferFrom(address,address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transferFrom(address,address,uint256)bool)",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0",
        "Method(arc200_transferFrom(address,address,uint256)bool)"
      ]
    },
    "2537": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2539": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%16#0",
        "tmp%15#0"
      ]
    },
    "2540": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%16#0"
      ]
    },
    "2542": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2544": {
      "op": "frame_dig -4",
      "defined_out": [
        "amount#0 (copy)",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "amount#0 (copy)"
      ]
    },
    "2546": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2548": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2550": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "6"
      ]
    },
    "2552": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2554": {
      "op": "intc_0 // 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "0"
      ]
    },
    "2555": {
      "op": "itxn_field Fee",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0"
      ]
    },
    "2557": {
      "op": "itxn_submit"
    },
    "2558": {
      "op": "frame_dig -4",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "amount#0 (copy)"
      ]
    },
    "2560": {
      "op": "bytec 9 // 0x0f4240",
      "defined_out": [
        "0x0f4240",
        "amount#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "amount#0 (copy)",
        "0x0f4240"
      ]
    },
    "2562": {
      "op": "b*",
      "defined_out": [
        "tmp%17#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%17#0"
      ]
    },
    "2563": {
      "op": "frame_dig 5",
      "defined_out": [
        "tmp%17#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%17#0",
        "tmp%6#0"
      ]
    },
    "2565": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "tmp%17#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2566": {
      "op": "b/",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%2#0",
        "winAmount#0"
      ]
    },
    "2567": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "tmp%2#0"
      ]
    },
    "2568": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%2#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2569": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "maybe_value%5#0"
      ]
    },
    "2570": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0",
        "tmp%20#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "tmp%20#0"
      ]
    },
    "2573": {
      "op": "bytec 13 // 0x02",
      "defined_out": [
        "0x02",
        "tmp%2#0",
        "tmp%20#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "tmp%20#0",
        "0x02"
      ]
    },
    "2575": {
      "op": "b/",
      "defined_out": [
        "maxPotWinAmount#0",
        "tmp%2#0",
        "tmp%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "winAmount#0",
        "maxPotWinAmount#0"
      ]
    },
    "2576": {
      "op": "b<=",
      "defined_out": [
        "tmp%2#0",
        "tmp%21#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%21#0"
      ]
    },
    "2577": {
      "error": "The game does not have enough balance for your win scenario. You can win max 50% of the game balance",
      "op": "assert // The game does not have enough balance for your win scenario. You can win max 50% of the game balance",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2578": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0"
      ]
    },
    "2579": {
      "op": "frame_bury 0",
      "defined_out": [
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2581": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "\"d\""
      ]
    },
    "2583": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"d\"",
        "assetId#0 (copy)",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "\"d\"",
        "assetId#0 (copy)"
      ]
    },
    "2585": {
      "op": "concat",
      "defined_out": [
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0"
      ]
    },
    "2586": {
      "op": "dup",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0",
        "tmp%22#0"
      ]
    },
    "2587": {
      "op": "frame_bury 1",
      "defined_out": [
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0"
      ]
    },
    "2589": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2590": {
      "op": "bury 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%6#0"
      ]
    },
    "2592": {
      "op": "bz StartGameWithArc200Token_after_if_else@6",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2595": {
      "op": "frame_dig 1",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%22#0"
      ]
    },
    "2597": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%7#0",
        "prevDeposit#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0",
        "maybe_exists%7#0"
      ]
    },
    "2598": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%7#0",
        "prevDeposit#0"
      ]
    },
    "2599": {
      "op": "frame_bury 0",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "maybe_exists%7#0"
      ]
    },
    "2601": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2602": {
      "block": "StartGameWithArc200Token_after_if_else@6",
      "stack_in": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "prevDeposit#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0"
      ]
    },
    "2604": {
      "op": "frame_dig -4",
      "defined_out": [
        "amount#0 (copy)",
        "prevDeposit#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "prevDeposit#0",
        "amount#0 (copy)"
      ]
    },
    "2606": {
      "op": "b+",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0"
      ]
    },
    "2607": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "2608": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0",
        "value_len%0#0"
      ]
    },
    "2609": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "to_encode%1#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2610": {
      "op": "<=",
      "defined_out": [
        "len_ok%0#0",
        "prevDeposit#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0",
        "len_ok%0#0"
      ]
    },
    "2611": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0"
      ]
    },
    "2612": {
      "op": "intc_1 // 32",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0",
        "32"
      ]
    },
    "2613": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "to_encode%1#0",
        "bzero%0#0"
      ]
    },
    "2614": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "to_encode%1#0"
      ]
    },
    "2615": {
      "op": "dig 1",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "to_encode%1#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2617": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "2618": {
      "op": "frame_dig 1",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "tmp%22#0"
      ]
    },
    "2620": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "tmp%22#0",
        "arc4_encoded%0#0"
      ]
    },
    "2621": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0"
      ]
    },
    "2622": {
      "op": "global Round",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "to_encode%2#0"
      ]
    },
    "2624": {
      "op": "itob",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%22#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2625": {
      "op": "frame_dig -4",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "bzero%0#0",
        "val_as_bytes%1#0",
        "amount#0 (copy)"
      ]
    },
    "2627": {
      "op": "uncover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "amount#0 (copy)",
        "bzero%0#0"
      ]
    },
    "2629": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%22#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0"
      ]
    },
    "2630": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc4_encoded%1#0",
        "game#0 (copy)",
        "prevDeposit#0",
        "tmp%22#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "game#0 (copy)"
      ]
    },
    "2632": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%25#0"
      ]
    },
    "2635": {
      "op": "bytec 14 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%25#0",
        "0x0000000000000001"
      ]
    },
    "2637": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x0000000000000001",
        "arc4_encoded%1#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0",
        "winProbability#0 (copy)"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%25#0",
        "0x0000000000000001",
        "winProbability#0 (copy)"
      ]
    },
    "2639": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%1#0",
        "encoded_tuple_buffer%2#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "arc4_encoded%1#0",
        "tmp%25#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2640": {
      "op": "uncover 3",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "arc4_encoded%1#0",
        "tmp%25#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "2642": {
      "op": "concat",
      "defined_out": [
        "arc4_encoded%1#0",
        "encoded_tuple_buffer%3#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "arc4_encoded%1#0",
        "tmp%25#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2643": {
      "op": "uncover 2",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%3#0",
        "arc4_encoded%1#0"
      ]
    },
    "2645": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2646": {
      "op": "frame_dig 3",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ]
    },
    "2648": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%25#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2649": {
      "op": "swap",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "encoded_tuple_buffer%5#0",
        "tmp%25#0"
      ]
    },
    "2650": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2651": {
      "op": "frame_dig 2",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "encoded_tuple_buffer%6#0",
        "sender#0"
      ]
    },
    "2653": {
      "op": "concat",
      "defined_out": [
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "newValue#0"
      ]
    },
    "2654": {
      "op": "frame_dig 6",
      "defined_out": [
        "newValue#0",
        "prevDeposit#0",
        "sender#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "newValue#0",
        "tmp%8#0"
      ]
    },
    "2656": {
      "op": "dig 1",
      "defined_out": [
        "newValue#0",
        "newValue#0 (copy)",
        "prevDeposit#0",
        "sender#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "newValue#0",
        "tmp%8#0",
        "newValue#0 (copy)"
      ]
    },
    "2658": {
      "op": "box_put",
      "stack_out": [
        "prevDeposit#0",
        "tmp%22#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0",
        "newValue#0"
      ]
    },
    "2659": {
      "op": "frame_bury 0"
    },
    "2661": {
      "retsub": true,
      "op": "retsub"
    },
    "2662": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.Game",
      "params": {
        "creator#0": "bytes",
        "assetId#0": "bytes"
      },
      "block": "Game",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2665": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "assetId#0 (copy)"
      ]
    },
    "2667": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0 (copy)",
        "creator#0 (copy)"
      ],
      "stack_out": [
        "assetId#0 (copy)",
        "creator#0 (copy)"
      ]
    },
    "2669": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "2670": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"g\""
      ]
    },
    "2672": {
      "op": "swap",
      "stack_out": [
        "\"g\"",
        "key#0"
      ]
    },
    "2673": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2674": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2675": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2676": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2678": {
      "error": "Did not found the game",
      "op": "assert // Did not found the game",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2679": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2680": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2681": {
      "retsub": true,
      "op": "retsub"
    },
    "2682": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.MyGame",
      "params": {},
      "block": "MyGame",
      "stack_in": [],
      "op": "bytec 7 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "\"p\""
      ]
    },
    "2684": {
      "op": "txn Sender",
      "defined_out": [
        "\"p\"",
        "sender#0"
      ],
      "stack_out": [
        "\"p\"",
        "sender#0"
      ]
    },
    "2686": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2687": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2688": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2689": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2691": {
      "error": "Did not found the game you are playing",
      "op": "assert // Did not found the game you are playing",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2692": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2693": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2694": {
      "retsub": true,
      "op": "retsub"
    },
    "2695": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.ClaimGame",
      "params": {},
      "block": "ClaimGame",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2698": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0"
      ]
    },
    "2699": {
      "op": "dupn 8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0"
      ]
    },
    "2701": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0"
      ]
    },
    "2703": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0"
      ]
    },
    "2704": {
      "op": "txn Sender"
    },
    "2706": {
      "op": "bytec 7 // \"p\""
    },
    "2708": {
      "op": "txn Sender",
      "defined_out": [
        "\"p\"",
        "sender#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "\"p\"",
        "sender#0"
      ]
    },
    "2710": {
      "op": "concat",
      "defined_out": [
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0"
      ]
    },
    "2711": {
      "op": "dupn 2",
      "defined_out": [
        "sender#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2713": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2714": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2716": {
      "error": "Did not found the game you are playing",
      "op": "assert // Did not found the game you are playing",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2717": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "maybe_exists%1#0"
      ]
    },
    "2718": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "play#0"
      ]
    },
    "2719": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "play#0",
        "play#0 (copy)"
      ]
    },
    "2720": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "maybe_exists%1#0"
      ]
    },
    "2722": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0"
      ]
    },
    "2723": {
      "op": "dup",
      "defined_out": [
        "play#0",
        "play#0 (copy)",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "play#0 (copy)"
      ]
    },
    "2724": {
      "error": "Index access is out of bounds",
      "op": "extract 56 8 // on error: Index access is out of bounds",
      "defined_out": [
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "tmp%2#0"
      ]
    },
    "2727": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "tmp%2#0",
        "play#0 (copy)"
      ]
    },
    "2729": {
      "error": "Index access is out of bounds",
      "op": "extract 64 32 // on error: Index access is out of bounds",
      "defined_out": [
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2732": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "key#0"
      ]
    },
    "2733": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "play#0",
        "key#0",
        "key#0"
      ]
    },
    "2734": {
      "op": "cover 2",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "key#0"
      ]
    },
    "2736": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\"",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "key#0",
        "\"g\""
      ]
    },
    "2738": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "\"g\"",
        "key#0"
      ]
    },
    "2739": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "tmp%4#0"
      ]
    },
    "2740": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "play#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "2741": {
      "op": "cover 2",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0"
      ]
    },
    "2743": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2744": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2745": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0",
        "maybe_exists%2#0"
      ]
    },
    "2747": {
      "error": "Did not found the game",
      "op": "assert // Did not found the game",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "tmp%4#0"
      ]
    },
    "2748": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%3#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "game#0",
        "maybe_exists%3#0"
      ]
    },
    "2749": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "play#0",
        "maybe_exists%3#0",
        "game#0"
      ]
    },
    "2750": {
      "op": "cover 2",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%3#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "play#0",
        "maybe_exists%3#0"
      ]
    },
    "2752": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "play#0"
      ]
    },
    "2753": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "play#0",
        "16"
      ]
    },
    "2755": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2756": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "2757": {
      "op": "global Round",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2759": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "tmp%8#0",
        "100"
      ]
    },
    "2761": {
      "op": "-",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2762": {
      "op": "<",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%10#0"
      ]
    },
    "2763": {
      "op": "bz ClaimGame_after_if_else@2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2766": {
      "op": "frame_dig 14",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "2768": {
      "op": "frame_dig 16",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0"
      ]
    },
    "2770": {
      "op": "frame_dig 13",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "2772": {
      "op": "frame_dig 11",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0",
        "sender#0"
      ]
    },
    "2774": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.LooseGame",
      "op": "callsub LooseGame",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "2777": {
      "op": "popn 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2779": {
      "op": "frame_dig 12",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%0#0"
      ]
    },
    "2781": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "play#0",
        "sender#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2782": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%4#0"
      ]
    },
    "2783": {
      "op": "frame_bury 0"
    },
    "2785": {
      "retsub": true,
      "op": "retsub"
    },
    "2786": {
      "block": "ClaimGame_after_if_else@2",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 17",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "2788": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%7#0",
        "2"
      ]
    },
    "2790": {
      "op": "+",
      "defined_out": [
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%14#0"
      ]
    },
    "2791": {
      "op": "block BlkSeed",
      "defined_out": [
        "seed#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "seed#0"
      ]
    },
    "2793": {
      "op": "bytec 9 // 0x0f4240",
      "defined_out": [
        "0x0f4240",
        "seed#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "seed#0",
        "0x0f4240"
      ]
    },
    "2795": {
      "op": "b%",
      "defined_out": [
        "rand0_1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0"
      ]
    },
    "2796": {
      "op": "frame_dig 13",
      "defined_out": [
        "play#0",
        "rand0_1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "play#0"
      ]
    },
    "2798": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "play#0",
        "rand0_1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "play#0",
        "8"
      ]
    },
    "2799": {
      "op": "extract_uint64",
      "defined_out": [
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%16#0"
      ]
    },
    "2800": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%16#0"
      ]
    },
    "2801": {
      "op": "frame_bury 9",
      "defined_out": [
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%16#0"
      ]
    },
    "2803": {
      "op": "frame_dig 16",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%16#0",
        "game#0"
      ]
    },
    "2805": {
      "op": "pushint 145 // 145",
      "defined_out": [
        "145",
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%16#0",
        "game#0",
        "145"
      ]
    },
    "2808": {
      "op": "extract_uint64",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%18#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "2809": {
      "op": "*",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%19#0"
      ]
    },
    "2810": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "tmp%19#0",
        "1000000"
      ]
    },
    "2812": {
      "op": "/",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "tmp%16#0",
        "tmp%7#0",
        "winThreshold#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "winThreshold#0"
      ]
    },
    "2813": {
      "op": "itob",
      "defined_out": [
        "game#0",
        "play#0",
        "rand0_1#0",
        "reinterpret_biguint%1#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "rand0_1#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2814": {
      "op": "b<",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%20#0"
      ]
    },
    "2815": {
      "op": "bz ClaimGame_else_body@21",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2818": {
      "op": "frame_dig 13",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "play#0"
      ]
    },
    "2820": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%21#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%21#0"
      ]
    },
    "2823": {
      "op": "bytec 9 // 0x0f4240",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%21#0",
        "0x0f4240"
      ]
    },
    "2825": {
      "op": "b*",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%22#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%22#0"
      ]
    },
    "2826": {
      "op": "frame_dig 9",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%22#0",
        "tmp%16#0"
      ]
    },
    "2828": {
      "op": "itob",
      "defined_out": [
        "game#0",
        "play#0",
        "reinterpret_biguint%2#0",
        "tmp%16#0",
        "tmp%22#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%22#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "2829": {
      "op": "b/",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2830": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "winAmount#0"
      ]
    },
    "2831": {
      "op": "frame_bury 8",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2833": {
      "op": "dup",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "winAmount#0 (copy)"
      ]
    },
    "2834": {
      "op": "len",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0"
      ]
    },
    "2835": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0",
        "value_len%0#0"
      ]
    },
    "2836": {
      "op": "frame_bury 10",
      "defined_out": [
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0"
      ]
    },
    "2838": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "value_len%0#0",
        "32"
      ]
    },
    "2839": {
      "op": "<=",
      "defined_out": [
        "game#0",
        "len_ok%0#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "len_ok%0#0"
      ]
    },
    "2840": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2841": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "32"
      ]
    },
    "2842": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0"
      ]
    },
    "2843": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0",
        "bzero%0#0"
      ]
    },
    "2844": {
      "op": "frame_bury 1",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0"
      ]
    },
    "2846": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "bzero%0#0",
        "winAmount#0 (copy)"
      ]
    },
    "2848": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0"
      ]
    },
    "2849": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "2850": {
      "op": "frame_bury 0",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0"
      ]
    },
    "2852": {
      "op": "frame_dig 15",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0",
        "tmp%4#0"
      ]
    },
    "2854": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%0#0",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "2855": {
      "op": "cover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2857": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2858": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%0#0",
        "maybe_value%5#0"
      ]
    },
    "2859": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "maybe_value%5#0",
        "arc4_encoded%0#0"
      ]
    },
    "2860": {
      "op": "replace2 73",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "updated_data%0#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "updated_data%0#0"
      ]
    },
    "2862": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "updated_data%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2864": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2865": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0"
      ]
    },
    "2866": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "to_encode%0#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2868": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2869": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "val_as_bytes%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2871": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2872": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0"
      ]
    },
    "2873": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "2874": {
      "op": "replace2 65",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "updated_data%1#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "updated_data%1#0"
      ]
    },
    "2876": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "2877": {
      "op": "frame_dig 16",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "2879": {
      "error": "Index access is out of bounds",
      "op": "extract 113 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%27#0",
        "tmp%4#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%27#0"
      ]
    },
    "2882": {
      "op": "b>",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%28#0",
        "tmp%4#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%28#0"
      ]
    },
    "2883": {
      "op": "bz ClaimGame_after_if_else@5",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2886": {
      "op": "frame_dig 15",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0"
      ]
    },
    "2888": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2889": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2890": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "maybe_value%7#0"
      ]
    },
    "2891": {
      "op": "frame_dig 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "maybe_value%7#0",
        "arc4_encoded%0#0"
      ]
    },
    "2893": {
      "op": "replace2 113",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "updated_data%2#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "updated_data%2#0"
      ]
    },
    "2895": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "updated_data%2#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2897": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "updated_data%2#0"
      ]
    },
    "2898": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0"
      ]
    },
    "2899": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "to_encode%1#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "to_encode%1#0"
      ]
    },
    "2901": {
      "op": "itob",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "val_as_bytes%1#0"
      ]
    },
    "2902": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2904": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "val_as_bytes%1#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2905": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "val_as_bytes%1#0",
        "maybe_value%8#0"
      ]
    },
    "2906": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "maybe_value%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "2907": {
      "op": "replace2 105",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "tmp%16#0",
        "tmp%4#0",
        "tmp%7#0",
        "updated_data%3#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%4#0",
        "updated_data%3#0"
      ]
    },
    "2909": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2910": {
      "block": "ClaimGame_after_if_else@5",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 16",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "2912": {
      "op": "intc 7 // 320",
      "defined_out": [
        "320",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "320"
      ]
    },
    "2914": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%0#0"
      ]
    },
    "2915": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2916": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2917": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2919": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%0#0"
      ]
    },
    "2920": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2921": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%31#0"
      ]
    },
    "2922": {
      "op": "bz ClaimGame_after_if_else@10",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2925": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "game#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0"
      ]
    },
    "2926": {
      "op": "frame_bury 2",
      "defined_out": [
        "game#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2928": {
      "op": "frame_dig 14",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "2930": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%32#0"
      ]
    },
    "2933": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%32#0",
        "\"d\""
      ]
    },
    "2935": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "\"d\"",
        "tmp%32#0"
      ]
    },
    "2936": {
      "op": "concat",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%33#0"
      ]
    },
    "2937": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%33#0",
        "tmp%33#0"
      ]
    },
    "2938": {
      "op": "frame_bury 5",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%33#0"
      ]
    },
    "2940": {
      "op": "box_len",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "prevDeposit#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2941": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%9#0"
      ]
    },
    "2943": {
      "op": "bz ClaimGame_after_if_else@8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2946": {
      "op": "frame_dig 5",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%33#0"
      ]
    },
    "2948": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%10#0",
        "prevDeposit#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "maybe_exists%10#0"
      ]
    },
    "2949": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%10#0",
        "prevDeposit#0"
      ]
    },
    "2950": {
      "op": "frame_bury 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%10#0"
      ]
    },
    "2952": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "2953": {
      "block": "ClaimGame_after_if_else@8",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "prevDeposit#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0"
      ]
    },
    "2955": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "prevDeposit#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)"
      ]
    },
    "2956": {
      "op": "frame_dig 8",
      "defined_out": [
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0"
      ]
    },
    "2958": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2959": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0",
        "prevDeposit#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2961": {
      "op": "b>=",
      "defined_out": [
        "prevDeposit#0",
        "tmp%36#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0",
        "tmp%36#0"
      ]
    },
    "2962": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0"
      ]
    },
    "2963": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit#0",
        "winAmount#0 (copy)"
      ]
    },
    "2965": {
      "op": "b-",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0"
      ]
    },
    "2966": {
      "op": "dup",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "2967": {
      "op": "len",
      "defined_out": [
        "prevDeposit#0",
        "to_encode%2#0",
        "value_len%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "value_len%2#0"
      ]
    },
    "2968": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit#0",
        "to_encode%2#0",
        "value_len%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "value_len%2#0",
        "32"
      ]
    },
    "2969": {
      "op": "<=",
      "defined_out": [
        "len_ok%2#0",
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "len_ok%2#0"
      ]
    },
    "2970": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0"
      ]
    },
    "2971": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "bzero%0#0"
      ]
    },
    "2973": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit#0",
        "to_encode%2#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "2974": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%2#0",
        "bzero%0#0 (copy)"
      ]
    },
    "2976": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%2#0"
      ]
    },
    "2977": {
      "op": "frame_dig 5",
      "defined_out": [
        "arc4_encoded%2#0",
        "bzero%0#0",
        "prevDeposit#0",
        "tmp%33#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%2#0",
        "tmp%33#0"
      ]
    },
    "2979": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%33#0",
        "arc4_encoded%2#0"
      ]
    },
    "2980": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0"
      ]
    },
    "2981": {
      "op": "frame_dig 16",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "2983": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "tmp%39#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%39#0"
      ]
    },
    "2986": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "tmp%39#0",
        "tmp%39#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%39#0",
        "tmp%39#0 (copy)"
      ]
    },
    "2987": {
      "op": "dig 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%39#0",
        "tmp%39#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "2989": {
      "op": "b>=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "tmp%39#0",
        "tmp%40#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "2990": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%39#0"
      ]
    },
    "2991": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%39#0",
        "winAmount#0 (copy)"
      ]
    },
    "2993": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "to_encode%3#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0"
      ]
    },
    "2994": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "to_encode%3#0",
        "to_encode%3#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ]
    },
    "2995": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "to_encode%3#0",
        "value_len%3#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "value_len%3#0"
      ]
    },
    "2996": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "value_len%3#0",
        "32"
      ]
    },
    "2997": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%3#0",
        "prevDeposit#0",
        "tmp%33#0",
        "to_encode%3#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0",
        "len_ok%3#0"
      ]
    },
    "2998": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%3#0"
      ]
    },
    "2999": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%3#0",
        "bzero%0#0"
      ]
    },
    "3001": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%3#0"
      ]
    },
    "3002": {
      "op": "frame_dig 15",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%3#0",
        "tmp%4#0"
      ]
    },
    "3004": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "arc4_encoded%3#0",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "3005": {
      "op": "cover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%3#0",
        "tmp%4#0 (copy)"
      ]
    },
    "3007": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%3#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "prevDeposit#0",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%3#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3008": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%3#0",
        "maybe_value%11#0"
      ]
    },
    "3009": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "maybe_value%11#0",
        "arc4_encoded%3#0"
      ]
    },
    "3010": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%33#0",
        "tmp%4#0",
        "updated_data%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%4#0",
        "updated_data%4#0"
      ]
    },
    "3012": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "3013": {
      "op": "frame_dig 12",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0"
      ]
    },
    "3015": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3016": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%12#0",
        "maybe_value%12#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3017": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%12#0"
      ]
    },
    "3018": {
      "op": "bytec 15 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "bzero%0#0",
        "game#0",
        "maybe_value%12#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%12#0",
        "0x0000000000000002"
      ]
    },
    "3020": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "updated_data%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "tmp%0#0",
        "updated_data%5#0"
      ]
    },
    "3022": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0"
      ]
    },
    "3023": {
      "op": "itxn_begin"
    },
    "3024": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3026": {
      "op": "frame_dig 13",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0"
      ]
    },
    "3028": {
      "error": "Index access is out of bounds",
      "op": "extract 96 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%44#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0"
      ]
    },
    "3031": {
      "op": "frame_dig 10",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%44#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "value_len%0#0"
      ]
    },
    "3033": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%44#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "value_len%0#0",
        "8"
      ]
    },
    "3034": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "len_ok%4#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%44#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "len_ok%4#0"
      ]
    },
    "3035": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0"
      ]
    },
    "3036": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "8"
      ]
    },
    "3037": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "bzero%4#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%44#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "bzero%4#0"
      ]
    },
    "3038": {
      "op": "uncover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "bzero%4#0",
        "winAmount#0"
      ]
    },
    "3040": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%4#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%44#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "arc4_encoded%4#0"
      ]
    },
    "3041": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "tmp%44#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "3042": {
      "op": "itxn_field Amount",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%44#0"
      ]
    },
    "3044": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3046": {
      "op": "itxn_field Sender",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3048": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "1"
      ]
    },
    "3049": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3051": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit#0",
        "tmp%0#0",
        "tmp%33#0",
        "tmp%4#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0"
      ]
    },
    "3052": {
      "op": "itxn_field Fee",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3054": {
      "op": "itxn_submit"
    },
    "3055": {
      "block": "ClaimGame_after_if_else@10",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 16",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "3057": {
      "op": "intc 5 // 321",
      "defined_out": [
        "321",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "321"
      ]
    },
    "3059": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%1#0"
      ]
    },
    "3060": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "3061": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "3062": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "3064": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%1#0"
      ]
    },
    "3065": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "3066": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%45#0"
      ]
    },
    "3067": {
      "op": "bz ClaimGame_after_if_else@15",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3070": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "game#0",
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0"
      ]
    },
    "3071": {
      "op": "frame_bury 3",
      "defined_out": [
        "game#0",
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3073": {
      "op": "frame_dig 14",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "3075": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%46#0"
      ]
    },
    "3078": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%46#0",
        "\"d\""
      ]
    },
    "3080": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "\"d\"",
        "tmp%46#0"
      ]
    },
    "3081": {
      "op": "concat",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%47#0"
      ]
    },
    "3082": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%47#0",
        "tmp%47#0"
      ]
    },
    "3083": {
      "op": "frame_bury 6",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2081#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%47#0"
      ]
    },
    "3085": {
      "op": "box_len",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%13#0",
        "maybe_value%13#0",
        "prevDeposit\u2081#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3086": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%13#0"
      ]
    },
    "3088": {
      "op": "bz ClaimGame_after_if_else@13",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3091": {
      "op": "frame_dig 6",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%47#0"
      ]
    },
    "3093": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%14#0",
        "prevDeposit\u2081#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "maybe_exists%14#0"
      ]
    },
    "3094": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%14#0",
        "prevDeposit\u2081#0"
      ]
    },
    "3095": {
      "op": "frame_bury 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%14#0"
      ]
    },
    "3097": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3098": {
      "block": "ClaimGame_after_if_else@13",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "prevDeposit\u2081#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0"
      ]
    },
    "3100": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)"
      ]
    },
    "3101": {
      "op": "frame_dig 8",
      "defined_out": [
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0"
      ]
    },
    "3103": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3104": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2081#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3106": {
      "op": "b>=",
      "defined_out": [
        "prevDeposit\u2081#0",
        "tmp%50#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0",
        "tmp%50#0"
      ]
    },
    "3107": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0"
      ]
    },
    "3108": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2081#0",
        "winAmount#0 (copy)"
      ]
    },
    "3110": {
      "op": "b-",
      "defined_out": [
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0"
      ]
    },
    "3111": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "to_encode%4#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "to_encode%4#0 (copy)"
      ]
    },
    "3112": {
      "op": "len",
      "defined_out": [
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "value_len%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "value_len%5#0"
      ]
    },
    "3113": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "value_len%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "value_len%5#0",
        "32"
      ]
    },
    "3114": {
      "op": "<=",
      "defined_out": [
        "len_ok%5#0",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "len_ok%5#0"
      ]
    },
    "3115": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0"
      ]
    },
    "3116": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "bzero%0#0"
      ]
    },
    "3118": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit\u2081#0",
        "to_encode%4#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%4#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "3119": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%4#0",
        "bzero%0#0 (copy)"
      ]
    },
    "3121": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%5#0",
        "bzero%0#0",
        "prevDeposit\u2081#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%5#0"
      ]
    },
    "3122": {
      "op": "frame_dig 6",
      "defined_out": [
        "arc4_encoded%5#0",
        "bzero%0#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%5#0",
        "tmp%47#0"
      ]
    },
    "3124": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%47#0",
        "arc4_encoded%5#0"
      ]
    },
    "3125": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0"
      ]
    },
    "3126": {
      "op": "frame_dig 16",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "3128": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "game#0 (copy)",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "3129": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)"
      ]
    },
    "3131": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "tmp%53#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%53#0"
      ]
    },
    "3134": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "tmp%53#0",
        "tmp%53#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%53#0",
        "tmp%53#0 (copy)"
      ]
    },
    "3135": {
      "op": "dig 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%53#0",
        "tmp%53#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3137": {
      "op": "b>=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "tmp%53#0",
        "tmp%54#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%53#0",
        "tmp%54#0"
      ]
    },
    "3138": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%53#0"
      ]
    },
    "3139": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%53#0",
        "winAmount#0 (copy)"
      ]
    },
    "3141": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "to_encode%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0"
      ]
    },
    "3142": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "to_encode%5#0",
        "to_encode%5#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ]
    },
    "3143": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "to_encode%5#0",
        "value_len%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "value_len%6#0"
      ]
    },
    "3144": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "value_len%6#0",
        "32"
      ]
    },
    "3145": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%6#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "to_encode%5#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0",
        "len_ok%6#0"
      ]
    },
    "3146": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%5#0"
      ]
    },
    "3147": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "to_encode%5#0",
        "bzero%0#0"
      ]
    },
    "3149": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "arc4_encoded%6#0"
      ]
    },
    "3150": {
      "op": "frame_dig 15",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "arc4_encoded%6#0",
        "tmp%4#0"
      ]
    },
    "3152": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "arc4_encoded%6#0",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "3153": {
      "op": "cover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%6#0",
        "tmp%4#0 (copy)"
      ]
    },
    "3155": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%6#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%15#0",
        "maybe_value%15#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%6#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3156": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "arc4_encoded%6#0",
        "maybe_value%15#0"
      ]
    },
    "3157": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "maybe_value%15#0",
        "arc4_encoded%6#0"
      ]
    },
    "3158": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%4#0",
        "tmp%47#0",
        "updated_data%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%4#0",
        "updated_data%6#0"
      ]
    },
    "3160": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0"
      ]
    },
    "3161": {
      "op": "frame_dig 12",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0"
      ]
    },
    "3163": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3164": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%16#0",
        "maybe_value%16#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3165": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%16#0"
      ]
    },
    "3166": {
      "op": "bytec 15 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "bzero%0#0",
        "game#0",
        "maybe_value%16#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "maybe_value%16#0",
        "0x0000000000000002"
      ]
    },
    "3168": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "updated_data%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "tmp%0#0",
        "updated_data%7#0"
      ]
    },
    "3170": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0"
      ]
    },
    "3171": {
      "op": "itxn_begin"
    },
    "3172": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3174": {
      "op": "frame_dig 13",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0"
      ]
    },
    "3176": {
      "error": "Index access is out of bounds",
      "op": "extract 96 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0"
      ]
    },
    "3179": {
      "op": "frame_dig 10",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "value_len%0#0"
      ]
    },
    "3181": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "value_len%0#0",
        "8"
      ]
    },
    "3182": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "len_ok%7#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "len_ok%7#0"
      ]
    },
    "3183": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0"
      ]
    },
    "3184": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "8"
      ]
    },
    "3185": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "bzero%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "winAmount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "bzero%7#0"
      ]
    },
    "3186": {
      "op": "uncover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "bzero%7#0",
        "winAmount#0"
      ]
    },
    "3188": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%7#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "arc4_encoded%7#0"
      ]
    },
    "3189": {
      "op": "btoi",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3190": {
      "op": "uncover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "game#0"
      ]
    },
    "3192": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "game#0",
        "32"
      ]
    },
    "3193": {
      "op": "extract_uint64",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "tmp%58#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3194": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3196": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%58#0"
      ]
    },
    "3198": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3200": {
      "op": "itxn_field Sender",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3202": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "4"
      ]
    },
    "3204": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3206": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2081#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%47#0",
        "value_len%0#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0"
      ]
    },
    "3207": {
      "op": "itxn_field Fee",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3209": {
      "op": "itxn_submit"
    },
    "3210": {
      "block": "ClaimGame_after_if_else@15",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 16",
      "defined_out": [
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "3212": {
      "op": "intc 6 // 322",
      "defined_out": [
        "322",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "322"
      ]
    },
    "3214": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%2#0"
      ]
    },
    "3215": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "3216": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "game#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "3217": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "3219": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0",
        "game#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%2#0"
      ]
    },
    "3220": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "3221": {
      "op": "getbit",
      "defined_out": [
        "game#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%60#0"
      ]
    },
    "3222": {
      "op": "bz ClaimGame_after_if_else@22",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3225": {
      "op": "bytec_1 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "game#0",
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3226": {
      "op": "frame_bury 4",
      "defined_out": [
        "game#0",
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3228": {
      "op": "frame_dig 14",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "3230": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%61#0"
      ]
    },
    "3233": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%61#0",
        "\"d\""
      ]
    },
    "3235": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "\"d\"",
        "tmp%61#0"
      ]
    },
    "3236": {
      "op": "concat",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%62#0"
      ]
    },
    "3237": {
      "op": "dup",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%62#0",
        "tmp%62#0"
      ]
    },
    "3238": {
      "op": "frame_bury 7",
      "defined_out": [
        "game#0",
        "key#0",
        "prevDeposit\u2082#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%62#0"
      ]
    },
    "3240": {
      "op": "box_len",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%17#0",
        "maybe_value%17#0",
        "prevDeposit\u2082#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3241": {
      "op": "bury 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%17#0"
      ]
    },
    "3243": {
      "op": "bz ClaimGame_after_if_else@18",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3246": {
      "op": "frame_dig 7",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%62#0"
      ]
    },
    "3248": {
      "op": "box_get",
      "defined_out": [
        "game#0",
        "key#0",
        "maybe_exists%18#0",
        "prevDeposit\u2082#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "maybe_exists%18#0"
      ]
    },
    "3249": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%18#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3250": {
      "op": "frame_bury 4",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_exists%18#0"
      ]
    },
    "3252": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3253": {
      "block": "ClaimGame_after_if_else@18",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "prevDeposit\u2082#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3255": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)"
      ]
    },
    "3256": {
      "op": "frame_dig 8",
      "defined_out": [
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0"
      ]
    },
    "3258": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0",
        "winAmount#0 (copy)"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3259": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0",
        "prevDeposit\u2082#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3261": {
      "op": "b>=",
      "defined_out": [
        "prevDeposit\u2082#0",
        "tmp%65#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0",
        "tmp%65#0"
      ]
    },
    "3262": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0"
      ]
    },
    "3263": {
      "op": "dig 1",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "prevDeposit\u2082#0",
        "winAmount#0 (copy)"
      ]
    },
    "3265": {
      "op": "b-",
      "defined_out": [
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0"
      ]
    },
    "3266": {
      "op": "dup",
      "defined_out": [
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "to_encode%6#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ]
    },
    "3267": {
      "op": "len",
      "defined_out": [
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "value_len%8#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "value_len%8#0"
      ]
    },
    "3268": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "value_len%8#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "value_len%8#0",
        "32"
      ]
    },
    "3269": {
      "op": "<=",
      "defined_out": [
        "len_ok%8#0",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "len_ok%8#0"
      ]
    },
    "3270": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0"
      ]
    },
    "3271": {
      "op": "frame_dig 1",
      "defined_out": [
        "bzero%0#0",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "bzero%0#0"
      ]
    },
    "3273": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "prevDeposit\u2082#0",
        "to_encode%6#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "winAmount#0",
        "to_encode%6#0",
        "bzero%0#0 (copy)",
        "bzero%0#0 (copy)"
      ]
    },
    "3274": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "to_encode%6#0",
        "bzero%0#0 (copy)"
      ]
    },
    "3276": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%8#0",
        "bzero%0#0",
        "prevDeposit\u2082#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%8#0"
      ]
    },
    "3277": {
      "op": "frame_dig 7",
      "defined_out": [
        "arc4_encoded%8#0",
        "bzero%0#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "arc4_encoded%8#0",
        "tmp%62#0"
      ]
    },
    "3279": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%62#0",
        "arc4_encoded%8#0"
      ]
    },
    "3280": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0"
      ]
    },
    "3281": {
      "op": "frame_dig 16",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0"
      ]
    },
    "3283": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "game#0 (copy)",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "3284": {
      "op": "cover 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "game#0 (copy)"
      ]
    },
    "3286": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "tmp%68#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%68#0"
      ]
    },
    "3289": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "tmp%68#0",
        "tmp%68#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%68#0",
        "tmp%68#0 (copy)"
      ]
    },
    "3290": {
      "op": "dig 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%68#0",
        "tmp%68#0 (copy)",
        "winAmount#0 (copy)"
      ]
    },
    "3292": {
      "op": "b>=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "tmp%68#0",
        "tmp%69#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%68#0",
        "tmp%69#0"
      ]
    },
    "3293": {
      "error": "There is not enough money in the sc to cover this win tx",
      "op": "assert // There is not enough money in the sc to cover this win tx",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "winAmount#0",
        "tmp%68#0"
      ]
    },
    "3294": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "tmp%68#0",
        "winAmount#0"
      ]
    },
    "3295": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "to_encode%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0"
      ]
    },
    "3296": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "to_encode%7#0",
        "to_encode%7#0 (copy)",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "to_encode%7#0 (copy)"
      ]
    },
    "3297": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "to_encode%7#0",
        "value_len%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "value_len%9#0"
      ]
    },
    "3298": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "value_len%9#0",
        "32"
      ]
    },
    "3299": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "len_ok%9#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "to_encode%7#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0",
        "len_ok%9#0"
      ]
    },
    "3300": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "bzero%0#0",
        "to_encode%7#0"
      ]
    },
    "3301": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "arc4_encoded%9#0"
      ]
    },
    "3302": {
      "op": "frame_dig 15",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "arc4_encoded%9#0",
        "tmp%4#0"
      ]
    },
    "3304": {
      "op": "dup",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "arc4_encoded%9#0",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "3305": {
      "op": "cover 2",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "arc4_encoded%9#0",
        "tmp%4#0 (copy)"
      ]
    },
    "3307": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%9#0",
        "bzero%0#0",
        "game#0",
        "maybe_exists%19#0",
        "maybe_value%19#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "arc4_encoded%9#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3308": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "arc4_encoded%9#0",
        "maybe_value%19#0"
      ]
    },
    "3309": {
      "op": "swap",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "maybe_value%19#0",
        "arc4_encoded%9#0"
      ]
    },
    "3310": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%4#0",
        "tmp%62#0",
        "updated_data%8#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%4#0",
        "updated_data%8#0"
      ]
    },
    "3312": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "3313": {
      "op": "frame_dig 12",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0"
      ]
    },
    "3315": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3316": {
      "op": "box_get",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "maybe_exists%20#0",
        "maybe_value%20#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "3317": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "maybe_value%20#0"
      ]
    },
    "3318": {
      "op": "bytec 15 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "bzero%0#0",
        "game#0",
        "maybe_value%20#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "maybe_value%20#0",
        "0x0000000000000002"
      ]
    },
    "3320": {
      "op": "replace2 0",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "updated_data%9#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "tmp%0#0",
        "updated_data%9#0"
      ]
    },
    "3322": {
      "op": "box_put",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0"
      ]
    },
    "3323": {
      "op": "itxn_begin"
    },
    "3324": {
      "op": "intc_1 // 32",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "game#0",
        "32"
      ]
    },
    "3325": {
      "op": "extract_uint64",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3326": {
      "op": "frame_dig 13",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0"
      ]
    },
    "3328": {
      "error": "Index access is out of bounds",
      "op": "extract 96 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "tmp%74#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "tmp%74#0"
      ]
    },
    "3331": {
      "op": "bytec 11 // method \"arc200_transfer(address,uint256)bool\"",
      "defined_out": [
        "Method(arc200_transfer(address,uint256)bool)",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "tmp%74#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "tmp%74#0",
        "Method(arc200_transfer(address,uint256)bool)"
      ]
    },
    "3333": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "tmp%74#0"
      ]
    },
    "3335": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3337": {
      "op": "frame_dig 0",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "arc4_encoded%0#0"
      ]
    },
    "3339": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3341": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3343": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "6"
      ]
    },
    "3345": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3347": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arc4_encoded%0#0",
        "bzero%0#0",
        "game#0",
        "play#0",
        "prevDeposit\u2082#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%62#0",
        "winAmount#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "0"
      ]
    },
    "3348": {
      "op": "itxn_field Fee",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3350": {
      "op": "itxn_submit"
    },
    "3351": {
      "block": "ClaimGame_after_if_else@22",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "tmp%0#0"
      ]
    },
    "3353": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%21#0",
        "maybe_value%21#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "3354": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "maybe_value%21#0"
      ]
    },
    "3355": {
      "op": "frame_bury 0"
    },
    "3357": {
      "retsub": true,
      "op": "retsub"
    },
    "3358": {
      "block": "ClaimGame_else_body@21",
      "stack_in": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0"
      ]
    },
    "3360": {
      "op": "frame_dig 16",
      "defined_out": [
        "game#0",
        "key#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0"
      ]
    },
    "3362": {
      "op": "frame_dig 13",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "3364": {
      "op": "frame_dig 11",
      "defined_out": [
        "game#0",
        "key#0",
        "play#0",
        "sender#0"
      ],
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0",
        "sender#0"
      ]
    },
    "3366": {
      "callsub": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.LooseGame",
      "op": "callsub LooseGame",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0",
        "key#0",
        "game#0",
        "play#0"
      ]
    },
    "3369": {
      "op": "popn 3",
      "stack_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "prevDeposit#0",
        "prevDeposit\u2081#0",
        "prevDeposit\u2082#0",
        "tmp%33#0",
        "tmp%47#0",
        "tmp%62#0",
        "winAmount#0",
        "tmp%16#0",
        "value_len%0#0",
        "sender#0",
        "tmp%0#0",
        "play#0",
        "key#0",
        "tmp%4#0",
        "game#0",
        "tmp%7#0"
      ]
    },
    "3371": {
      "op": "b ClaimGame_after_if_else@22"
    },
    "3374": {
      "subroutine": "smart_contracts/avm_satoshi_dice/contract.algo.ts::AvmSatoshiDice.LooseGame",
      "params": {
        "key#0": "bytes",
        "game#0": "bytes",
        "play#0": "bytes",
        "sender#0": "bytes"
      },
      "block": "LooseGame",
      "stack_in": [],
      "op": "proto 4 3"
    },
    "3377": {
      "op": "bytec 5 // \"g\"",
      "defined_out": [
        "\"g\""
      ],
      "stack_out": [
        "\"g\""
      ]
    },
    "3379": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"g\"",
        "key#0 (copy)"
      ],
      "stack_out": [
        "\"g\"",
        "key#0 (copy)"
      ]
    },
    "3381": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3382": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3383": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3384": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3385": {
      "op": "pushint 145 // 145",
      "defined_out": [
        "145",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "145"
      ]
    },
    "3388": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "3389": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "1000000"
      ]
    },
    "3391": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "1000000",
        "tmp%2#0"
      ]
    },
    "3392": {
      "op": "-",
      "defined_out": [
        "gameProfitRatio#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "gameProfitRatio#0"
      ]
    },
    "3393": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "gameProfitRatio#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "gameProfitRatio#0",
        "5"
      ]
    },
    "3395": {
      "op": "/",
      "defined_out": [
        "feeRatio#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "feeRatio#0"
      ]
    },
    "3396": {
      "op": "frame_dig -2",
      "defined_out": [
        "feeRatio#0",
        "play#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "feeRatio#0",
        "play#0 (copy)"
      ]
    },
    "3398": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "feeRatio#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "feeRatio#0",
        "tmp%3#0"
      ]
    },
    "3401": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "feeRatio#0"
      ]
    },
    "3402": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "3403": {
      "op": "dig 1",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "reinterpret_biguint%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3405": {
      "op": "b*",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "3406": {
      "op": "bytec 9 // 0x0f4240",
      "defined_out": [
        "0x0f4240",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "0x0f4240"
      ]
    },
    "3408": {
      "op": "b/",
      "defined_out": [
        "fee#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0"
      ]
    },
    "3409": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "key#0 (copy)"
      ]
    },
    "3411": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%5#0"
      ]
    },
    "3414": {
      "op": "bytec 4 // \"d\"",
      "defined_out": [
        "\"d\"",
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%5#0",
        "\"d\""
      ]
    },
    "3416": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "\"d\"",
        "tmp%5#0"
      ]
    },
    "3417": {
      "op": "concat",
      "defined_out": [
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0"
      ]
    },
    "3418": {
      "op": "dup",
      "defined_out": [
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ]
    },
    "3419": {
      "op": "box_get",
      "defined_out": [
        "fee#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3420": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "maybe_value%1#0"
      ]
    },
    "3421": {
      "op": "dig 2",
      "defined_out": [
        "fee#0",
        "fee#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "maybe_value%1#0",
        "fee#0 (copy)"
      ]
    },
    "3423": {
      "op": "b-",
      "defined_out": [
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "3424": {
      "op": "dup",
      "defined_out": [
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "3425": {
      "op": "len",
      "defined_out": [
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0",
        "value_len%0#0"
      ]
    },
    "3426": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "to_encode%0#0",
        "value_len%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0",
        "value_len%0#0",
        "32"
      ]
    },
    "3427": {
      "op": "<=",
      "defined_out": [
        "fee#0",
        "len_ok%0#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0",
        "len_ok%0#0"
      ]
    },
    "3428": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "3429": {
      "op": "intc_1 // 32",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0",
        "32"
      ]
    },
    "3430": {
      "op": "bzero",
      "defined_out": [
        "bzero%0#0",
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "to_encode%0#0",
        "bzero%0#0"
      ]
    },
    "3431": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "bzero%0#0",
        "to_encode%0#0"
      ]
    },
    "3432": {
      "op": "dig 1",
      "defined_out": [
        "bzero%0#0",
        "bzero%0#0 (copy)",
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "bzero%0#0",
        "to_encode%0#0",
        "bzero%0#0 (copy)"
      ]
    },
    "3434": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%0#0",
        "bzero%0#0",
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "tmp%6#0",
        "bzero%0#0",
        "arc4_encoded%0#0"
      ]
    },
    "3435": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "bzero%0#0",
        "arc4_encoded%0#0",
        "tmp%6#0"
      ]
    },
    "3437": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "bzero%0#0",
        "tmp%6#0",
        "arc4_encoded%0#0"
      ]
    },
    "3438": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "bzero%0#0"
      ]
    },
    "3439": {
      "op": "frame_dig -3",
      "defined_out": [
        "bzero%0#0",
        "fee#0",
        "game#0 (copy)",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "bzero%0#0",
        "game#0 (copy)"
      ]
    },
    "3441": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "bzero%0#0",
        "fee#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "fee#0",
        "bzero%0#0",
        "tmp%9#0"
      ]
    },
    "3444": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "fee#0",
        "bzero%0#0",
        "tmp%9#0",
        "tmp%3#0"
      ]
    },
    "3446": {
      "op": "b+",
      "defined_out": [
        "bzero%0#0",
        "fee#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fee#0",
        "bzero%0#0",
        "tmp%11#0"
      ]
    },
    "3447": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "bzero%0#0",
        "tmp%11#0",
        "fee#0"
      ]
    },
    "3449": {
      "op": "b-",
      "defined_out": [
        "bzero%0#0",
        "tmp%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "bzero%0#0",
        "to_encode%1#0"
      ]
    },
    "3450": {
      "op": "dup",
      "defined_out": [
        "bzero%0#0",
        "tmp%0#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "bzero%0#0",
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "3451": {
      "op": "len",
      "defined_out": [
        "bzero%0#0",
        "tmp%0#0",
        "to_encode%1#0",
        "value_len%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "bzero%0#0",
        "to_encode%1#0",
        "value_len%1#0"
      ]
    },
    "3452": {
      "op": "intc_1 // 32",
      "stack_out": [
        "tmp%0#0",
        "bzero%0#0",
        "to_encode%1#0",
        "value_len%1#0",
        "32"
      ]
    },
    "3453": {
      "op": "<=",
      "defined_out": [
        "bzero%0#0",
        "len_ok%1#0",
        "tmp%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "bzero%0#0",
        "to_encode%1#0",
        "len_ok%1#0"
      ]
    },
    "3454": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "bzero%0#0",
        "to_encode%1#0"
      ]
    },
    "3455": {
      "op": "b|",
      "defined_out": [
        "arc4_encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "arc4_encoded%1#0"
      ]
    },
    "3456": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "arc4_encoded%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3458": {
      "op": "box_get",
      "defined_out": [
        "arc4_encoded%1#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "arc4_encoded%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3459": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "arc4_encoded%1#0",
        "maybe_value%2#0"
      ]
    },
    "3460": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "arc4_encoded%1#0"
      ]
    },
    "3461": {
      "op": "replace2 0",
      "defined_out": [
        "tmp%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "updated_data%0#0"
      ]
    },
    "3463": {
      "op": "box_put",
      "stack_out": []
    },
    "3464": {
      "op": "bytec 7 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "\"p\""
      ]
    },
    "3466": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"p\"",
        "sender#0 (copy)"
      ],
      "stack_out": [
        "\"p\"",
        "sender#0 (copy)"
      ]
    },
    "3468": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "3469": {
      "op": "dup",
      "defined_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "3470": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3471": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%13#0",
        "maybe_value%3#0"
      ]
    },
    "3472": {
      "op": "pushbytes 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "maybe_value%3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "maybe_value%3#0",
        "0x0000000000000003"
      ]
    },
    "3482": {
      "op": "replace2 0",
      "defined_out": [
        "tmp%13#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "updated_data%1#0"
      ]
    },
    "3484": {
      "op": "box_put",
      "stack_out": []
    },
    "3485": {
      "op": "frame_dig -4",
      "stack_out": [
        "key#0 (copy)"
      ]
    },
    "3487": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0 (copy)",
        "game#0 (copy)"
      ]
    },
    "3489": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0 (copy)",
        "game#0 (copy)",
        "play#0 (copy)"
      ]
    },
    "3491": {
      "retsub": true,
      "op": "retsub"
    }
  }
}